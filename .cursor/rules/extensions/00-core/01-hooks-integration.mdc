---
alwaysApply: ${cursor.file.path.includes("layer/") || cursor.file.path.includes("hooks/")}
---

# –ü—Ä–∞–≤–∏–ª–æ 01: –•—É–∫–∏ –∏ —Ç–æ—á–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ —Ä–∞–±–æ—Ç—ã —Å —Ö—É–∫–∞–º–∏ –∏ —Ç–æ—á–∫–∞–º–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ —Å–∏—Å—Ç–µ–º–µ —Å–±–æ—Ä–∫–∏ rpi-image-gen.

## –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

## –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Ö—É–∫–æ–≤

### –¢–∏–ø—ã —Ö—É–∫–æ–≤ –≤ rpi-image-gen

#### 1. **mmdebstrap customize-hooks**
–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ö–∞–Ω–∏–∑–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å —Å–±–æ—Ä–∫–∏ –§–°:

```yaml
mmdebstrap:
  customize-hooks:
    - |
      # Shell —Å–∫—Ä–∏–ø—Ç, –≤—ã–ø–æ–ª–Ω—è—é—â–∏–π—Å—è –Ω–∞ —ç—Ç–∞–ø–µ customize
      set -euo pipefail
      echo "Customizing system..."

      # –í–∞—à–∞ –ª–æ–≥–∏–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
      configure_service
```

#### 2. **Layer-specific hooks**
–•—É–∫–∏, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö —Å–ª–æ—è:

```
layer/
‚îú‚îÄ‚îÄ my-layer.yaml          # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª —Å–ª–æ—è
‚îî‚îÄ‚îÄ hooks/
    ‚îú‚îÄ‚îÄ setup.sh          # –•—É–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    ‚îú‚îÄ‚îÄ customize.sh      # –•—É–∫ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏
    ‚îî‚îÄ‚îÄ cleanup.sh        # –•—É–∫ –æ—á–∏—Å—Ç–∫–∏
```

#### 3. **Image-specific hooks**
–•—É–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ–±—Ä–∞–∑–æ–≤:

```yaml
image/
‚îú‚îÄ‚îÄ mbr/
‚îÇ   ‚îî‚îÄ‚îÄ hybrid-raid-luks/
‚îÇ       ‚îî‚îÄ‚îÄ device/
‚îÇ           ‚îî‚îÄ‚îÄ rootfs-overlay/
‚îÇ               ‚îî‚îÄ‚îÄ etc/
‚îÇ                   ‚îî‚îÄ‚îÄ systemd/
‚îÇ                       ‚îî‚îÄ‚îÄ system/
‚îÇ                           ‚îî‚îÄ‚îÄ disk-expansion.service
```

### –≠—Ç–∞–ø—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ö—É–∫–æ–≤

#### –ü–æ—Ä—è–¥–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ mmdebstrap
1. **setup-hooks** - –í—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –¥–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
2. **essential-hooks** - –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ essential –ø–∞–∫–µ—Ç–æ–≤
3. **customize-hooks** - –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –ø–∞–∫–µ—Ç–æ–≤ (–æ—Å–Ω–æ–≤–Ω–æ–π —ç—Ç–∞–ø)
4. **cleanup-hooks** - –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞

#### –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—è–¥–æ–∫ –≤ rpi-image-gen
```
1. Parameter Assembly     (—Å–±–æ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤)
2. Layer Processing       (–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª–æ–µ–≤)
3. Build Preparation      (–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞)
4. ‚îú‚îÄ‚îÄ mmdebstrap setup
5. ‚îú‚îÄ‚îÄ Install essential packages
6. ‚îú‚îÄ‚îÄ mmdebstrap customize-hooks ‚Üê –û–°–ù–û–í–ù–û–ô –≠–¢–ê–ü
7. ‚îú‚îÄ‚îÄ rootfs-overlay application
8. ‚îú‚îÄ‚îÄ Additional layer processing
9. Image Generation       (—Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞)
```

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ customize-hooks

#### –ë–∞–∑–æ–≤—ã–π —à–∞–±–ª–æ–Ω —Ö—É–∫–∞
```bash
#!/bin/bash
# rpi-image-gen customize hook for my-layer
set -euo pipefail

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
error_handler() {
  echo "ERROR: Hook failed in my-layer" >&2
  exit 1
}
trap error_handler ERR

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
  echo "üîß Configuring my-layer..."

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  validate_environment

  # –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
  backup_existing_config

  # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  apply_configuration

  # –í–∞–ª–∏–¥–∞—Ü–∏—è
  validate_configuration

  echo "‚úÖ my-layer configured successfully"
}

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
validate_environment() {
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —É—Å–ª–æ–≤–∏–π
  if [[ ! -d /etc ]]; then
    echo "ERROR: /etc directory not found" >&2
    exit 1
  fi
}

backup_existing_config() {
  # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
  local config_file="/etc/my-service.conf"
  if [[ -f "$config_file" ]] && [[ ! -f "${config_file}.backup" ]]; then
    cp "$config_file" "${config_file}.backup"
    echo "üìã Backed up existing configuration"
  fi
}

apply_configuration() {
  # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  cat > /etc/my-service.conf << EOF
# Generated by my-layer v${IGconf_my_layer_version:-1.0.0}
setting1=${IGconf_my_layer_setting1:-default}
setting2=${IGconf_my_layer_setting2:-default}
EOF
}

validate_configuration() {
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  if [[ ! -f /etc/my-service.conf ]]; then
    echo "ERROR: Configuration file not created" >&2
    exit 1
  fi
}

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
main "$@"
```

### Rootfs-overlay –º–µ—Ö–∞–Ω–∏–∑–º

#### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ overlay
```yaml
mmdebstrap:
  rootfs-overlay:
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    etc/my-service/config.conf: |
      # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
      key1=value1
      key2=value2

    # –°–∫—Ä–∏–ø—Ç—ã
    usr/local/bin/my-status: |
      #!/bin/bash
      echo "Service status"
      systemctl status my-service

    # Systemd —Å–µ—Ä–≤–∏—Å—ã
    etc/systemd/system/my-service.service: |
      [Unit]
      Description=My Service
      After=network.target

      [Service]
      Type=simple
      ExecStart=/usr/local/bin/my-service
      Restart=always

      [Install]
      WantedBy=multi-user.target

    # Profile —Å–∫—Ä–∏–ø—Ç—ã (–∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞)
    etc/profile.d/my-status.sh: |
      # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–∏ –ª–æ–≥–∏–Ω–µ
      if [[ -x /usr/local/bin/my-status ]]; then
        echo "Service Status:"
        /usr/local/bin/my-status | head -5
        echo
      fi
```

#### –ü—Ä–∞–≤–∏–ª–∞ —Ä–∞–±–æ—Ç—ã —Å overlay
- **–ü—É—Ç–∏**: –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç –∫–æ—Ä–Ω—è –§–° (`/` = –∫–æ—Ä–µ–Ω—å —Ü–µ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã)
- **–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞**: –°–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `install` –∏–ª–∏ `chmod` –≤ —Ö—É–∫–∞—Ö)
- **–ü–µ—Ä–µ–∑–∞–ø–∏—Å—å**: –ù–æ–≤—ã–µ —Ñ–∞–π–ª—ã –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—é—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ
- **–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π**: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏

### –ò–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å —Ö—É–∫–æ–≤

#### –ü—Ä–∏–Ω—Ü–∏–ø—ã –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
```bash
# ‚ùå –ù–ï–ò–î–ï–ú–ü–û–¢–ï–ù–¢–ù–û - –¥–æ–±–∞–≤–ª—è–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç—ã
echo "nameserver 8.8.8.8" >> /etc/resolv.conf

# ‚úÖ –ò–î–ï–ú–ü–û–¢–ï–ù–¢–ù–û - –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
add_nameserver() {
  local nameserver="8.8.8.8"
  if ! grep -q "^nameserver $nameserver$" /etc/resolv.conf; then
    echo "nameserver $nameserver" >> /etc/resolv.conf
    echo "‚úÖ Added nameserver $nameserver"
  else
    echo "‚ö™ Nameserver $nameserver already configured"
  fi
}
```

#### –®–∞–±–ª–æ–Ω—ã –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
```bash
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π)
add_to_file() {
  local file="$1"
  local content="$2"
  local marker="$3"

  if ! grep -q "$marker" "$file" 2>/dev/null; then
    echo "$content" >> "$file"
    echo "‚úÖ Added to $file"
  else
    echo "‚ö™ Already in $file"
  fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ (—Å –±—ç–∫–∞–ø–æ–º)
create_config_file() {
  local file="$1"
  local content="$2"

  # –ë—ç–∫–∞–ø —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞
  if [[ -f "$file" ]] && [[ ! -f "${file}.backup" ]]; then
    cp "$file" "${file}.backup"
  fi

  # –°–æ–∑–¥–∞–Ω–∏–µ/–ø–µ—Ä–µ–∑–∞–ø–∏—Å—å
  cat > "$file" << EOF
$content
EOF
  echo "‚úÖ Created $file"
}

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ systemd
manage_systemd_service() {
  local service="$1"
  local action="$2"  # enable/disable

  case "$action" in
    enable)
      if ! systemctl is-enabled "$service" 2>/dev/null; then
        systemctl enable "$service"
        echo "‚úÖ Enabled $service"
      fi
      ;;
    disable)
      if systemctl is-enabled "$service" 2>/dev/null; then
        systemctl disable "$service"
        echo "‚úÖ Disabled $service"
      fi
      ;;
  esac
}
```

### –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

#### –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
```bash
#!/bin/bash
set -euo pipefail  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!

# –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
error_handler() {
  local exit_code=$?
  echo "ERROR: Hook failed with exit code $exit_code" >&2
  echo "ERROR: Failed command: $BASH_COMMAND" >&2
  echo "ERROR: Line: $LINENO" >&2
  exit $exit_code
}
trap error_handler ERR

# –§—É–Ω–∫—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
cleanup_on_error() {
  echo "üßπ Cleaning up after error..."
  # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞
  if [[ -f /etc/my-service.conf.backup ]]; then
    mv /etc/my-service.conf.backup /etc/my-service.conf
    echo "‚úÖ Restored backup configuration"
  fi
}
trap cleanup_on_error EXIT

# –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
validate_inputs() {
  if [[ -z "${IGconf_my_setting:-}" ]]; then
    echo "ERROR: IGconf_my_setting is required" >&2
    exit 1
  fi

  case "${IGconf_my_mode:-default}" in
    default|advanced|minimal)
      ;;
    *)
      echo "ERROR: Invalid mode: ${IGconf_my_mode}" >&2
      exit 1
  esac
}
```

### –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ —Å–ª—É–∂–±–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è

#### Systemd —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º
```ini
# etc/systemd/system/my-service.service
[Unit]
Description=My Service
After=network.target
Requires=network.target

[Service]
Type=simple
ExecStart=/usr/local/bin/my-service
Restart=always          # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
RestartSec=10          # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º
StartLimitInterval=0   # –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∏

[Install]
WantedBy=multi-user.target
```

#### –°–∫—Ä–∏–ø—Ç—ã —Å—Ç–∞—Ç—É—Å–∞
```bash
#!/bin/bash
# /usr/local/bin/my-status
echo "=== My Service Status ==="
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
if systemctl is-active --quiet my-service 2>/dev/null; then
  echo "‚úÖ Service: running"
else
  echo "‚ùå Service: not running"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if [[ -f /etc/my-service.conf ]]; then
  echo "‚úÖ Configuration: present"
  echo "   Modified: $(stat -c '%y' /etc/my-service.conf)"
else
  echo "‚ùå Configuration: missing"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
if [[ -f /var/log/my-service.log ]]; then
  echo "‚úÖ Logs: present"
  echo "   Last entries:"
  tail -3 /var/log/my-service.log | sed 's/^/   /'
else
  echo "‚ö†Ô∏è  Logs: not found"
fi
```

### –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è

#### –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ IGconf_* –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
```bash
#!/bin/bash
set -euo pipefail

# –ó–Ω–∞—á–µ–Ω–∏—è —Å fallback
SERVICE_PORT="${IGconf_my_service_port:-8080}"
SERVICE_MODE="${IGconf_my_service_mode:-production}"
DEBUG_ENABLED="${IGconf_my_service_debug:-false}"

# –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
case "$SERVICE_MODE" in
  development|staging|production)
    ;;
  *)
    echo "ERROR: Invalid service mode: $SERVICE_MODE" >&2
    exit 1
    ;;
esac

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
cat > /etc/my-service.conf << EOF
port=$SERVICE_PORT
mode=$SERVICE_MODE
debug=$DEBUG_ENABLED
EOF
```

### –ü–æ—Ä—è–¥–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–æ–µ–≤

#### –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É —Å–ª–æ—è–º–∏
```yaml
# METABEGIN
# X-Env-Layer-Name: my-application
# X-Env-Layer-Requires: base-system, networking, security
# X-Env-Layer-Provides: my-app
# METAEND

mmdebstrap:
  customize-hooks:
    - |
      # –≠—Ç–æ—Ç —Ö—É–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –ü–û–°–õ–ï —Ö—É–∫–æ–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      # base-system, networking, security —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
      configure_my_application
```

#### –§–∞–∑—ã –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–ª–æ–µ–≤
1. **Base layers** - –ë–∞–∑–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ (Debian, essential –ø–∞–∫–µ—Ç—ã)
2. **Infrastructure layers** - –°–µ—Ç—å, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
3. **Platform layers** - –ü–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
4. **Application layers** - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

### –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö—É–∫–æ–≤

#### –ú–æ–¥—É–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
```bash
#!/bin/bash
# tests/test-hooks.sh

# –¢–µ—Å—Ç –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
test_idempotency() {
  echo "Testing hook idempotency..."

  # –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
  ./hook.sh
  local first_run=$?

  # –í—Ç–æ—Ä–æ–π –∑–∞–ø—É—Å–∫
  ./hook.sh
  local second_run=$?

  if [[ $first_run -eq 0 ]] && [[ $second_run -eq 0 ]]; then
    echo "‚úÖ Idempotency test passed"
  else
    echo "‚ùå Idempotency test failed"
    return 1
  fi
}

# –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
test_validation() {
  echo "Testing input validation..."

  # –¢–µ—Å—Ç —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
  IGconf_test_setting=valid ./hook.sh
  if [[ $? -eq 0 ]]; then
    echo "‚úÖ Valid input test passed"
  else
    echo "‚ùå Valid input test failed"
    return 1
  fi

  # –¢–µ—Å—Ç —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
  IGconf_test_setting=invalid ./hook.sh 2>/dev/null
  if [[ $? -ne 0 ]]; then
    echo "‚úÖ Invalid input test passed"
  else
    echo "‚ùå Invalid input test failed"
    return 1
  fi
}
```

#### –û—Ç–ª–∞–¥–∫–∞ —Ö—É–∫–æ–≤
```bash
# –í–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç–ª–∞–¥–∫–∏ –≤ —Ö—É–∫–µ
set -x  # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω—è–µ–º—ã–µ –∫–æ–º–∞–Ω–¥—ã
set -v  # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
exec > >(tee -a /tmp/hook-debug.log) 2>&1
echo "Starting hook execution at $(date)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "Environment variables:"
env | grep "^IGconf_" | sort

echo "Current directory: $(pwd)"
echo "Target root: ${1:-not-set}"
```

### –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏

#### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–ª–æ–∂–Ω—ã—Ö —Ö—É–∫–æ–≤
```bash
#!/bin/bash
# –•–æ—Ä–æ—à–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ö—É–∫

set -euo pipefail

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
readonly CONFIG_FILE="/etc/my-service/config"
readonly SERVICE_NAME="my-service"
readonly BACKUP_SUFFIX=".backup.$(date +%Y%m%d_%H%M%S)"

# –§—É–Ω–∫—Ü–∏–∏
validate_prerequisites() {
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
}

setup_environment() {
  # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
}

backup_configuration() {
  # –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
}

apply_configuration() {
  # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
}

configure_service() {
  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
}

enable_service() {
  # –í–∫–ª—é—á–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫
}

cleanup() {
  # –û—á–∏—Å—Ç–∫–∞
}

main() {
  echo "üîß Configuring $SERVICE_NAME..."

  validate_prerequisites
  setup_environment
  backup_configuration
  apply_configuration
  configure_service
  enable_service

  echo "‚úÖ $SERVICE_NAME configured successfully"
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup EXIT
trap 'echo "ERROR: Hook interrupted" >&2; exit 1' INT TERM

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
main "$@"
```

#### –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö—É–∫–æ–≤
```yaml
mmdebstrap:
  customize-hooks:
    - |
      # Hook: Configure My Service
      # Purpose: Install and configure my-service with high availability
      # Dependencies: network, systemd
      # Variables:
      #   - IGconf_my_service_port: Service port (default: 8080)
      #   - IGconf_my_service_mode: Operation mode (development/staging/production)
      # Author: Team Name
      # Version: 1.2.0
      # Date: 2024-01-15

      set -euo pipefail
      # ... implementation ...
```

---

## –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- [ ] –ü—Ä–∞–≤–∏–ª–æ –∏–∑—É—á–µ–Ω–æ –∏ –ø–æ–Ω—è—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ CI/CD
- [ ] –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –º–µ—Ä–¥–∂–∞
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞
- [ ] –†–µ–≥—É–ª—è—Ä–Ω—ã–π –∞—É–¥–∏—Ç —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞

### –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- [ ] 100% —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ –Ω–æ–≤–æ–º –∫–æ–¥–µ
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–µ—Ç–∫–∞—Ö
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏—è
- [ ] –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –ø—Ä–∞–≤–∏–ª–∞

### –ò—Å—Ç–æ—á–Ω–∏–∫
–°–æ–∑–¥–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑—É—á–µ–Ω–∏—è –º–µ—Ö–∞–Ω–∏–∑–º–∞ —Ö—É–∫–æ–≤ –∏ —Ç–æ—á–µ–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ rpi-image-gen