---
alwaysApply: ${cursor.file.path.includes("layer/") || cursor.file.path.includes("hooks/")}
---

# –ü—Ä–∞–≤–∏–ª–æ 01-5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Ö—É–∫–æ–≤

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç—ã —Å —Ö—É–∫–∞–º–∏ –≤ rpi-image-gen.

### –ü–æ—Ä—è–¥–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–æ–µ–≤

#### –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É —Å–ª–æ—è–º–∏
```yaml
# METABEGIN
# X-Env-Layer-Name: my-application
# X-Env-Layer-Requires: base-system, networking, security
# X-Env-Layer-Provides: my-app
# METAEND

mmdebstrap:
  customize-hooks:
    - |
      # –≠—Ç–æ—Ç —Ö—É–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –ü–û–°–õ–ï —Ö—É–∫–æ–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      # base-system, networking, security —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
      configure_my_application
```

#### –§–∞–∑—ã –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–ª–æ–µ–≤
1. **Base layers** - –ë–∞–∑–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ (Debian, essential –ø–∞–∫–µ—Ç—ã)
2. **Infrastructure layers** - –°–µ—Ç—å, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
3. **Platform layers** - –ü–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
4. **Application layers** - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

### –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö—É–∫–æ–≤

#### –ú–æ–¥—É–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
```bash
#!/bin/bash
# tests/test-hooks.sh

# –¢–µ—Å—Ç –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
test_idempotency() {
  echo "Testing hook idempotency..."

  # –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
  ./hook.sh
  local first_run=$?

  # –í—Ç–æ—Ä–æ–π –∑–∞–ø—É—Å–∫
  ./hook.sh
  local second_run=$?

  if [[ $first_run -eq 0 ]] && [[ $second_run -eq 0 ]]; then
    echo "‚úÖ Idempotency test passed"
  else
    echo "‚ùå Idempotency test failed"
    return 1
  fi
}

# –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
test_validation() {
  echo "Testing input validation..."

  # –¢–µ—Å—Ç —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
  IGconf_test_setting=valid ./hook.sh
  if [[ $? -eq 0 ]]; then
    echo "‚úÖ Valid input test passed"
  else
    echo "‚ùå Valid input test failed"
    return 1
  fi

  # –¢–µ—Å—Ç —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
  IGconf_test_setting=invalid ./hook.sh 2>/dev/null
  if [[ $? -ne 0 ]]; then
    echo "‚úÖ Invalid input test passed"
  else
    echo "‚ùå Invalid input test failed"
    return 1
  fi
}
```

#### –û—Ç–ª–∞–¥–∫–∞ —Ö—É–∫–æ–≤
```bash
# –í–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç–ª–∞–¥–∫–∏ –≤ —Ö—É–∫–µ
set -x  # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω—è–µ–º—ã–µ –∫–æ–º–∞–Ω–¥—ã
set -v  # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
exec > >(tee -a /tmp/hook-debug.log) 2>&1
echo "Starting hook execution at $(date)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "Environment variables:"
env | grep "^IGconf_" | sort

echo "Current directory: $(pwd)"
echo "Target root: ${1:-not-set}"
```

### –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏

#### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–ª–æ–∂–Ω—ã—Ö —Ö—É–∫–æ–≤
```bash
#!/bin/bash
# –•–æ—Ä–æ—à–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ö—É–∫

set -euo pipefail

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
readonly CONFIG_FILE="/etc/my-service/config"
readonly SERVICE_NAME="my-service"
readonly BACKUP_SUFFIX=".backup.$(date +%Y%m%d_%H%M%S)"

# –§—É–Ω–∫—Ü–∏–∏
validate_prerequisites() {
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
}

setup_environment() {
  # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
}

backup_configuration() {
  # –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
}

apply_configuration() {
  # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
}

configure_service() {
  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
}

enable_service() {
  # –í–∫–ª—é—á–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫
}

cleanup() {
  # –û—á–∏—Å—Ç–∫–∞
}

main() {
  echo "üîß Configuring $SERVICE_NAME..."

  validate_prerequisites
  setup_environment
  backup_configuration
  apply_configuration
  configure_service
  enable_service

  echo "‚úÖ $SERVICE_NAME configured successfully"
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup EXIT
trap 'echo "ERROR: Hook interrupted" >&2; exit 1' INT TERM

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
main "$@"
```

#### –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö—É–∫–æ–≤
```yaml
mmdebstrap:
  customize-hooks:
    - |
      # Hook: Configure My Service
      # Purpose: Install and configure my-service with high availability
      # Dependencies: network, systemd
      # Variables:
      #   - IGconf_my_service_port: Service port (default: 8080)
      #   - IGconf_my_service_mode: Operation mode (development/staging/production)
      # Author: Team Name
      # Version: 1.2.0
      # Date: 2024-01-15

      set -euo pipefail
      # ... implementation ...
```

---

## –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- [ ] –ü—Ä–∞–≤–∏–ª–æ –∏–∑—É—á–µ–Ω–æ –∏ –ø–æ–Ω—è—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ CI/CD
- [ ] –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –º–µ—Ä–¥–∂–∞
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞
- [ ] –†–µ–≥—É–ª—è—Ä–Ω—ã–π –∞—É–¥–∏—Ç —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞

### –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- [ ] 100% —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ –Ω–æ–≤–æ–º –∫–æ–¥–µ
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–µ—Ç–∫–∞—Ö
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏—è
- [ ] –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –ø—Ä–∞–≤–∏–ª–∞

### –ò—Å—Ç–æ—á–Ω–∏–∫
–°–æ–∑–¥–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑—É—á–µ–Ω–∏—è –º–µ—Ö–∞–Ω–∏–∑–º–∞ —Ö—É–∫–æ–≤ –∏ —Ç–æ—á–µ–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ rpi-image-gen