---
alwaysApply: ${cursor.file.path.endsWith(".sh") || cursor.file.path.endsWith(".yaml") || cursor.file.path.includes("layer/") || cursor.file.path.includes("config/")}
---

# –ü—Ä–∞–≤–∏–ª–æ 02-1: –ü—Ä–∏–Ω—Ü–∏–ø—ã –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ rpi-image-gen

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π rpi-image-gen —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≤ Cursor IDE.

## –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

## –ü—Ä–∏–Ω—Ü–∏–ø—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

### –ú–∏–Ω–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π (Principle of Least Privilege)

#### –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥
```bash
# ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û - –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—è–º–∏
if [[ "$EUID" -eq 0 ]]; then
    # –î–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π —Ç—Ä–µ–±—É—é—â–∏—Ö root
    run_operation_as_root
else
    # –î–ª—è –æ–±—ã—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    run_operation_as_user
fi

# –°–æ–∑–¥–∞–Ω–∏–µ dedicated –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞
SERVICE_USER="${IGconf_service_user:-app-user}"
if ! id -u "$SERVICE_USER" >/dev/null 2>&1; then
    useradd --system --shell /bin/false --home "/var/lib/$SERVICE_USER" "$SERVICE_USER"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
chown -R "$SERVICE_USER:$SERVICE_USER" "/var/lib/$SERVICE_USER"
chmod 750 "/var/lib/$SERVICE_USER"
```

#### –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
```bash
# ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û - –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
TEMP_DIR=$(mktemp -d --suffix=".$$")
TEMP_FILE=$(mktemp --suffix=".$$")

# –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
trap 'rm -rf "$TEMP_DIR"; rm -f "$TEMP_FILE"' EXIT INT TERM

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ uchroot –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏
uchroot "$TEMP_DIR" bash -c "isolated_operation"
```

### –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

#### –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤
```bash
# ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û - –≤–∞–ª–∏–¥–∞—Ü–∏—è TLS –∏ MQTT –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
validate_modern_protocols() {
    local mqtt_broker="${IGconf_mqtt_broker}"
    local mqtt_port="${IGconf_mqtt_port:-8883}"
    local enable_tls="${IGconf_enable_tls:-true}"

    # –í–∞–ª–∏–¥–∞—Ü–∏—è MQTT –±—Ä–æ–∫–µ—Ä–∞
    if [[ -z "$mqtt_broker" ]]; then
        die "MQTT broker is required"
    fi

    if ! [[ "$mqtt_broker" =~ ^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
        die "Invalid MQTT broker hostname: $mqtt_broker"
    fi

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ—Ä—Ç–∞ —Å —É—á–µ—Ç–æ–º TLS
    if [[ "$enable_tls" = "true" ]]; then
        if ! [[ "$mqtt_port" =~ ^(8883|8884|443)$ ]]; then
            die "TLS enabled but port is not secure: $mqtt_port"
        fi
    else
        if ! [[ "$mqtt_port" =~ ^(1883|1884|80)$ ]]; then
            die "TLS disabled but port is secure: $mqtt_port"
        fi
    fi
}

# –í–∞–ª–∏–¥–∞—Ü–∏—è A/B boot –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
validate_ab_boot() {
    local tryboot_timeout="${IGconf_tryboot_timeout:-10}"
    local enable_fallback="${IGconf_enable_fallback:-true}"

    if ! [[ "$tryboot_timeout" =~ ^[0-9]+$ ]] || [[ "$tryboot_timeout" -lt 5 ]] || [[ "$tryboot_timeout" -gt 60 ]]; then
        die "Invalid tryboot timeout: $tryboot_timeout (must be 5-60 seconds)"
    fi

    if [[ "$enable_fallback" != "true" && "$enable_fallback" != "false" ]]; then
        die "enable_fallback must be true or false"
    fi
}
```

#### –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
```bash
# ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û - –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
validate_input() {
    local port="${IGconf_service_port:-8080}"
    local host="${IGconf_service_host:-localhost}"

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ –ø–æ—Ä—Ç–∞
    if ! [[ "$port" =~ ^[0-9]+$ ]] || [[ "$port" -lt 1024 ]] || [[ "$port" -gt 65535 ]]; then
        die "Invalid port number: $port"
    fi

    # –í–∞–ª–∏–¥–∞—Ü–∏—è hostname
    if ! [[ "$host" =~ ^[a-zA-Z0-9.-]+$ ]]; then
        die "Invalid hostname: $host"
    fi

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Ç–µ–π
    local data_dir="${IGconf_data_dir:-/var/lib/app}"
    if [[ "$data_dir" != /var/lib/* ]]; then
        die "Data directory must be under /var/lib/: $data_dir"
    fi
}

# –í—ã–∑–æ–≤ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤ –Ω–∞—á–∞–ª–µ
validate_input
```

#### –ó–∞—â–∏—Ç–∞ –æ—Ç –∏–Ω—ä–µ–∫—Ü–∏–π –∫–æ–º–∞–Ω–¥
```bash
# ‚ùå –û–ü–ê–°–ù–û - —É—è–∑–≤–∏–º–æ –∫ –∏–Ω—ä–µ–∫—Ü–∏—è–º
user_input="$1"
eval "$user_input"  # –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–µ–ª–∞–π—Ç–µ —Ç–∞–∫!

# ‚úÖ –ë–ï–ó–û–ü–ê–°–ù–û - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤ –∏ —Ñ—É–Ω–∫—Ü–∏–π
execute_command() {
    local cmd="$1"
    local arg="$2"

    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å —è–≤–Ω—ã–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏
    case "$cmd" in
        "start") systemctl start "$arg" ;;
        "stop") systemctl stop "$arg" ;;
        "restart") systemctl restart "$arg" ;;
        *) die "Unknown command: $cmd" ;;
    esac
}

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
execute_command "start" "my-service"
```

### –ó–∞—â–∏—Ç–∞ —Å–µ—Ç–µ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤

#### –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
```bash
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW (Uncomplicated Firewall)
setup_firewall() {
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ UFW –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    command -v ufw >/dev/null 2>&1 || apt-get install -y ufw

    # –°–±—Ä–æ—Å –ø—Ä–∞–≤–∏–ª
    ufw --force reset

    # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ—Ä—Ç–æ–≤
    ufw default deny incoming
    ufw default allow outgoing

    # SSH (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    ufw allow ssh

    # –°–µ—Ä–≤–∏—Å–Ω—ã–µ –ø–æ—Ä—Ç—ã (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–Ω—ã)
    if [[ "${IGconf_enable_http:-false}" == "true" ]]; then
        ufw allow 80/tcp
        ufw allow 443/tcp
    fi

    if [[ "${IGconf_enable_custom_port:-false}" == "true" ]]; then
        local port="${IGconf_custom_port}"
        if [[ "$port" =~ ^[0-9]+$ ]] && [[ "$port" -ge 1024 ]]; then
            ufw allow "$port"
        fi
    fi

    # –í–∫–ª—é—á–µ–Ω–∏–µ firewall
    ufw --force enable
}
```

#### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ fail2ban
```bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç brute-force –∞—Ç–∞–∫
setup_fail2ban() {
    command -v fail2ban >/dev/null 2>&1 || apt-get install -y fail2ban

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∑–∞—â–∏—Ç—ã
    cat > /etc/fail2ban/jail.local << 'EOF'
[sshd]
enabled = true
port = ssh
filter = sshd
logpath = /var/log/auth.log
maxretry = 3
bantime = 3600
EOF

    systemctl enable fail2ban
    systemctl restart fail2ban
}
```

### –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–∞–º–∏

#### –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤
```bash
# ‚ùå –ù–ï–ë–ï–ó–û–ü–ê–°–ù–û - —Å–µ–∫—Ä–µ—Ç—ã –≤ –∫–æ–¥–µ
DATABASE_PASSWORD="super-secret-password"

# ‚úÖ –ë–ï–ó–û–ü–ê–°–ù–û - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
DATABASE_PASSWORD="${IGconf_db_password:?Database password required}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–µ–∫—Ä–µ—Ç –Ω–µ –ø—É—Å—Ç–æ–π
if [[ -z "${DATABASE_PASSWORD:-}" ]]; then
    die "Database password not provided"
fi

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Ö
cat > /etc/myapp/config << EOF
database_url=postgresql://user:${DATABASE_PASSWORD}@localhost/db
EOF

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
chmod 600 /etc/myapp/config
chown myapp:myapp /etc/myapp/config
```

#### –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤
```bash
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –ø–∞—Ä–æ–ª–µ–π –∏ –∫–ª—é—á–µ–π
generate_secrets() {
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if [[ ! -f /etc/myapp/secret.key ]]; then
        openssl rand -hex 32 > /etc/myapp/secret.key
        chmod 600 /etc/myapp/secret.key
    fi

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if [[ -z "${IGconf_db_password:-}" ]]; then
        IGconf_db_password=$(openssl rand -base64 12)
        echo "Generated DB password: $IGconf_db_password"
    fi

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è JWT —Å–µ–∫—Ä–µ—Ç–∞
    if [[ -z "${IGconf_jwt_secret:-}" ]]; then
        IGconf_jwt_secret=$(openssl rand -hex 64)
    fi
}
```

### –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

#### –ê—É–¥–∏—Ç —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
```bash
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ auditd –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
setup_audit() {
    command -v auditd >/dev/null 2>&1 || apt-get install -y auditd

    # –ü—Ä–∞–≤–∏–ª–∞ –∞—É–¥–∏—Ç–∞ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    cat > /etc/audit/rules.d/myapp.rules << 'EOF'
# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
-w /etc/myapp/ -p wa -k myapp_config

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ç–µ–≤—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
-a always,exit -F arch=b64 -S connect,accept -F key=network_access

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ sudo –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
-a always,exit -F path=/usr/bin/sudo -F key=sudo_usage
EOF

    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∞–≤–∏–ª
    auditctl -R /etc/audit/rules.d/myapp.rules
    systemctl enable auditd
}
```

#### –ê—É–¥–∏—Ç –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º

#### SBOM (Software Bill of Materials) –∏ CVE —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
```bash
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SBOM –¥–ª—è –æ–±—Ä–∞–∑–∞ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è rpi-image-gen)
rpi-image-gen build -c config.yaml --sbom

# –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏
rpi-image-gen build -c config.yaml --cve-scan

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ –Ω–∞ CVE –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
check_cve_compliance() {
    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≤—Ä–æ–¥–µ debsecan –∏–ª–∏ grype
    if command -v debsecan >/dev/null 2>&1; then
        debsecan --format detail
    fi
}
```

#### –ê—É–¥–∏—Ç —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
```bash
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ auditd –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
setup_security_audit() {
    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
    echo "-w /var/lib/dpkg/info -p wa -k package_changes" >> /etc/audit/rules.d/rpi-audit.rules

    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    echo "-w /etc -p wa -k config_changes" >> /etc/audit/rules.d/rpi-audit.rules

    systemctl restart auditd
}
```

### –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

#### –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
```bash
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ unattended-upgrades
configure_auto_updates() {
    command -v unattended-upgrades >/dev/null 2>&1 || apt-get install -y unattended-upgrades

    # –í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    cat > /etc/apt/apt.conf.d/50unattended-upgrades << 'EOF'
Unattended-Upgrade::Origins-Pattern {
    "origin=Debian,n=${DISTRO},l=Debian-Security";
    "origin=Raspberry Pi,n=${DISTRO},l=Raspberry Pi";
};

Unattended-Upgrade::Package-Blacklist {};

Unattended-Upgrade::AutoFixInterruptedDpkg "true";
Unattended-Upgrade::MinimalSteps "true";
Unattended-Upgrade::InstallOnShutdown "false";
Unattended-Upgrade::Mail "root";
Unattended-Upgrade::MailOnlyOnError "true";
Unattended-Upgrade::Remove-Unused-Kernel-Packages "true";
Unattended-Upgrade::Automatic-Reboot "false";
EOF

    # –í–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
    systemctl enable unattended-upgrades
}
```

### –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è –∏ –∏–∑–æ–ª—è—Ü–∏—è

#### –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Podman/Docker
```bash
# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö
deploy_in_container() {
    local app_name="${IGconf_app_name}"
    local image="${IGconf_app_image:-docker.io/library/nginx:latest}"

    # –°–æ–∑–¥–∞–Ω–∏–µ dedicated –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    useradd --system --shell /bin/false --home "/var/lib/$app_name" "$app_name"

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SELinux/AppArmor –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
    if command -v semanage >/dev/null 2>&1; then
        semanage fcontext -a -t container_file_t "/var/lib/$app_name(/.*)?"
        restorecon -R "/var/lib/$app_name"
    fi

    # –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏
    podman run -d \
        --name "$app_name" \
        --user "$app_name" \
        --read-only \
        --tmpfs /tmp \
        --cap-drop ALL \
        --cap-add NET_BIND_SERVICE \
        -v "/var/lib/$app_name:/data:Z" \
        "$image"
}
```

## –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ Cursor
