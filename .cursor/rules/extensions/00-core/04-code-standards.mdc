---
alwaysApply: ${cursor.file.path.endsWith(".sh") || cursor.file.path.includes("hooks/")}
---

# –ü—Ä–∞–≤–∏–ª–æ 04: –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π rpi-image-gen

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π rpi-image-gen —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤ Cursor IDE.

## –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

## –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è

### –ü—Ä–∏–Ω—Ü–∏–ø –º–∏–Ω–∏–º–∞–ª–∏–∑–º–∞
**"–ü–∏—à–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π"**

```bash
# ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û - –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ
install_package() {
    apt-get update && apt-get install -y "$1"
}

# ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û - –∏–∑–±—ã—Ç–æ—á–Ω–æ–µ
install_package() {
    echo "Updating package list..."
    apt-get update
    echo "Installing package: $1"
    apt-get install -y "$1"
    echo "Cleaning up..."
    apt-get clean
    echo "Package installation completed"
    # + –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–æ–≤–µ—Ä–∫–∏, –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ...
}
```

### –ü—Ä–∞–≤–∏–ª–æ: –û–¥–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—è = –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞
```bash
# ‚úÖ –§—É–Ω–∫—Ü–∏—è –¥–µ–ª–∞–µ—Ç —Ç–æ–ª—å–∫–æ —É—Å—Ç–∞–Ω–æ–≤–∫—É –ø–∞–∫–µ—Ç–∞
install_package() {
    apt-get install -y "$1"
}

# ‚ùå –§—É–Ω–∫—Ü–∏—è –¥–µ–ª–∞–µ—Ç —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ
setup_everything() {
    install_package nginx
    configure_nginx
    create_user
    setup_firewall
    enable_service
    # 5+ —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á –≤ –æ–¥–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
}
```

### Bash —Å–∫—Ä–∏–ø—Ç—ã - –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã

#### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–∫—Ä–∏–ø—Ç–∞
```bash
#!/bin/bash
# shellcheck disable=SC2154,SC2086
# ^ –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö rpi-image-gen

set -euo pipefail  # üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–ª—è –≤—Å–µ—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤

# –ò–º–ø–æ—Ä—Ç—ã –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
readonly SCRIPT_NAME="$(basename "${BASH_SOURCE[0]}")"
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ)
log_info() { echo "[$SCRIPT_NAME] INFO: $*"; }
log_warn() { echo "[$SCRIPT_NAME] WARN: $*" >&2; }
log_error() { echo "[$SCRIPT_NAME] ERROR: $*" >&2; }

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
die() {
    log_error "$*"
    exit 1
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö
main() {
    # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è
    return 0
}

# –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then
    main "$@"
fi
```

#### –ü—Ä–∞–≤–∏–ª–∞ –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π
```bash
# ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ
setup_database() { ... }      # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
validate_config() { ... }     # –í–∞–ª–∏–¥–∞—Ü–∏—è
execute_build() { ... }       # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
cleanup_temp() { ... }        # –û—á–∏—Å—Ç–∫–∞
monitor_process() { ... }     # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥

# ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ
do_stuff() { ... }           # –°–ª–∏—à–∫–æ–º –æ–±—â–µ–µ
my_function() { ... }        # –ù–µ –æ–ø–∏—Å–∞—Ç–µ–ª—å–Ω–æ–µ
func1() { ... }              # –ù–µ–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ
```

#### –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
```bash
# ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
IGconf_extension_name="${IGconf_extension_name:-default-name}"
database_url="${IGconf_app_database_url:?Database URL required}"
timeout="${IGconf_extension_timeout:-30}"

# ‚úÖ –ú–∞—Å—Å–∏–≤—ã –∏ –∞—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã
declare -a packages=("nginx" "php" "mysql")
declare -A config=(
    ["host"]="localhost"
    ["port"]="3306"
)

# ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ (–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤ Cursor)
echo $VAR              # –ù–µ—Ç –∫–∞–≤—ã—á–µ–∫
rm -rf $USER_DIR       # –ù–µ—Ç –∫–∞–≤—ã—á–µ–∫
export PATH=$PATH:/new # –ù–µ—Ç –∫–∞–≤—ã—á–µ–∫
```

### YAML –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ - –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã

#### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
```yaml
# –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ –Ω–∞—á–∞–ª–µ)
# METABEGIN
# X-Env-Layer-Name: my-extension
# X-Env-Layer-Category: extension
# X-Env-Layer-Description: –û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
# X-Env-Layer-Version: 1.0.0
# X-Env-Layer-Requires: essential,net-misc
# X-Env-VarPrefix: extension
#
# X-Env-Var-setting1: default_value
# X-Env-Var-setting1-Description: –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
# X-Env-Var-setting1-Required: false
# X-Env-Var-setting1-Valid: regex|^value[0-9]+$
# METAEND

---
# –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
device:
  layer: pi5                    # –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–ª–æ–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞

image:
  layer: image-rpios           # –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–ª–æ–π –æ–±—Ä–∞–∑–∞
  boot_part_size: 200%         # –ü—Ä–æ—Ü–µ–Ω—Ç—ã –∏–ª–∏ –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è

layer:
  base: bookworm-minbase       # –ë–∞–∑–æ–≤—ã–π —Å–ª–æ–π
  extension: my-extension      # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–ª–æ–∏
```

#### –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
```yaml
# ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã
IGconf_extension_*    # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
IGconf_device_*       # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
IGconf_image_*        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–±—Ä–∞–∑–∞
IGconf_app_*          # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

# ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
X-Env-Var-database_url-Required: true
X-Env-Var-timeout-Valid: int:1-300
X-Env-Var-loglevel-Valid: debug,info,warn,error
```

### Python –∫–æ–¥ (–¥–ª—è —É—Ç–∏–ª–∏—Ç)

#### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–æ–¥—É–ª—è
```python
#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å rpi-image-gen —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏.

–û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª—è –∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤/—Ñ—É–Ω–∫—Ü–∏–π.
"""

import sys
import os
from pathlib import Path
from typing import Optional, List, Dict, Any


class ExtensionManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π rpi-image-gen."""

    def __init__(self, config_path: Path) -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞.

        Args:
            config_path: –ü—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
        """
        self.config_path = config_path
        self._validate_config()

    def _validate_config(self) -> None:
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
        if not self.config_path.exists():
            raise FileNotFoundError(f"Config not found: {self.config_path}")

    def get_extensions(self) -> List[Dict[str, Any]]:
        """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π.

        Returns:
            –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è—Ö
        """
        # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è
        pass


def main() -> int:
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    try:
        config_path = Path(os.getenv('CONFIG_PATH', 'config.yaml'))
        manager = ExtensionManager(config_path)
        extensions = manager.get_extensions()

        for ext in extensions:
            print(f"Extension: {ext['name']} v{ext['version']}")

        return 0
    except Exception as e:
        print(f"Error: {e}", file=sys.stderr)
        return 1


if __name__ == '__main__':
    sys.exit(main())
```

## –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Cursor IDE

### –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ –ø–æ–¥—Å–∫–∞–∑–∫–∏

#### –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
- `IGconf_extension_*` - –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
- `IGconf_device_*` - –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
- `IGconf_image_*` - –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–±—Ä–∞–∑–∞
- `IGconf_app_*` - –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

#### –§—É–Ω–∫—Ü–∏–∏ Bash
- `die()` - –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π
- `log_info()` - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
- `log_warn()` - –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
- `log_error()` - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ

### –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è

#### YAML —Ñ–∞–π–ª—ã
- [ ] –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
- [ ] –ù–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–µ–∫—Ü–∏–π (device, image, layer)
- [ ] –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö (X-Env-*)
- [ ] –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

#### Bash —Å–∫—Ä–∏–ø—Ç—ã
- [ ] –ù–∞–ª–∏—á–∏–µ `set -euo pipefail`
- [ ] –ö–∞–≤—ã—á–∫–∏ –≤–æ–∫—Ä—É–≥ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
- [ ] –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π

### Code Actions (–±—ã—Å—Ç—Ä—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è)

#### –¢–∏–ø–∏—á–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
```bash
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ set -euo pipefail
#!/bin/bash
set -euo pipefail  # <- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–≤—ã—á–µ–∫
echo "$VAR"        # <- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑: echo $VAR

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
[[ -n "${VAR:-}" ]] || die "VAR is required"  # <- –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
```

## –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏

### –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
```bash
# ‚úÖ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
if command -v parallel >/dev/null 2>&1; then
    # –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
    parallel --no-notice process_item ::: "${items[@]}"
else
    # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
    for item in "${items[@]}"; do
        process_item "$item"
    done
fi

# ‚úÖ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
CACHE_FILE="/tmp/extension_cache"
if [[ -f "$CACHE_FILE" && "$CACHE_FILE" -nt "$CONFIG_FILE" ]]; then
    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—ç—à
    source "$CACHE_FILE"
else
    # –ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
    calculate_expensive_operation > "$CACHE_FILE"
fi
```

### –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
```bash
# ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
temp_file=$(mktemp --suffix=".$$")
trap 'rm -f "$temp_file"' EXIT

# ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–æ–¥–∞
validate_port() {
    local port="$1"
    [[ "$port" =~ ^[0-9]+$ ]] || die "Invalid port: $port"
    [[ "$port" -ge 1024 && "$port" -le 65535 ]] || die "Port out of range: $port"
}

# ‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π
if [[ "$EUID" -eq 0 ]]; then
    # –ó–∞–ø—É—Å–∫ –æ—Ç root - –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!
    run_as_user "$APP_USER" my_command
else
    my_command
fi
```

### –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ—Å—Ç—å
```bash
# ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥
main() {
    parse_arguments "$@"
    validate_environment
    setup_resources
    execute_main_logic
    cleanup_resources
}

parse_arguments() {
    while [[ $# -gt 0 ]]; do
        case $1 in
            --help|-h) show_help; exit 0 ;;
            --config|-c) CONFIG_FILE="$2"; shift ;;
            *) die "Unknown option: $1" ;;
        esac
        shift
    done
}
```

## –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–µ—Å—Ç–æ–≤
```
tests/
‚îú‚îÄ‚îÄ unit/                    # –ú–æ–¥—É–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
‚îÇ   ‚îú‚îÄ‚îÄ test_validation.py
‚îÇ   ‚îî‚îÄ‚îÄ test_config.py
‚îú‚îÄ‚îÄ integration/            # –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
‚îÇ   ‚îú‚îÄ‚îÄ test_build.py
‚îÇ   ‚îî‚îÄ‚îÄ test_extension.py
‚îî‚îÄ‚îÄ fixtures/               # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    ‚îú‚îÄ‚îÄ valid_config.yaml
    ‚îî‚îÄ‚îÄ invalid_config.yaml
```

### –ü—Ä–∏–º–µ—Ä —Ç–µ—Å—Ç–∞
```bash
#!/bin/bash
# tests/integration/test_extension.sh

set -euo pipefail

# –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
test_validation() {
    echo "Testing extension validation..."

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    cat > /tmp/test_config.yaml << 'EOF'
device:
  layer: pi5
image:
  layer: image-rpios
layer:
  base: bookworm-minbase
EOF

    # –í–∞–ª–∏–¥–∞—Ü–∏—è —á–µ—Ä–µ–∑ rpi-image-gen
    if rpi-image-gen metadata --lint /tmp/test_config.yaml; then
        echo "‚úÖ Validation passed"
        return 0
    else
        echo "‚ùå Validation failed"
        return 1
    fi
}

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
test_validation
```

---

## –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- [ ] –ü—Ä–∞–≤–∏–ª–æ –∏–∑—É—á–µ–Ω–æ –∏ –ø–æ–Ω—è—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ CI/CD
- [ ] –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –º–µ—Ä–¥–∂–∞
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞
- [ ] –†–µ–≥—É–ª—è—Ä–Ω—ã–π –∞—É–¥–∏—Ç —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞

### –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- [ ] 100% —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ –Ω–æ–≤–æ–º –∫–æ–¥–µ
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–µ—Ç–∫–∞—Ö
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏—è
- [ ] –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –ø—Ä–∞–≤–∏–ª–∞

### –ò—Å—Ç–æ—á–Ω–∏–∫
–°–æ–∑–¥–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è rpi-image-gen —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤ Cursor IDE