---
alwaysApply: ${cursor.file.path.endsWith(".sh")}
---

# –ü—Ä–∞–≤–∏–ª–æ 06: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Bash —Å–∫—Ä–∏–ø—Ç–æ–≤ –≤ rpi-image-gen

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–µ—Ö–Ω–∏–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Bash —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –∏ –º–∏–Ω–∏–º–∞–ª–∏–∑–º–∞ –∫–æ–¥–∞ –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è—Ö rpi-image-gen.

## –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

## –¢–µ—Ö–Ω–∏–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Bash –∫–æ–¥–∞

### Parameter Expansion –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è

#### –í–∞–ª–∏–¥–∞—Ü–∏—è —Å –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ–º –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
```bash
# ‚ùå –°–¢–ê–†–û–ï - —Ä–∞–∑–¥–µ–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ
if [[ $# -lt 5 ]]; then
    die "Not enough arguments"
fi
LABEL="$1"
BOOTUUID="$2"
# ...

# ‚úÖ –ù–û–í–û–ï - parameter expansion –≤–∞–ª–∏–¥–∞—Ü–∏—è + –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ
: "${1:?"LABEL parameter required"}" && LABEL="$1"
: "${2:?"BOOTUUID parameter required"}" && BOOTUUID="$2"
: "${3:?"ROOTUUID parameter required"}" && ROOTUUID="$3"
: "${4:?"CRYPTUUID parameter required"}" && CRYPTUUID="$4"
: "${5:?"RAIDUUID parameter required"}" && RAIDUUID="$5"
```

#### –£—Å–ª–æ–≤–Ω–∞—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π
```bash
# ‚ùå –°–¢–ê–†–û–ï - –º–Ω–æ–≥–æ—Å–ª–æ–≤–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
if [[ "$encryption_enabled" == "y" ]]; then
    root_device="/dev/mapper/cryptroot"
else
    root_device="UUID=$RAID_UUID"
fi

# ‚úÖ –ù–û–í–û–ï - conditional parameter expansion
root_device="${encryption_enabled:+/dev/mapper/cryptroot}${encryption_enabled:-UUID=$RAID_UUID}"
```

### Command Chaining –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏

#### –£—Å–ª–æ–≤–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥
```bash
# ‚ùå –°–¢–ê–†–û–ï - verbose if-else –±–ª–æ–∫–∏
if [[ -f "${genimg_in:-}/img_uuids" ]]; then
    source "${genimg_in}/img_uuids"
fi

# ‚úÖ –ù–û–í–û–ï - command chaining
[[ -f "${genimg_in:-}/img_uuids" ]] && source "${genimg_in}/img_uuids"
```

#### –¢–µ—Ä–Ω–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã —Å &&
```bash
# ‚ùå –°–¢–ê–†–û–ï - –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
if [[ "$encryption_enabled" == "y" ]]; then
    setup_encryption
    configure_cryptdevice
else
    setup_plain_raid
fi

# ‚úÖ –ù–û–í–û–ï - && || chaining
[[ "$encryption_enabled" == "y" ]] && {
    setup_encryption
    configure_cryptdevice
} || setup_plain_raid
```

### –ú–∞—Å—Å–∏–≤—ã –∏ mapfile –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏

#### –ì–µ–Ω–µ—Ä–∞—Ü–∏—è UUID –º–∞—Å—Å–∏–≤–æ–≤
```bash
# ‚ùå –°–¢–ê–†–û–ï - –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å echo/head/tail
uuid1=$(uuidgen)
uuid2=$(uuidgen)
uuid3=$(uuidgen)
uuid4=$(uuidgen)

# ‚úÖ –ù–û–í–û–ï - mapfile –¥–ª—è –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
mapfile -t uuids < <(uuidgen && uuidgen && uuidgen && uuidgen)
BOOT_UUID=${uuids[0]}
ROOT_UUID=${uuids[1]}
CRYPT_UUID=${uuids[2]}
RAID_UUID=${uuids[3]}
```

### Inline case —Å –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ–º

#### –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ case –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
```bash
# ‚ùå –°–¢–ê–†–û–ï - –æ—Ç–¥–µ–ª—å–Ω—ã–µ case –±–ª–æ–∫–∏
case "$filesystem" in
    ext4)
        setup_ext4
        ;;
    btrfs)
        setup_btrfs
        ;;
    f2fs)
        setup_f2fs
        ;;
    *)
        die "Unsupported filesystem"
        ;;
esac

# ‚úÖ –ù–û–í–û–ï - inline case —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π
case "${IGconf_hybrid_raid_luks_rootfs_type:-ext4}" in
    ext4|btrfs|f2fs)
        rootfs_type="${IGconf_hybrid_raid_luks_rootfs_type:-ext4}"
        root_entry="...config..."
        ;;
    *) die "Unsupported filesystem type: $IGconf_hybrid_raid_luks_rootfs_type" ;;
esac
```

### sed -i –≤–º–µ—Å—Ç–æ awk —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏

#### –ü—Ä—è–º–æ–µ inline —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
```bash
# ‚ùå –°–¢–ê–†–û–ï - awk + temp files + mv (–Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ)
grep -q "root=" "$cmdline_file" && awk '{
    sub(/root=[^[:space:]*/,"root=/dev/mapper/cryptroot");
    print
}' "$cmdline_file" > "$cmdline_file.tmp" && mv "$cmdline_file.tmp" "$cmdline_file"

# ‚úÖ –ù–û–í–û–ï - sed -i (—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ)
grep -q "root=" "$cmdline_file" && sed -i 's|root=[^[:space:]]*|root=/dev/mapper/cryptroot|g' "$cmdline_file"
```

#### –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –∑–∞–º–µ–Ω—ã –≤ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ
```bash
# –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–∞—è –∑–∞–º–µ–Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
sed -i \
    -e "s|<IMAGE_NAME>|\"$IGconf_image_name\"|g" \
    -e "s|<BOOT_SIZE>|$boot_size|g" \
    -e "s|<ENCRYPTION_ENABLED>|$encryption_enabled|g" \
    "genimage.cfg.in" > "${genimg_in}/genimage.cfg"
```

### Conditional heredoc –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞

#### –£—Å–ª–æ–≤–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤
```bash
# ‚ùå –°–¢–ê–†–û–ï - –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ heredoc
if [[ "$encryption_enabled" == "y" ]]; then
    cat > "$IMAGEMOUNTPATH/etc/fstab" << EOF
UUID=$BOOT_UUID /boot/firmware vfat defaults 0 2
/dev/mapper/cryptroot / ext4 defaults,noatime,errors=remount-ro 0 1
EOF
else
    cat > "$IMAGEMOUNTPATH/etc/fstab" << EOF
UUID=$BOOT_UUID /boot/firmware vfat defaults 0 2
UUID=$RAID_UUID / ext4 defaults,noatime,errors=remount-ro 0 1
EOF
fi

# ‚úÖ –ù–û–í–û–ï - –æ–¥–∏–Ω heredoc —Å conditional expansion
cat > "$IMAGEMOUNTPATH/etc/fstab" << EOF
UUID=$BOOT_UUID /boot/firmware vfat defaults 0 2
${encryption_enabled:+/dev/mapper/cryptroot}${encryption_enabled:-UUID=$RAID_UUID} / $rootfs_type ${rootfs_options} 0 1
EOF
```

### –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ awk one-liners

#### –ó–∞–º–µ–Ω–∞ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã—Ö awk —Å–∫—Ä–∏–ø—Ç–æ–≤
```bash
# ‚ùå –°–¢–ê–†–û–ï - –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π awk
awk '
{
    if ($0 !~ /initrd/) {
        print $0 " initrd=initrd.img"
    } else {
        print $0
    }
}
' "$file"

# ‚úÖ –ù–û–í–û–ï - –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã–π awk
awk '{print ($0 !~ /initrd/ ? $0" initrd=initrd.img" : $0)}' "$file"
```

## –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

### –î–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ (181 —Å—Ç—Ä–æ–∫–∞)
```bash
#!/bin/bash
set -euo pipefail

die() {
    echo "ERROR: $*" >&2
    exit 1
}

LABEL="$1"
BOOTUUID="$2"
# ... –º–Ω–æ–≥–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–π

case "$LABEL" in
   ROOT)
      case "${IGconf_hybrid_raid_luks_rootfs_type:-ext4}" in
         ext4)
            cat << EOF > "$IMAGEMOUNTPATH/etc/fstab"
UUID=$BOOT_UUID /boot/firmware vfat defaults 0 2
EOF
            if [[ "$encryption_enabled" == "y" ]]; then
                cat << EOF >> "$IMAGEMOUNTPATH/etc/fstab"
/dev/mapper/cryptroot / ext4 defaults,noatime,errors=remount-ro 0 1
EOF
            else
                cat << EOF >> "$IMAGEMOUNTPATH/etc/fstab"
UUID=$RAID_UUID / ext4 defaults,noatime,errors=remount-ro 0 1
EOF
            fi
            ;;
         # ... –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è btrfs –∏ f2fs
      esac
      ;;
   BOOT)
      if [[ "$encryption_enabled" == "y" ]]; then
         if grep -q "root=" "$IMAGEMOUNTPATH/cmdline.txt"; then
             awk '...' "$file" > "$file.tmp" && mv "$file.tmp" "$file"
         fi
         # ... –º–Ω–æ–≥–æ –ø–æ–¥–æ–±–Ω—ã—Ö –±–ª–æ–∫–æ–≤
      fi
      ;;
esac
```

### –ü–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ (73 —Å—Ç—Ä–æ–∫–∏, -60%)
```bash
#!/bin/bash
set -euo pipefail

die() { echo "ERROR: $*" >&2; exit 1; }

: "${1:?"LABEL parameter required"}" && LABEL="$1"
: "${2:?"BOOTUUID parameter required"}" && BOOTUUID="$2"
# ... parameter expansion –¥–ª—è –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤

[[ -f "${genimg_in:-}/img_uuids" ]] && source "${genimg_in}/img_uuids"
encryption_enabled="${ENCRYPTION_ENABLED:-n}"

case "$LABEL" in
   ROOT)
      case "${IGconf_hybrid_raid_luks_rootfs_type:-ext4}" in
         ext4|btrfs|f2fs)
            rootfs_type="${IGconf_hybrid_raid_luks_rootfs_type:-ext4}"
            root_entry="${encryption_enabled:+/dev/mapper/cryptroot}${encryption_enabled:-UUID=$RAID_UUID} / $rootfs_type ..."
            ;;
         *) die "Unsupported filesystem type: $IGconf_hybrid_raid_luks_rootfs_type" ;;
      esac

      cat > "$IMAGEMOUNTPATH/etc/fstab" << EOF
UUID=$BOOT_UUID /boot/firmware vfat defaults 0 2
$root_entry
EOF

      [[ "$encryption_enabled" != "y" ]] && cat > "$IMAGEMOUNTPATH/etc/mdadm/mdadm.conf" << EOF
...
EOF
      ;;
   BOOT)
      cmdline_file="$IMAGEMOUNTPATH/cmdline.txt"

      [[ "$encryption_enabled" == "y" ]] && {
         grep -q "root=" "$cmdline_file" && sed -i 's|root=[^[:space:]]*|root=/dev/mapper/cryptroot|g' "$cmdline_file"
         ! grep -q "cryptdevice" "$cmdline_file" && sed -i "s|root=/dev/mapper/cryptroot|root=/dev/mapper/cryptroot cryptdevice=UUID=$RAID_UUID:cryptroot|g" "$cmdline_file"
      } || {
         grep -q "root=" "$cmdline_file" && sed -i "s|root=[^[:space:]]*|root=UUID=$RAID_UUID|g" "$cmdline_file"
      }

      ! grep -q "initrd" "$cmdline_file" && sed -i 's|$| initrd=initrd.img|' "$cmdline_file"
      ! grep -q "rootdelay" "$cmdline_file" && sed -i 's|initrd=initrd\.img|initrd=initrd.img rootdelay=5|g' "$cmdline_file"
      ;;
esac
```

## –ú–µ—Ç—Ä–∏–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

### –ö–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏:
- **–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –∫–æ–¥–∞**: 181 ‚Üí 73 —Å—Ç—Ä–æ–∫–∏ (-60%)
- **–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏**: –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
- **–°–Ω–∏–∂–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏**: –ú–µ–Ω—å—à–µ —É—Å–ª–æ–≤–Ω—ã—Ö –±–ª–æ–∫–æ–≤ –∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
- **–ü–æ–≤—ã—à–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏**: sed -i –≤–º–µ—Å—Ç–æ temp files

### –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏:
- **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å**: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–π
- **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ—Å—Ç—å**: –ë–æ–ª–µ–µ —è—Å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
- **–¢–µ—Å—Ç–∏—Ä—É–µ–º–æ—Å—Ç—å**: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ª–µ–≥—á–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ
- **–†–∞—Å—à–∏—Ä—è–µ–º–æ—Å—Ç—å**: –õ–µ–≥—á–µ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

## –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Cursor IDE

### –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

#### Parameter Expansion –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:
```bash
# –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: "–ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ parameter expansion"
if [[ -n "${VAR:-}" ]]; then ... fi
# ->
: "${VAR:?"error message"}"
```

#### Command Chaining –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:
```bash
# –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å command chaining"
if [[ condition ]]; then command; fi
# ->
[[ condition ]] && command
```

#### sed -i –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:
```bash
# –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: "–ó–∞–º–µ–Ω–∏—Ç—å awk + temp files –Ω–∞ sed -i"
awk '...' file > file.tmp && mv file.tmp file
# ->
sed -i '...' file
```

### Code Actions –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞

#### –ë—ã—Å—Ç—Ä—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
- [ ] –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ if-else –≤ command chaining
- [ ] –ó–∞–º–µ–Ω–∞ awk –Ω–∞ sed –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–º–µ–Ω
- [ ] Parameter expansion –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
- [ ] Inline case –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ
- [ ] –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤

## –ê–Ω—Ç–∏–ø–∞—Ç—Ç–µ—Ä–Ω—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

### –ü–µ—Ä–µ—É—Å–ª–æ–∂–Ω–µ–Ω–∏–µ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
```bash
# ‚ùå –°–õ–ò–®–ö–û–ú –°–õ–û–ñ–ù–û - —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤ —Ç–µ—Ä–Ω–∞—Ä–Ω–æ–º
result="${condition1:+${condition2:+value1}${condition2:-value2}}${condition1:-${condition3:+value3}${condition3:-value4}}"

# ‚úÖ –ß–ò–¢–ê–ï–ú–û - —Ä–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫
if [[ "$condition1" == "y" ]]; then
    if [[ "$condition2" == "y" ]]; then
        result="value1"
    else
        result="value2"
    fi
else
    result="${condition3:+value3}${condition3:-value4}"
fi
```

### –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
```bash
# ‚ùå –û–ü–ê–°–ù–û - –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
grep -q "pattern" file && sed -i 's|old|new|g' file || true

# ‚úÖ –ë–ï–ó–û–ü–ê–°–ù–û - —è–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
if grep -q "pattern" file; then
    sed -i 's|old|new|g' file || die "Failed to update file"
fi
```

## –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è

### –ö–æ–≥–¥–∞ –ø—Ä–∏–º–µ–Ω—è—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é:
- ‚úÖ **–í—Å–µ–≥–¥–∞**: Parameter expansion –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
- ‚úÖ **–í—Å–µ–≥–¥–∞**: sed -i –≤–º–µ—Å—Ç–æ awk —Å temp files
- ‚úÖ **–ß–∞—Å—Ç–æ**: Command chaining –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —É—Å–ª–æ–≤–∏–π
- ‚úÖ **–û—Å—Ç–æ—Ä–æ–∂–Ω–æ**: Conditional expansion –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Å—Ç—Ä–æ–∫
- ‚ùå **–ò–∑–±–µ–≥–∞—Ç—å**: –ü–µ—Ä–µ—É—Å–ª–æ–∂–Ω–µ–Ω–∏–µ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏

### –ü–æ—Ä—è–¥–æ–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏–∫:
1. **Parameter expansion** - –±–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
2. **Command chaining** - —É–ø—Ä–æ—â–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏–π
3. **sed -i** - –∑–∞–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
4. **Conditional expansion** - –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
5. **Inline case** - –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ö–æ–∂–∏—Ö –±–ª–æ–∫–æ–≤

---

## –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- [ ] –ü—Ä–∞–≤–∏–ª–æ –∏–∑—É—á–µ–Ω–æ –∏ –ø–æ–Ω—è—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ CI/CD
- [ ] –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –º–µ—Ä–¥–∂–∞
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞
- [ ] –†–µ–≥—É–ª—è—Ä–Ω—ã–π –∞—É–¥–∏—Ç —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞

### –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- [ ] 100% —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ –Ω–æ–≤–æ–º –∫–æ–¥–µ
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–µ—Ç–∫–∞—Ö
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏—è
- [ ] –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –ø—Ä–∞–≤–∏–ª–∞

### –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
- [ ] Parameter expansion –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
- [ ] sed -i –≤–º–µ—Å—Ç–æ awk —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
- [ ] Command chaining –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —É—Å–ª–æ–≤–∏–π
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö temp —Ñ–∞–π–ª–æ–≤

### –ò—Å—Ç–æ—á–Ω–∏–∫
–°–æ–∑–¥–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π bash —Å–∫—Ä–∏–ø—Ç–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ rpi-image-gen —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö bash —Ç–µ—Ö–Ω–∏–∫ –∏ idioms.