---
alwaysApply: ${cursor.file.path.includes(".github/") || cursor.file.path.includes("ci/") || cursor.file.path.includes("build/")}
---


# –ü—Ä–∞–≤–∏–ª–æ 02: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CI/CD

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
name: Build and Test Extension

## –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

## –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CI/CD

### GitHub Actions Workflow
```yaml
name: Build and Test Extension
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-user-static binfmt-support

    - name: Lint extension
      run: |
        rpi-image-gen metadata --lint layer/*.yaml
        rpi-image-gen layer --list

    - name: Run unit tests
      run: |
        python3 -m pytest tests/unit/ -v

    - name: Build test image
      run: |
        rpi-image-gen build -c tests/test-config.yaml --dry-run

    - name: Build final image
      run: |
        rpi-image-gen build -c config.yaml

    - name: Generate SBOM and security scan
      run: |
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SBOM (Software Bill of Materials)
        rpi-image-gen build -c config.yaml --sbom || echo "SBOM generation not yet implemented"

        # CVE —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
        rpi-image-gen build -c config.yaml --cve-scan || echo "CVE scanning not yet implemented"

        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ debsecan
        if command -v debsecan >/dev/null 2>&1; then
          echo "Running debsecan security audit..."
          debsecan --format detail || true
        fi
```

### GitLab CI Pipeline
```yaml
stages:
  - validate
  - test
  - build
  - deploy

validate_extension:
  stage: validate
  script:
    - rpi-image-gen metadata --lint layer/*.yaml
    - rpi-image-gen layer --describe $CI_EXTENSION_LAYER

test_extension:
  stage: test
  script:
    - python3 -m pytest tests/ --junitxml=report.xml
  artifacts:
    reports:
      junit: report.xml

build_image:
  stage: build
  script:
    - rpi-image-gen build -c config.yaml
  artifacts:
    paths:
      - work/image-*/image-*.img
      - sbom.json
    expire_in: 1 week

security_scan:
  stage: build
  script:
    - rpi-image-gen build -c config.yaml --sbom || echo "SBOM not supported yet"
    - rpi-image-gen build -c config.yaml --cve-scan || echo "CVE scan not supported yet"
    - |
      if command -v debsecan >/dev/null 2>&1; then
        echo "Running debsecan security audit..."
        debsecan --format detail > security-report.txt || true
      fi
  artifacts:
    paths:
      - security-report.txt
    expire_in: 1 week
  allow_failure: true
```

---

## –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- [ ] –ü—Ä–∞–≤–∏–ª–æ –∏–∑—É—á–µ–Ω–æ –∏ –ø–æ–Ω—è—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ CI/CD
- [ ] –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –º–µ—Ä–¥–∂–∞
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞
- [ ] –†–µ–≥—É–ª—è—Ä–Ω—ã–π –∞—É–¥–∏—Ç —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞

### –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- [ ] 100% —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ –Ω–æ–≤–æ–º –∫–æ–¥–µ
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–µ—Ç–∫–∞—Ö
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏—è
- [ ] –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –ø—Ä–∞–≤–∏–ª–∞

### –ò—Å—Ç–æ—á–Ω–∏–∫
–°–æ–∑–¥–∞–Ω–æ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: `03_–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è_—Å_cicd.mdc`
