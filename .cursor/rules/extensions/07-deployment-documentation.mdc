---
alwaysApply: ${cursor.file.path.includes("ansible/") || cursor.file.path.includes("terraform/")}
---

# –ü—Ä–∞–≤–∏–ª–æ 07-2: –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π rpi-image-gen.

## –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π üî¥ –û–í–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –°–ø–æ—Å–æ–±—ã —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è
- **–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥**: Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ (GitHub, GitLab, Bitbucket)
- **–ë–∏–Ω–∞—Ä–Ω—ã–µ –ø–∞–∫–µ—Ç—ã**: DEB/RPM –ø–∞–∫–µ—Ç—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–æ–≤
- **–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã**: Docker –æ–±—Ä–∞–∑—ã –¥–ª—è –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
- **–†–µ–µ—Å—Ç—Ä—ã**: –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–µ—Å—Ç—Ä—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π rpi-image-gen

### –°—Ç—Ä–∞—Ç–µ–≥–∏—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è
```bash
#!/bin/bash
# –°—Ç—Ä–∞—Ç–µ–≥–∏—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è

distribute_extension() {
    local extension_name="$1"
    local version="$2"
    local distribution_method="$3"

    case "$distribution_method" in
        "source")
            distribute_source_code "$extension_name" "$version"
            ;;
        "packages")
            create_binary_packages "$extension_name" "$version"
            ;;
        "docker")
            create_docker_images "$extension_name" "$version"
            ;;
        "registry")
            publish_to_extension_registry "$extension_name" "$version"
            ;;
        "all")
            distribute_source_code "$extension_name" "$version"
            create_binary_packages "$extension_name" "$version"
            create_docker_images "$extension_name" "$version"
            publish_to_extension_registry "$extension_name" "$version"
            ;;
        *)
            echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–µ—Ç–æ–¥ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è: $distribution_method"
            echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã: source, packages, docker, registry, all"
            exit 1
            ;;
    esac
}

distribute_source_code() {
    local extension_name="$1"
    local version="$2"

    echo "–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞..."

    # –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤
    git archive --format=tar.gz --prefix="${extension_name}-${version}/" \
        -o "${extension_name}-${version}-source.tar.gz" "v$version"

    # –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ GitHub Releases
    gh release upload "v$version" "${extension_name}-${version}-source.tar.gz"
}

create_binary_packages() {
    local extension_name="$1"
    local version="$2"

    echo "–°–æ–∑–¥–∞–Ω–∏–µ –±–∏–Ω–∞—Ä–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."

    # –°–æ–∑–¥–∞–Ω–∏–µ DEB –ø–∞–∫–µ—Ç–∞
    create_deb_package "$extension_name" "$version"

    # –°–æ–∑–¥–∞–Ω–∏–µ RPM –ø–∞–∫–µ—Ç–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    create_rpm_package "$extension_name" "$version"
}

create_docker_images() {
    local extension_name="$1"
    local version="$2"

    echo "–°–æ–∑–¥–∞–Ω–∏–µ Docker –æ–±—Ä–∞–∑–æ–≤..."

    # –°–æ–∑–¥–∞–Ω–∏–µ Dockerfile
    cat > Dockerfile << EOF
FROM debian:bookworm-slim

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
RUN apt-get update && apt-get install -y \\
    rpi-image-gen \\
    && rm -rf /var/lib/apt/lists/*

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
COPY layer/${extension_name}.yaml /opt/rpi-image-gen/layer/
COPY config/ /opt/rpi-image-gen/config/

# –ú–µ—Ç–∫–∏
LABEL maintainer="Your Name <your.email@example.com>"
LABEL version="${version}"
LABEL extension="${extension_name}"

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
ENTRYPOINT ["rpi-image-gen", "build"]
CMD ["-c", "/opt/rpi-image-gen/config/default.yaml"]
EOF

    # –°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –æ–±—Ä–∞–∑–∞
    docker build -t "${extension_name}:${version}" .
    docker tag "${extension_name}:${version}" "your-registry/${extension_name}:${version}"
    docker push "your-registry/${extension_name}:${version}"
}

publish_to_extension_registry() {
    local extension_name="$1"
    local version="$2"

    echo "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ —Ä–µ–µ—Å—Ç—Ä —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π..."

    # –ü—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ API —Ä–µ–µ—Å—Ç—Ä–∞
    rpi-image-gen extension publish \
        --registry "${EXTENSION_REGISTRY_URL}" \
        --extension "layer/${extension_name}.yaml" \
        --version "$version"
}
```

## –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π üî¥ –û–í–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –®–∞–±–ª–æ–Ω README.md
```markdown
# –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è

[![License](https://img.shields.io/badge/License-MIT-blue.svg)](LICENSE)
[![Version](https://img.shields.io/badge/Version-1.0.0-green.svg)](https://github.com/user/extension/releases)
[![CI](https://github.com/user/extension/actions/workflows/ci.yml/badge.svg)](https://github.com/user/extension/actions/workflows/ci.yml)

## –û–ø–∏—Å–∞–Ω–∏–µ

–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è. –û–±—ä—è—Å–Ω–∏—Ç–µ, –∫–∞–∫—É—é –ø—Ä–æ–±–ª–µ–º—É –æ–Ω–æ —Ä–µ—à–∞–µ—Ç –∏ –¥–ª—è –∫–∞–∫–∏—Ö —Å–ª—É—á–∞–µ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ.

## –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏

- **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å 1**: –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
- **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å 2**: –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
- **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å 3**: –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ

## –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

- **rpi-image-gen**: –≤–µ—Ä—Å–∏—è 1.0.0 –∏–ª–∏ –≤—ã—à–µ
- **–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞**: Debian 11/12 (Bullseye/Bookworm)
- **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞**: arm64, armhf
- **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏**: —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞

### –ò–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
```bash
# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
git clone https://github.com/user/extension.git
cd extension

# –°–±–æ—Ä–∫–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º
rpi-image-gen build -c config/extension-config.yaml
```

### –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞
```bash
# –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞
wget https://github.com/user/extension/releases/download/v1.0.0/extension-image.img

# –ó–∞–ø–∏—Å—å –Ω–∞ SD –∫–∞—Ä—Ç—É
sudo dd if=extension-image.img of=/dev/mmcblk0 bs=4M status=progress

# –ò–ª–∏ —á–µ—Ä–µ–∑ Raspberry Pi Imager
# –í—ã–±–µ—Ä–∏—Ç–µ "Custom" –∏ —É–∫–∞–∂–∏—Ç–µ —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
```

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
```bash
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏–∑ —Ä–µ–µ—Å—Ç—Ä–∞
rpi-image-gen extension install user/extension

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
rpi-image-gen build -c config.yaml --extension user/extension
```

## –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

### –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

| –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è | –û–ø–∏—Å–∞–Ω–∏–µ | –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é | –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ |
|------------|----------|----------------------|-------------|
| `IGconf_extension_setting1` | –ù–∞—Å—Ç—Ä–æ–π–∫–∞ 1 | `value1` | –î–∞ |
| `IGconf_extension_setting2` | –ù–∞—Å—Ç—Ä–æ–π–∫–∞ 2 | `value2` | –ù–µ—Ç |

### –ü—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
```yaml
# –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
device:
  layer: pi5
  hostname: my-device

image:
  layer: image-rpios
  boot_part_size: 200M
  root_part_size: 100%

layer:
  base: bookworm-minbase
  extension: your-extension-name

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
extension:
  layer: your-extension-name
  setting1: custom-value
  setting2: another-value
```

### –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

#### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ç–∏
```yaml
extension:
  network:
    interface: eth0
    mode: dhcp
    static_ip: 192.168.1.100
    gateway: 192.168.1.1
    dns: 8.8.8.8,8.8.4.4
```

#### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
```yaml
extension:
  security:
    firewall: enabled
    ssh_keys_only: true
    fail2ban: enabled
    auto_updates: enabled
```

## –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

### –ü—Ä–∏–º–µ—Ä 1: –ë–∞–∑–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
```bash
# –ü—Ä–æ—Å—Ç–∞—è —Å–±–æ—Ä–∫–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º
rpi-image-gen build -c examples/basic-config.yaml
```

### –ü—Ä–∏–º–µ—Ä 2: –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
```bash
# –°–±–æ—Ä–∫–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
rpi-image-gen build -c examples/advanced-config.yaml \
  -- IGconf_extension_setting1=value1 \
  -- IGconf_extension_setting2=value2
```

### –ü—Ä–∏–º–µ—Ä 3: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CI/CD
```yaml
# GitHub Actions workflow
name: Build with Extension
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build image
      run: |
        rpi-image-gen build -c config.yaml
    - name: Test image
      run: |
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞
```

## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

```bash
# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
python3 -m pytest tests/ -v

# –õ–∏–Ω—Ç–∏–Ω–≥ –∫–æ–¥–∞
shellcheck scripts/*.sh
yamllint layer/*.yaml

# –¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞
rpi-image-gen build -c test-config.yaml --dry-run
```

## –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
```
extension/
‚îú‚îÄ‚îÄ layer/                    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–ª–æ–µ–≤
‚îÇ   ‚îî‚îÄ‚îÄ extension.yaml       # –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
‚îú‚îÄ‚îÄ config/                  # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–±–æ—Ä–∫–∏
‚îú‚îÄ‚îÄ scripts/                 # –°–∫—Ä–∏–ø—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏
‚îú‚îÄ‚îÄ tests/                   # –¢–µ—Å—Ç—ã
‚îú‚îÄ‚îÄ examples/                # –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
‚îú‚îÄ‚îÄ docs/                    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
‚îî‚îÄ‚îÄ README.md               # –≠—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
```

### –í–Ω–µ—Å–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∞
1. –§–æ—Ä–∫–Ω–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
2. –°–æ–∑–¥–∞–π—Ç–µ –≤–µ—Ç–∫—É –¥–ª—è –≤–∞—à–µ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ (`git checkout -b feature/amazing-feature`)
3. –ó–∞—Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (`git commit -m 'Add amazing feature'`)
4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –≤–µ—Ç–∫—É (`git push origin feature/amazing-feature`)
5. –°–æ–∑–¥–∞–π—Ç–µ Pull Request

## –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π

### –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã

#### –ü—Ä–æ–±–ª–µ–º–∞: –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è —Å –æ—à–∏–±–∫–æ–π
```
–û—à–∏–±–∫–∞: Layer not found
```
**–†–µ—à–µ–Ω–∏–µ:**
```bash
# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
rpi-image-gen layer --describe your-extension --deps

# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–æ–≤—ã–µ —Å–ª–æ–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
rpi-image-gen layer --list
```

#### –ü—Ä–æ–±–ª–µ–º–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç
```
IGconf_extension_setting1: command not found
```
**–†–µ—à–µ–Ω–∏–µ:**
```bash
# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
rpi-image-gen metadata --lint layer/extension.yaml

# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
echo "IGconf_extension_setting1=${IGconf_extension_setting1}"
```

### –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–º–æ—â–∏
- [–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](https://github.com/user/extension/wiki)
- [Issues](https://github.com/user/extension/issues)
- [Discussions](https://github.com/user/extension/discussions)

## –õ–∏—Ü–µ–Ω–∑–∏—è

MIT License - —Å–º. —Ñ–∞–π–ª [LICENSE](LICENSE)

## –ê–≤—Ç–æ—Ä—ã

- **–ò–º—è –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞** - *–†–æ–ª—å* - [GitHub](https://github.com/username)

## Changelog

–ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ [CHANGELOG.md](CHANGELOG.md)
```
