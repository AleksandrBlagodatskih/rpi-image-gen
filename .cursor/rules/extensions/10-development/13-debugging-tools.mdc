---
alwaysApply: ${cursor.file.path.includes("troubleshoot") || cursor.file.content.includes("debug")}
---

# –ü—Ä–∞–≤–∏–ª–æ 06-2: –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –æ—Ç–ª–∞–¥–∫–∏

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –æ—Ç–ª–∞–¥–∫–∏ –∏ –º–µ—Ç–æ–¥—ã –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è—Ö rpi-image-gen.

## –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—Ç–ª–∞–¥–∫–∏ ‚ö†Ô∏è –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ï

### –û—Ç–ª–∞–¥–∫–∞ –≤ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ä–µ–¥–µ
```bash
#!/bin/bash
# –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ä–µ–¥—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

create_debug_environment() {
    local extension_name="$1"
    local debug_dir="/tmp/debug-${extension_name}"

    echo "–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π —Å—Ä–µ–¥—ã: $debug_dir"

    # –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π chroot —Å—Ä–µ–¥—ã
    mkdir -p "$debug_dir"
    debootstrap --foreign --arch=arm64 bullseye "$debug_dir" http://deb.debian.org/debian/

    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    cp -r "layer/${extension_name}" "$debug_dir/tmp/"

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ qemu –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏
    cp /usr/bin/qemu-aarch64-static "$debug_dir/usr/bin/"

    echo "–û—Ç–ª–∞–¥–æ—á–Ω–∞—è —Å—Ä–µ–¥–∞ –≥–æ—Ç–æ–≤–∞. –í—Ö–æ–¥: chroot $debug_dir /bin/bash"
}
```

### –ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
```bash
#!/bin/bash
# –ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è

profile_extension_performance() {
    local extension_name="$1"
    local profile_file="/tmp/profile-${extension_name}.log"

    echo "–ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è: $extension_name"

    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
    {
        echo "Timestamp,CPU%,Memory%,Disk_IO,Network_IO"
        while ps aux | grep -q "rpi-image-gen.*build"; do
            timestamp=$(date +%s)
            cpu=$(top -bn1 | grep "Cpu(s)" | awk '{print $2 + $4}')
            mem=$(free | awk 'NR==2{printf "%.2f", $3*100/$2}')
            disk=$(iostat -x sda 1 1 2>/dev/null | awk 'NR==4{print $4 + $5}' || echo "0")
            net=$(cat /proc/net/dev | awk 'NR==3{print $2 + $10}')

            echo "${timestamp},${cpu},${mem},${disk},${net}"
            sleep 2
        done
    } > "$profile_file"

    echo "–ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $profile_file"
}
```

### –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ª–∞–¥–∫–∏
```bash
#!/bin/bash
# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç–µ—Ä –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤

run_debug_test_suite() {
    local extension_name="$1"
    local test_results="/tmp/debug-test-results-${extension_name}.json"

    echo "–ó–∞–ø—É—Å–∫ –Ω–∞–±–æ—Ä–∞ —Ç–µ—Å—Ç–æ–≤ –æ—Ç–ª–∞–¥–∫–∏ –¥–ª—è: $extension_name"

    # –¢–µ—Å—Ç 1: –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    syntax_check=$(check_syntax_errors "$extension_name")
    echo "–°–∏–Ω—Ç–∞–∫—Å–∏—Å: $syntax_check"

    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    deps_check=$(check_dependencies "$extension_name")
    echo "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: $deps_check"

    # –¢–µ—Å—Ç 3: –¢–µ—Å—Ç —Å–±–æ—Ä–∫–∏
    build_test=$(test_build_process "$extension_name")
    echo "–°–±–æ—Ä–∫–∞: $build_test"

    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    vars_test=$(check_variables "$extension_name")
    echo "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: $vars_test"

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    cat > "$test_results" << EOF
    {
        "extension": "$extension_name",
        "timestamp": "$(date -Iseconds)",
        "tests": {
            "syntax": "$syntax_check",
            "dependencies": "$deps_check",
            "build": "$build_test",
            "variables": "$vars_test"
        }
    }
    EOF

    echo "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: $test_results"
}
```

## –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –æ—Ç–ª–∞–¥–∫–∏ üî¥ –û–í–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –û—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
- `strace` - —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
- `gdb` - –æ—Ç–ª–∞–¥—á–∏–∫ –¥–ª—è C/C++ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
- `valgrind` - –∞–Ω–∞–ª–∏–∑ –ø–∞–º—è—Ç–∏ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
- `tcpdump` - –∞–Ω–∞–ª–∏–∑ —Å–µ—Ç–µ–≤—ã—Ö –ø—Ä–æ–±–ª–µ–º
- `iotop` - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ I/O –æ–ø–µ—Ä–∞—Ü–∏–π

### –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –¥–ª—è rpi-image-gen
```bash
# –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã rpi-image-gen
rpi-image-gen build --debug-mode          # –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞
rpi-image-gen build --verbose 3           # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è
rpi-image-gen build --log-level DEBUG     # –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
rpi-image-gen build --trace-all           # –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
rpi-image-gen build --profile             # –ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
```

## –ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º üî¥ –û–í–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫–æ–¥–∞
```bash
#!/bin/bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è

static_code_analysis() {
    local extension_path="$1"

    echo "–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫–æ–¥–∞: $extension_path"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ bash —Å–∫—Ä–∏–ø—Ç–æ–≤
    find "$extension_path" -name "*.sh" -exec shellcheck {} \;

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∫–æ–¥–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    find "$extension_path" -name "*.py" -exec pylint {} \;

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ YAML —Ñ–∞–π–ª–æ–≤
    find "$extension_path" -name "*.yaml" -exec yamllint {} \;

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ JSON —Ñ–∞–π–ª–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    find "$extension_path" -name "*.json" -exec jq . {} \; >/dev/null

    echo "–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω"
}
```

### –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
```bash
#!/bin/bash
# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è

monitor_code_quality() {
    local extension_name="$1"

    # –ü–æ–¥—Å—á–µ—Ç –º–µ—Ç—Ä–∏–∫ –∫–∞—á–µ—Å—Ç–≤–∞
    files_count=$(find "layer/${extension_name}" -type f | wc -l)
    scripts_count=$(find "layer/${extension_name}" -name "*.sh" | wc -l)
    lines_count=$(find "layer/${extension_name}" -name "*.sh" -exec wc -l {} \; | awk '{sum += $1} END {print sum}')
    functions_count=$(grep -r "^function " "layer/${extension_name}" | wc -l)
    error_handling_count=$(grep -r "set -euo pipefail\|trap\|die\|error_exit" "layer/${extension_name}" | wc -l)

    # –†–∞—Å—á–µ—Ç –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
    avg_lines_per_file=$((lines_count / scripts_count))
    error_handling_ratio=$((error_handling_count * 100 / scripts_count))

    echo "–ú–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–ª—è $extension_name:"
    echo "  –§–∞–π–ª–æ–≤: $files_count"
    echo "  –°–∫—Ä–∏–ø—Ç–æ–≤: $scripts_count"
    echo "  –°—Ç—Ä–æ–∫ –∫–æ–¥–∞: $lines_count"
    echo "  –§—É–Ω–∫—Ü–∏–π: $functions_count"
    echo "  –°—Ä–µ–¥–Ω–µ–µ —Å—Ç—Ä–æ–∫ –Ω–∞ —Ñ–∞–π–ª: $avg_lines_per_file"
    echo "  –ü—Ä–æ—Ü–µ–Ω—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫: ${error_handling_ratio}%"

    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if [[ $avg_lines_per_file -gt 100 ]]; then
        echo "–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –†–∞–∑–±–µ–π—Ç–µ –±–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–æ–¥—É–ª–∏"
    fi

    if [[ $error_handling_ratio -lt 50 ]]; then
        echo "–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –£–ª—É—á—à–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫"
    fi
}
```

## –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ üî¥ –û–í–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ—Ç–ª–∞–¥–∫–∏
- [ ] –ë—ã—Å—Ç—Ä–æ–µ –≤—ã—è–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º
- [ ] –ü–æ–ª–Ω—ã–π —Å–±–æ—Ä –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
- [ ] –°–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥ –∫ –∞–Ω–∞–ª–∏–∑—É
- [ ] –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º

### –ö–∞—á–µ—Å—Ç–≤–æ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
- [ ] –ù–∞–ª–∏—á–∏–µ –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä –æ—Ç–ª–∞–¥–∫–∏
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –∑–∞–¥–∞—á
- [ ] –ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º

### –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ
- [ ] –ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –æ—à–∏–±–æ–∫
- [ ] –£–ª—É—á—à–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –æ—Ç–ª–∞–¥–∫–∏
- [ ] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤
- [ ] –ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ä—ã