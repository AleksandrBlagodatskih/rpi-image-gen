---
alwaysApply: ${cursor.file.path.includes("layer/") || cursor.file.path.includes("config/")}
---

# –ü—Ä–∞–≤–∏–ª–æ 17-2: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å–±–æ—Ä–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π rpi-image-gen.

## –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–±–æ—Ä–∫–∏

### –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

#### –¶–µ–ª–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤—Ä–µ–º–µ–Ω–∏ —Å–±–æ—Ä–∫–∏
```bash
# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Å–±–æ—Ä–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
MAX_BUILD_TIME_MINIMAL="10 minutes"      # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
MAX_BUILD_TIME_STANDARD="30 minutes"     # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
MAX_BUILD_TIME_COMPLEX="60 minutes"      # –°–ª–æ–∂–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ

# –ò–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å–±–æ—Ä–∫–∏
measure_build_time() {
    local start_time=$(date +%s)
    rpi-image-gen build -c config.yaml "$@"
    local end_time=$(date +%s)
    local duration=$((end_time - start_time))

    echo "–í—Ä–µ–º—è —Å–±–æ—Ä–∫–∏: $duration —Å–µ–∫—É–Ω–¥"

    if [[ $duration -gt 1800 ]]; then  # 30 –º–∏–Ω—É—Ç
        echo "–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –°–±–æ—Ä–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"
        return 1
    fi

    return 0
}
```

#### –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–±—Ä–∞–∑–∞
```yaml
# –ú–∏–Ω–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–±—Ä–∞–∑–∞
mmdebstrap:
  variant: minbase  # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –±–∞–∑—É
  packages:
    - essential    # –¢–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
    - --no-install-recommends  # –ë–µ–∑ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤

  customize-hooks:
    - |
      # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –ø–∞–∫–µ—Ç–æ–≤
      apt-get clean
      rm -rf /var/lib/apt/lists/*

      # –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–Ω—É–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
      rm -rf /usr/share/doc/*
      rm -rf /usr/share/man/*
      rm -rf /usr/share/locale/*  # –ï—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω—ã –ª–æ–∫–∞–ª–∏
```

### –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏

#### –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ apt –ø–∞–∫–µ—Ç–æ–≤
```bash
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ apt-cacher
setup_apt_cache() {
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ apt-cacher-ng –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
    apt-get install -y apt-cacher-ng

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞
    echo 'Acquire::http::Proxy "http://localhost:3142";' > /etc/apt/apt.conf.d/01proxy

    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
    systemctl enable apt-cacher-ng
    systemctl start apt-cacher-ng
}
```

#### –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ Docker –æ–±—Ä–∞–∑–æ–≤
```yaml
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –±–∞–∑–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤
mmdebstrap:
  variant: docker  # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Docker-like —Å–ª–æ–∏
  packages:
    - base-files
    - base-passwd

# –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–æ–µ–≤ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö —Å–±–æ—Ä–æ–∫
build-cache:
  enable: true
  layers:
    - base-system
    - development-tools
    - runtime-dependencies
```

## –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤

### –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç—å—é –∏ CPU
```bash
# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è —Å–±–æ—Ä–∫–∏
build_with_limits() {
    local mem_limit="2G"
    local cpu_limit="2"

    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ systemd-run –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
    systemd-run --scope \
        --property=MemoryLimit="$mem_limit" \
        --property=CPUQuota="$((cpu_limit * 100))%" \
        rpi-image-gen build -c config.yaml
}
```

### –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
```bash
# –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
parallel_package_install() {
    local packages=("nginx" "php" "mysql-server" "redis-server")

    # –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å –ø–æ–º–æ—â—å—é xargs
    printf '%s\n' "${packages[@]}" | \
        xargs -n 1 -P 4 apt-get install -y --no-install-recommends
}
```

## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

### –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
```bash
#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Å–±–æ—Ä–∫–∏

profile_build() {
    local config_file="$1"
    local profile_log="/tmp/build-profile-$(date +%s).log"

    echo "–ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±–æ—Ä–∫–∏: $config_file" > "$profile_log"

    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
    {
        echo "Timestamp,CPU%,Memory%,Disk_IO,Build_Step"
        local step="init"

        while ps aux | grep -q "rpi-image-gen.*build"; do
            local timestamp=$(date +%s)
            local cpu=$(top -bn1 | grep -E "(rpi-image-gen|mmdebstrap)" | awk '{sum += $9} END {print sum}' || echo "0")
            local mem=$(free | awk 'NR==2{printf "%.2f", $3*100/$2}' || echo "0")
            local disk_io=$(iostat -x 1 1 2>/dev/null | awk 'NR==4{print $4 + $5}' || echo "0")

            # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —ç—Ç–∞–ø–∞ —Å–±–æ—Ä–∫–∏
            if ps aux | grep -q "mmdebstrap.*packages"; then
                step="packages"
            elif ps aux | grep -q "customize.*hook"; then
                step="customize"
            elif ps aux | grep -q "update-initramfs"; then
                step="initramfs"
            fi

            echo "${timestamp},${cpu},${mem},${disk_io},${step}"
            sleep 5
        done
    } >> "$profile_log"

    echo "–ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $profile_log"
}
```

### –ú–µ—Ç—Ä–∏–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
```yaml
# –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
performance_metrics:
  build_time:
    target: "< 30 min"
    current: "25 min"
    status: "‚úÖ OK"

  image_size:
    target: "< 2GB"
    current: "1.8GB"
    status: "‚úÖ OK"

  package_checks:
    target: "0 redundant checks"
    current: "0"
    status: "‚úÖ OK"

  initramfs_updates:
    target: "1 update per build"
    current: "1"
    status: "‚úÖ OK"
```

## –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

### –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞
1. **–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π** - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∑–∞—Ä–∞–Ω–µ–µ
2. **–ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ** - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤
3. **–ë–∞–∑–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã** - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –±–∞–∑–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã
4. **–ú–Ω–æ–≥–æ—ç—Ç–∞–ø–Ω–∞—è —Å–±–æ—Ä–∫–∞** - —Ä–∞–∑–¥–µ–ª–∏—Ç—å —Å–±–æ—Ä–∫—É –Ω–∞ —ç—Ç–∞–ø—ã –¥–ª—è –ª—É—á—à–µ–≥–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è

### –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
```yaml
# –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–±–æ—Ä–∫–∏
device:
  layer: pi5
  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞

image:
  layer: image-rpios
  boot_part_size: 256M  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
  root_part_size: 4G    # –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞

layer:
  base: bookworm-minbase  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –±–∞–∑–∞
  # –¢–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–ª–æ–∏
```

### –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ —É–ª—É—á—à–µ–Ω–∏–µ
```bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
analyze_performance() {
    local build_log="$1"

    echo "–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–±–æ—Ä–∫–∏..."

    # –ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ —ç—Ç–∞–ø–∞–º
    grep "duration\|time" "$build_log" | while read -r line; do
        echo "–≠—Ç–∞–ø: $line"
    done

    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    if grep -q "update-initramfs" "$build_log"; then
        local initramfs_count=$(grep -c "update-initramfs" "$build_log")
        if [[ $initramfs_count -gt 1 ]]; then
            echo "–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è initramfs ($initramfs_count)"
            echo "–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –û–±–Ω–æ–≤–ª—è–π—Ç–µ initramfs —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ –∫–æ–Ω—Ü–µ"
        fi
    fi
}
```

