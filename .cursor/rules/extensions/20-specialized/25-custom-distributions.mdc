---
alwaysApply: ${cursor.file.content && (cursor.file.content.includes("tryboot") || cursor.file.content.includes("ab-boot") || cursor.file.content.includes("BOOT_ORDER"))}
---

# –ü—Ä–∞–≤–∏–ª–æ 79-1: –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ A/B –∑–∞–≥—Ä—É–∑–∫–∏

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ A/B (Atomic) –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≤ rpi-image-gen.

## –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

## –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ A/B —Å–∏—Å—Ç–µ–º—ã

### –ü—Ä–∏–Ω—Ü–∏–ø—ã A/B –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
- **–ê—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç—å**: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–∏–±–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É—Å–ø–µ—à–Ω–æ, –ª–∏–±–æ –æ—Ç–∫–∞—Ç—ã–≤–∞–µ—Ç—Å—è
- **–ò–∑–æ–ª—è—Ü–∏—è**: –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞ —Ç–µ–∫—É—â—É—é —Ä–∞–±–æ—Ç–∞—é—â—É—é —Å–∏—Å—Ç–µ–º—É
- **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å**: –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–∫–∞—Ç–∞ –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö
- **–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å**: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ —Å–±–æ—è—Ö

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞–∑–¥–µ–ª–æ–≤
```bash
# –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Å—Ö–µ–º–∞ —Ä–∞–∑–¥–µ–ª–æ–≤ –¥–ª—è A/B
# /dev/mmcblk0p1 - boot (FAT32, ~256MB) - –æ–±—â–∏–π –¥–ª—è –æ–±–æ–∏—Ö —Å–ª–æ—Ç–æ–≤
# /dev/mmcblk0p2 - root-a (ext4, –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–∞–∑–º–µ—Ä) - —Å–ª–æ—Ç A
# /dev/mmcblk0p3 - root-b (ext4, –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–∞–∑–º–µ—Ä) - —Å–ª–æ—Ç B
# /dev/mmcblk0p4 - data (ext4, –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –º–µ—Å—Ç–æ) - –æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–∞–∑–¥–µ–ª–æ–≤
verify_ab_layout() {
    local boot_part="/dev/mmcblk0p1"
    local root_a="/dev/mmcblk0p2"
    local root_b="/dev/mmcblk0p3"
    local data_part="/dev/mmcblk0p4"

    if [[ ! -b "$boot_part" || ! -b "$root_a" || ! -b "$root_b" ]]; then
        die "A/B partition layout not found"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ GPT labels
    local label_a=$(blkid -s LABEL -o value "$root_a")
    local label_b=$(blkid -s LABEL -o value "$root_b")

    if [[ "$label_a" != "root-a" || "$label_b" != "root-b" ]]; then
        die "Incorrect GPT labels for A/B partitions"
    fi
}
```

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ EEPROM –∏ Bootloader

### –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Raspberry Pi EEPROM
```yaml
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ EEPROM –¥–ª—è A/B boot
customize-hooks:
  - |
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ boot order –¥–ª—è A/B
    rpi-eeprom-config --edit << EOF
BOOT_ORDER=0xf21
TFTP_PREFIX=tryboot
BOOT_DELAY=0
TFTP_ENABLED=1
EOF

    # –°–æ–∑–¥–∞–Ω–∏–µ tryboot –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    cat > /boot/tryboot.txt << 'EOF'
[tryboot]
kernel=kernel8.img
initramfs initrd.img followkernel
dtparam=i2c_arm=on
dtparam=spi=on
avoid_warnings=1
EOF
```

### –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä —Å–ª–æ—Ç–æ–≤
```bash
# –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–±–æ—Ä–∞ —Å–ª–æ—Ç–æ–≤
select_boot_slot() {
    local current_order=$(rpi-eeprom-config | grep BOOT_ORDER | cut -d= -f2)
    local target_slot=""

    case "$current_order" in
        "0xf21")  # –¢–µ–∫—É—â–∏–π: —Å–ª–æ—Ç A, —Å–ª–µ–¥—É—é—â–∏–π: —Å–ª–æ—Ç B
            target_slot="0xf12"
            echo "Switching to slot B (0xf12)"
            ;;
        "0xf12")  # –¢–µ–∫—É—â–∏–π: —Å–ª–æ—Ç B, —Å–ª–µ–¥—É—é—â–∏–π: —Å–ª–æ—Ç A
            target_slot="0xf21"
            echo "Switching to slot A (0xf21)"
            ;;
        *)
            echo "Unknown boot order: $current_order, defaulting to slot A"
            target_slot="0xf21"
            ;;
    esac

    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ boot order
    rpi-eeprom-config --edit "BOOT_ORDER=$target_slot"
}
```

## –°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π

