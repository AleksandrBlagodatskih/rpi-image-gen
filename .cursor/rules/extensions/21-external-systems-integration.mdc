---
alwaysApply: ${cursor.file.path.includes("integration/") || cursor.file.content.includes("api")}
---


# –ü—Ä–∞–≤–∏–ª–æ 21: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π rpi-image-gen —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ö—É–∫–æ–≤, –≤–Ω–µ—à–Ω–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.

## –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

## –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏

### Docker –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è

#### –°–æ–∑–¥–∞–Ω–∏–µ Docker-–æ–±—Ä–∞–∑–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º:

```dockerfile
FROM debian:bookworm-slim

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π rpi-image-gen
RUN apt-get update && apt-get install -y \
    qemu-user-static \
    binfmt-support \
    dosfstools \
    e2fsprogs \
    parted \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
COPY extension/ /opt/rpi-image-gen-extension/

# –°–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏
COPY build.sh /build.sh
RUN chmod +x /build.sh

CMD ["/build.sh"]
```

```bash
#!/bin/bash
# build.sh - –°–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º
set -euo pipefail

cd /opt/rpi-image-gen-extension

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ rpi-image-gen (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
if [ ! -d "rpi-image-gen" ]; then
    git clone https://github.com/raspberrypi/rpi-image-gen.git
fi

cd rpi-image-gen

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º
export IGconf_extension_docker_mode=true
./rpi-image-gen build -c ../config/extension-config.yaml

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
cp work/image-*/*.img /output/
```

#### Kubernetes –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:

```yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rpi-image-builder
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rpi-image-builder
  template:
    metadata:
      labels:
        app: rpi-image-builder
    spec:
      containers:
      - name: builder
        image: your-registry/rpi-image-builder:latest
        env:
        - name: IGconf_extension_target_device
          value: "pi4"
        - name: IGconf_extension_custom_firmware
          value: "true"
        volumeMounts:
        - name: output
          mountPath: /output
        - name: config
          mountPath: /config
      volumes:
      - name: output
        emptyDir: {}
      - name: config
        configMap:
          name: extension-config
```

### –û–±–ª–∞—á–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è

#### AWS S3 –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤:

```bash
#!/bin/bash
# –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–∑–∞ –≤ S3
upload_to_s3() {
    local image_file="$1"
    local s3_bucket="$2"
    local s3_key="images/$(basename "$image_file")"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è AWS CLI
    command -v aws >/dev/null 2>&1 || {
        echo "–û—à–∏–±–∫–∞: AWS CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" >&2
        return 1
    }

    # –ó–∞–≥—Ä—É–∑–∫–∞ –≤ S3
    aws s3 cp "$image_file" "s3://$s3_bucket/$s3_key" \
        --storage-class STANDARD_IA \
        --metadata "built=$(date -Iseconds),extension=$IGconf_extension_name"

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω–æ–π —Å—Å—ã–ª–∫–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    if [ "${IGconf_extension_public_download:-false}" = "true" ]; then
        aws s3api put-object-acl \
            --bucket "$s3_bucket" \
            --key "$s3_key" \
            --acl public-read
    fi

    echo "–û–±—Ä–∞–∑ –∑–∞–≥—Ä—É–∂–µ–Ω: https://$s3_bucket.s3.amazonaws.com/$s3_key"
}
```

#### GitHub Releases API:

```python
#!/usr/bin/env python3
import os
import requests
import mimetypes
from pathlib import Path

def upload_to_github_releases(image_path, release_tag, repo_owner, repo_name):
    """–ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–∑–∞ –≤ GitHub Releases"""

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    github_token = os.getenv('GITHUB_TOKEN')
    if not github_token:
        raise ValueError("–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω GITHUB_TOKEN")

    # –ü–æ–∏—Å–∫ release
    release_url = f"https://api.github.com/repos/{repo_owner}/{repo_name}/releases/tags/{release_tag}"
    headers = {
        'Authorization': f'token {github_token}',
        'Accept': 'application/vnd.github.v3+json'
    }

    response = requests.get(release_url, headers=headers)
    response.raise_for_status()
    release_data = response.json()

    # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
    upload_url = release_data['upload_url'].replace('{?name,label}', '')
    image_file = Path(image_path)

    with open(image_file, 'rb') as f:
        files = {'file': (image_file.name, f, mimetypes.guess_type(image_file)[0])}
        response = requests.post(
            f"{upload_url}?name={image_file.name}&label={image_file.name}",
            headers=headers,
            files=files
        )

    response.raise_for_status()
    asset_data = response.json()

    print(f"–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: {asset_data['browser_download_url']}")
    return asset_data['browser_download_url']
```

---

## –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- [ ] –ü—Ä–∞–≤–∏–ª–æ –∏–∑—É—á–µ–Ω–æ –∏ –ø–æ–Ω—è—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ CI/CD
- [ ] –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –º–µ—Ä–¥–∂–∞
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞
- [ ] –†–µ–≥—É–ª—è—Ä–Ω—ã–π –∞—É–¥–∏—Ç —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞

### –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- [ ] 100% —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ –Ω–æ–≤–æ–º –∫–æ–¥–µ
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–µ—Ç–∫–∞—Ö
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏—è
- [ ] –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –ø—Ä–∞–≤–∏–ª–∞

### –ò—Å—Ç–æ—á–Ω–∏–∫
–°–æ–∑–¥–∞–Ω–æ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: `22_–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è_—Å_–≤–Ω–µ—à–Ω–∏–º–∏_—Å–∏—Å—Ç–µ–º–∞–º–∏.mdc`
