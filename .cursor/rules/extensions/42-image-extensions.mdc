---
alwaysApply: ${cursor.file.path.includes("image/")}
---


# –ü—Ä–∞–≤–∏–ª–æ 42: –†–∞—Å—à–∏—Ä–µ–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤ –¥–∏—Å–∫–æ–≤ (Image Extensions)

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–†–∞—Å—à–∏—Ä–µ–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤ –¥–∏—Å–∫–æ–≤ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Å–∫–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤ Raspberry Pi, –≤–∫–ª—é—á–∞—è —Ç–∞–±–ª–∏—Ü—ã —Ä–∞–∑–¥–µ–ª–æ–≤, —Ñ–∞–π–ª–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã, –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.

## –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

## –†–∞—Å—à–∏—Ä–µ–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤ –¥–∏—Å–∫–æ–≤ (Image Extensions)

–†–∞—Å—à–∏—Ä–µ–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤ –¥–∏—Å–∫–æ–≤ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Å–∫–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤ Raspberry Pi, –≤–∫–ª—é—á–∞—è —Ç–∞–±–ª–∏—Ü—ã —Ä–∞–∑–¥–µ–ª–æ–≤, —Ñ–∞–π–ª–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã, –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.

### –û–±–∑–æ—Ä —Ç–∏–ø–æ–≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –æ–±—Ä–∞–∑–æ–≤

#### –ü—Ä–æ—Å—Ç—ã–µ –æ–±—Ä–∞–∑—ã (Simple Images)
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ**: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å 1-2 —Ä–∞–∑–¥–µ–ª–∞–º–∏
- **–ü—Ä–∏–º–µ—Ä—ã**: `simple_dual` (boot + root), `single_root` (—Ç–æ–ª—å–∫–æ root)
- **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ**: –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–æ—Å—Ç—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏

#### –°–ª–æ–∂–Ω—ã–µ –æ–±—Ä–∞–∑—ã (Complex Images)
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ**: –ü—Ä–æ–¥–∞–∫—à–Ω-—Å–∏—Å—Ç–µ–º—ã —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Ä–∞–∑–¥–µ–ª–∞–º–∏
- **–ü—Ä–∏–º–µ—Ä—ã**: `ab_userdata` (A/B –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ, —Å–ª–æ—Ç—ã)
- **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ**: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è OTA, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

#### –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—ã (Specialized Images)
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ**: –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
- **–ü—Ä–∏–º–µ—Ä—ã**: RAID-–º–∞—Å—Å–∏–≤—ã, –≤–Ω–µ—à–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞, –∫–ª–∞—Å—Ç–µ—Ä—ã
- **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ**: –ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è, –≤—ã—Å–æ–∫–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ image/

```
image/
‚îú‚îÄ‚îÄ {partition_scheme}/              # –¢–∏–ø —Ç–∞–±–ª–∏—Ü—ã —Ä–∞–∑–¥–µ–ª–æ–≤ (mbr, gpt)
‚îÇ   ‚îú‚îÄ‚îÄ {image_name}/               # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–∑–∞
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ image.yaml             # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–ª–æ—è
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ genimage.cfg.in.*      # –®–∞–±–ª–æ–Ω—ã genimage (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ –§–°)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ pre-image.sh           # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ setup.sh               # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–¥–µ–ª–æ–≤
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ post-image.sh          # –§–∏–Ω–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ mke2fs.conf            # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ext4 (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ device/                # –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ provisionmap-*.json # –ö–∞—Ä—Ç—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ *.rules            # –ü—Ä–∞–≤–∏–ª–∞ udev
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ bdebstrap/             # –•—É–∫–∏ —ç—Ç–∞–ø–æ–≤ —Å–±–æ—Ä–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ profile/               # –ü—Ä–æ—Ñ–∏–ª–∏ —Å–±–æ—Ä–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
‚îÇ   ‚îî‚îÄ‚îÄ README.md                  # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Ç–∏–ø–∞ —Ä–∞–∑–¥–µ–ª–æ–≤
‚îî‚îÄ‚îÄ README.md                      # –û–±—â–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –æ–±—Ä–∞–∑–æ–≤
```

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –æ–±—Ä–∞–∑–æ–≤

#### 1. image.yaml - –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–ª–æ—è

**–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–∫–∏ X-Env:**
```yaml
# METABEGIN
# X-Env-Layer-Name: {unique_name}
# X-Env-Layer-Category: image
# X-Env-Layer-Description: –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
# X-Env-Layer-Version: 1.0.0
# X-Env-Layer-Requires: essential,image-base,device-base
# X-Env-Layer-Provides: image
# X-Env-VarPrefix: {image_name}
#
# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ)
# X-Env-Var-{variable_name}: {default_value}
# X-Env-Var-{variable_name}-Description: –û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
# X-Env-Var-{variable_name}-Required: y|n
# X-Env-Var-{variable_name}-Valid: validation_rules
# X-Env-Var-{variable_name}-Set: y|n|immediate|force
# METAEND
---
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è mmdebstrap (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
mmdebstrap:
  packages:
    - dosfstools
    - e2fsprogs
    - parted
  setup-hooks:
    - echo "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤"
```

**–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:**
```yaml
# –¢–∏–ø —Ç–∞–±–ª–∏—Ü—ã —Ä–∞–∑–¥–µ–ª–æ–≤ (mbr/gpt)
# X-Env-Var-partition_table_type: mbr
# X-Env-Var-partition_table_type-Valid: mbr,gpt

# –†–∞–∑–º–µ—Ä—ã —Ä–∞–∑–¥–µ–ª–æ–≤
# X-Env-Var-boot_part_size: 100%
# X-Env-Var-root_part_size: 100%

# –¢–∏–ø —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã root —Ä–∞–∑–¥–µ–ª–∞
# X-Env-Var-rootfs_type: ext4
# X-Env-Var-rootfs_type-Valid: ext4,btrfs,f2fs

# Provisioning map —Ç–∏–ø
# X-Env-Var-pmap: clear
# X-Env-Var-pmap-Valid: clear,crypt
```

#### 2. –®–∞–±–ª–æ–Ω—ã genimage.cfg.in

**–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã:**
- `genimage.cfg.in.ext4` - –¥–ª—è ext4 —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
- `genimage.cfg.in.btrfs` - –¥–ª—è btrfs (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
- `genimage.cfg.in.f2fs` - –¥–ª—è f2fs (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)

**–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —à–∞–±–ª–æ–Ω–∞:**
```bash
# –ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑ —Å sparse –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
image <IMAGE_NAME>.<IMAGE_SUFFIX>.sparse {
   android-sparse {
      image = <IMAGE_NAME>.<IMAGE_SUFFIX>
   }
}

# –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–∑
image <IMAGE_NAME>.<IMAGE_SUFFIX> {
   hdimage {
      align = 8M
      partition-table-type = "{mbr|gpt}"
      fill = true
   }

   # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–æ–≤
   partition boot {
      partition-type = 0xC
      bootable = true
      image = "boot.vfat"
   }

   partition root {
      partition-type = 0x83
      image = "root.{ext4|btrfs|f2fs}"
   }
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤ —Ä–∞–∑–¥–µ–ª–æ–≤
image boot.vfat {
   vfat {
      label = "BOOT"
      extraargs = "-S <SECTOR_SIZE> -i <BOOT_LABEL>"
   }
   size = <BOOT_SIZE>
   mountpoint = "/boot/firmware"
}

image root.ext4 {
   ext4 {
      label = "ROOT"
      use-mke2fs = true
      mke2fs-conf = <MKE2FS_CONFIG>
      extraargs = "-U <ROOT_UUID>"
   }
   size = <ROOT_SIZE>
   mountpoint = "/"
}
```

#### 3. pre-image.sh - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–±—Ä–∞–∑–∞

**–û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:**
```bash
#!/bin/bash
set -eu

fs=$1
genimg_in=$2

[[ -d "$fs" ]] || exit 0

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è UUID –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤
BOOT_LABEL=$(uuidgen | sed 's/-.*//' | tr 'a-f' 'A-F')
BOOT_UUID=$(echo "$BOOT_LABEL" | sed 's/^\(....\)\(....\)$/\1-\2/')
ROOT_UUID=$(uuidgen)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ UUID –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
rm -f ${IGconf_image_outputdir}/img_uuids
for v in BOOT_LABEL BOOT_UUID ROOT_UUID; do
    eval "val=\$$v"
    echo "$v=$val" >> "${IGconf_image_outputdir}/img_uuids"
done

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ genimage –∏–∑ —à–∞–±–ª–æ–Ω–∞
cat genimage.cfg.in.${IGconf_image_rootfs_type} | sed \
   -e "s|<IMAGE_NAME>|$IGconf_image_name|g" \
   -e "s|<IMAGE_SUFFIX>|$IGconf_image_suffix|g" \
   -e "s|<BOOT_SIZE>|$IGconf_image_boot_part_size|g" \
   -e "s|<ROOT_SIZE>|$IGconf_image_root_part_size|g" \
   -e "s|<BOOT_LABEL>|$BOOT_LABEL|g" \
   -e "s|<ROOT_UUID>|$ROOT_UUID|g" \
   > ${genimg_in}/genimage.cfg

# –û–±—Ä–∞–±–æ—Ç–∫–∞ provisioning map
if [[ -f "$IGconf_image_pmapfile" ]]; then
   cp ${IGconf_image_pmapfile} ${IGconf_image_outputdir}/provisionmap.json
   # –ó–∞–º–µ–Ω–∞ UUID –≤ provisioning map
   sed -i "s|<ROOT_UUID>|$ROOT_UUID|g" ${IGconf_image_outputdir}/provisionmap.json
fi
```

#### 4. setup.sh - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–¥–µ–ª–æ–≤

**–û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:**
```bash
#!/bin/bash
set -eu

LABEL="$1"
BOOTUUID="$2"
ROOTUUID="$3"

case $LABEL in
   ROOT)
      # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
      case $IGconf_image_rootfs_type in
         ext4)
            cat << EOF > $IMAGEMOUNTPATH/etc/fstab
UUID=${ROOTUUID} /               ext4 rw,relatime,errors=remount-ro,commit=30 0 1
EOF
            ;;
         btrfs)
            cat << EOF > $IMAGEMOUNTPATH/etc/fstab
UUID=${ROOTUUID} /               btrfs defaults 0 0
EOF
            ;;
      esac

      # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
      cat << EOF >> $IMAGEMOUNTPATH/etc/fstab
UUID=${BOOTUUID} /boot/firmware  vfat defaults,rw,noatime,errors=remount-ro 0 2
EOF
      ;;
   BOOT)
      # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
      sed -i "s|root=\([^ ]*\)|root=UUID=${ROOTUUID}|" $IMAGEMOUNTPATH/cmdline.txt
      ;;
esac
```

### –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã

#### Provisioning Maps (device/provisionmap-*.json)

**–§–æ—Ä–º–∞—Ç JSON:**
```json
[
   {
      "attributes": {
         "PMAPversion": "1.0.0",
         "system_type": "flat"
      }
   },
   {
      "partitions": [
         {"image": "boot"},
         {"image": "root"}
      ]
   }
]
```

**–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ:**
```json
{
   "encrypted": {
      "luks2": {
         "key_size": 512,
         "cipher": "aes-xts-plain64",
         "label": "root",
         "uuid": "<CRYPT_UUID>",
         "hash": "sha256"
      },
      "partitions": [
         {"image": "root"}
      ]
   }
}
```

#### –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (device/*.rules)

**–ü—Ä–∞–≤–∏–ª–∞ udev:**
```bash
# device/slot.rules
SUBSYSTEM=="block", ENV{ID_FS_UUID}!="", ACTION=="add|change", IMPORT{program}="/usr/bin/rpi-slot -u %E{ID_FS_UUID}", SYMLINK+="$env{SLOT}"
```

### –¢–∏–ø—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –æ–±—Ä–∞–∑–æ–≤

#### 1. –ü—Ä–æ—Å—Ç—ã–µ –æ–±—Ä–∞–∑—ã (Simple Images)

**–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**
- 1-2 —Ä–∞–∑–¥–µ–ª–∞ (boot + root)
- –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
- –ü–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

**–ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:**
```
image/mbr/simple_dual/
‚îú‚îÄ‚îÄ image.yaml
‚îú‚îÄ‚îÄ genimage.cfg.in.ext4
‚îú‚îÄ‚îÄ genimage.cfg.in.btrfs
‚îú‚îÄ‚îÄ pre-image.sh
‚îú‚îÄ‚îÄ setup.sh
‚îî‚îÄ‚îÄ device/
    ‚îú‚îÄ‚îÄ provisionmap-clear.json
    ‚îî‚îÄ‚îÄ provisionmap-crypt.json
```

#### 2. –°–ª–æ–∂–Ω—ã–µ –æ–±—Ä–∞–∑—ã (Complex Images)

**–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**
- –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã
- A/B –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
- –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
- –°–ª–æ—Ç—ã –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏

**–ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:**
```
image/gpt/ab_userdata/
‚îú‚îÄ‚îÄ image.yaml
‚îú‚îÄ‚îÄ genimage.cfg.in
‚îú‚îÄ‚îÄ pre-image.sh
‚îú‚îÄ‚îÄ setup.sh
‚îú‚îÄ‚îÄ mke2fs.conf
‚îî‚îÄ‚îÄ device/
    ‚îú‚îÄ‚îÄ provisionmap-clear.json
    ‚îú‚îÄ‚îÄ provisionmap-crypt.json
    ‚îú‚îÄ‚îÄ provisionmap-hybrid.json
    ‚îú‚îÄ‚îÄ slot.rules
    ‚îî‚îÄ‚îÄ emmc-wp.sh
```

#### 3. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—ã (Specialized Images)

**–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**
- –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
- –ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ-ready

### –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

#### 1. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ uchroot –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π
- –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
- –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞–º–∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è

#### 2. –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö
- –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–ø–µ—Ä–∞—Ü–∏–π
- –ê—Ç–æ–º–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≥–¥–µ –≤–æ–∑–º–æ–∂–Ω–æ

#### 3. –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å
- –ü–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤ —Ä–∞–∑–¥–µ–ª–æ–≤
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –§–°
- –ì–∏–±–∫–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ

#### 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º–æ—Å—Ç—å
- –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è –ø–æ–ª–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤
- –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

### –ü—Ä–∏–º–µ—Ä—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π

#### –ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–≥–æ –æ–±—Ä–∞–∑–∞ (simple_dual)

**image.yaml:**
```yaml
# METABEGIN
# X-Env-Layer-Name: simple-dual
# X-Env-Layer-Category: image
# X-Env-Layer-Description: –ü—Ä–æ—Å—Ç–æ–π –æ–±—Ä–∞–∑ —Å –¥–≤—É–º—è —Ä–∞–∑–¥–µ–ª–∞–º–∏ (boot + root)
# X-Env-Layer-Version: 1.0.0
# X-Env-Layer-Requires: essential,image-base
# X-Env-Layer-Provides: image
# X-Env-VarPrefix: simple_dual
#
# X-Env-Var-rootfs_type: ext4
# X-Env-Var-rootfs_type-Description: –¢–∏–ø —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã root —Ä–∞–∑–¥–µ–ª–∞
# X-Env-Var-rootfs_type-Required: false
# X-Env-Var-rootfs_type-Valid: ext4,btrfs
# X-Env-Var-rootfs_type-Set: true
#
# X-Env-Var-boot_part_size: 200M
# X-Env-Var-boot_part_size-Description: –†–∞–∑–º–µ—Ä –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
# X-Env-Var-boot_part_size-Required: false
# X-Env-Var-boot_part_size-Valid: size
# X-Env-Var-boot_part_size-Set: true
#
# X-Env-Var-root_part_size: 100%
# X-Env-Var-root_part_size-Description: –†–∞–∑–º–µ—Ä –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
# X-Env-Var-root_part_size-Required: false
# X-Env-Var-root_part_size-Valid: size
# X-Env-Var-root_part_size-Set: true
# METAEND
---
mmdebstrap:
  packages:
    - dosfstools
    - e2fsprogs
```

#### –ü—Ä–∏–º–µ—Ä —Å–ª–æ–∂–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ (ab_userdata)

**image.yaml:**
```yaml
# METABEGIN
# X-Env-Layer-Name: ab-userdata
# X-Env-Layer-Category: image
# X-Env-Layer-Description: –û–±—Ä–∞–∑ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π A/B –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
# X-Env-Layer-Version: 2.0.0
# X-Env-Layer-Requires: essential,image-base,device-base
# X-Env-Layer-Provides: image
# X-Env-VarPrefix: ab_userdata
#
# X-Env-Var-system_part_size: 100%
# X-Env-Var-system_part_size-Description: –†–∞–∑–º–µ—Ä —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –Ω–∞ —Å–ª–æ—Ç
# X-Env-Var-system_part_size-Required: false
# X-Env-Var-system_part_size-Valid: size
# X-Env-Var-system_part_size-Set: true
#
# X-Env-Var-pmap: crypt
# X-Env-Var-pmap-Description: –¢–∏–ø provisioning map
# X-Env-Var-pmap-Required: false
# X-Env-Var-pmap-Valid: clear,crypt,hybrid
# X-Env-Var-pmap-Set: force
# METAEND
---
mmdebstrap:
  packages:
    - dosfstools
    - e2fsprogs
    - parted
    - initramfs-tools
    - rpi-blockutils
```

### –ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –æ–±—Ä–∞–∑–æ–≤

#### 1. –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
- –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–µ–ª—å –∏ —Å—Ü–µ–Ω–∞—Ä–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
- –í—ã–±—Ä–∞—Ç—å —Ç–∏–ø —Ç–∞–±–ª–∏—Ü—ã —Ä–∞–∑–¥–µ–ª–æ–≤ (MBR/GPT)
- –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–æ–≤
- –í—ã–±—Ä–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã

#### 2. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è
- –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞—Ç–∞–ª–æ–≥–æ–≤
- –†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –≤ image.yaml
- –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω—ã genimage.cfg.in –¥–ª—è –≤—Å–µ—Ö –§–°
- –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–∫—Ä–∏–ø—Ç—ã pre-image.sh –∏ setup.sh
- –î–æ–±–∞–≤–∏—Ç—å provisioning maps –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

#### 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±–æ—Ä–∫–∏ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
- –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤
- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ —Ü–µ–ª–µ–≤—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

#### 4. –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
- –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
- –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
- –ü—Ä–∏–º–µ—Ä—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
- –ò–∑–≤–µ—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

### –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏

#### –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ª–æ–µ–≤ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
```yaml
# X-Env-Layer-Requires: essential,image-base,device-base
# X-Env-VarRequires: IGconf_device_storage_type
```

#### –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –∑–∞–≥—Ä—É–∑—á–∏–∫–æ–º
- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ cmdline.txt –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ fstab –¥–ª—è –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤
- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è initramfs –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

#### –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å provisioning —Å–∏—Å—Ç–µ–º–æ–π
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ provisioning maps
- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è UUID –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤
- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –∫–ª—é—á–∞–º–∏

### –®–∞–±–ª–æ–Ω—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –æ–±—Ä–∞–∑–æ–≤

#### –®–∞–±–ª–æ–Ω –ø—Ä–æ—Å—Ç–æ–≥–æ –æ–±—Ä–∞–∑–∞ (Simple Image Template)

**–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞:**
```
image/mbr/{image_name}/
‚îú‚îÄ‚îÄ image.yaml                    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–ª–æ—è
‚îú‚îÄ‚îÄ genimage.cfg.in.ext4         # –®–∞–±–ª–æ–Ω –¥–ª—è ext4
‚îú‚îÄ‚îÄ genimage.cfg.in.btrfs        # –®–∞–±–ª–æ–Ω –¥–ª—è btrfs
‚îú‚îÄ‚îÄ pre-image.sh                 # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–±—Ä–∞–∑–∞
‚îú‚îÄ‚îÄ setup.sh                     # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–¥–µ–ª–æ–≤
‚îî‚îÄ‚îÄ device/
    ‚îú‚îÄ‚îÄ provisionmap-clear.json  # –ü—Ä–æ—Å—Ç–∞—è –∫–∞—Ä—Ç–∞
    ‚îî‚îÄ‚îÄ provisionmap-crypt.json  # –° —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º
```

**–®–∞–±–ª–æ–Ω image.yaml:**
```yaml
# METABEGIN
# X-Env-Layer-Name: {image_name}
# X-Env-Layer-Category: image
# X-Env-Layer-Description: {–û–ø–∏—Å–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞}
# X-Env-Layer-Version: 1.0.0
# X-Env-Layer-Requires: essential,image-base
# X-Env-Layer-Provides: image
# X-Env-VarPrefix: {image_name}
#
# X-Env-Var-rootfs_type: ext4
# X-Env-Var-rootfs_type-Description: –¢–∏–ø —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã root —Ä–∞–∑–¥–µ–ª–∞
# X-Env-Var-rootfs_type-Required: false
# X-Env-Var-rootfs_type-Valid: ext4,btrfs
# X-Env-Var-rootfs_type-Set: true
#
# X-Env-Var-boot_part_size: 200M
# X-Env-Var-boot_part_size-Description: –†–∞–∑–º–µ—Ä –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
# X-Env-Var-boot_part_size-Required: false
# X-Env-Var-boot_part_size-Valid: size
# X-Env-Var-boot_part_size-Set: true
#
# X-Env-Var-root_part_size: 100%
# X-Env-Var-root_part_size-Description: –†–∞–∑–º–µ—Ä –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
# X-Env-Var-root_part_size-Required: false
# X-Env-Var-root_part_size-Valid: size
# X-Env-Var-root_part_size-Set: true
#
# X-Env-Var-pmap: clear
# X-Env-Var-pmap-Description: –¢–∏–ø provisioning map
# X-Env-Var-pmap-Required: false
# X-Env-Var-pmap-Valid: clear,crypt
# X-Env-Var-pmap-Set: force
# METAEND
---
mmdebstrap:
  packages:
    - dosfstools
    - e2fsprogs
```

**–®–∞–±–ª–æ–Ω genimage.cfg.in.ext4:**
```bash
image <IMAGE_NAME>.<IMAGE_SUFFIX>.sparse {
   android-sparse {
      image = <IMAGE_NAME>.<IMAGE_SUFFIX>
   }
}

image <IMAGE_NAME>.<IMAGE_SUFFIX> {
   hdimage {
      align = 8M
      partition-table-type = "mbr"
      fill = true
   }

   partition boot {
      partition-type = 0xC
      bootable = true
      image = "boot.vfat"
   }

   partition root {
      partition-type = 0x83
      image = "root.ext4"
   }
}

image boot.vfat {
   vfat {
      label = "BOOT"
      extraargs = "-S <SECTOR_SIZE> -i <BOOT_LABEL>"
   }
   size = <BOOT_SIZE>
   mountpoint = "/boot/firmware"
}

image root.ext4 {
   ext4 {
      label = "ROOT"
      use-mke2fs = true
      mke2fs-conf = <MKE2FS_CONFIG>
      extraargs = "-U <ROOT_UUID>"
   }
   size = <ROOT_SIZE>
   mountpoint = "/"
}
```

#### –®–∞–±–ª–æ–Ω —Å–ª–æ–∂–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ (Complex Image Template)

**–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞:**
```
image/gpt/{image_name}/
‚îú‚îÄ‚îÄ image.yaml                    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–ª–æ—è
‚îú‚îÄ‚îÄ genimage.cfg.in              # –ï–¥–∏–Ω—ã–π —à–∞–±–ª–æ–Ω
‚îú‚îÄ‚îÄ pre-image.sh                 # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–±—Ä–∞–∑–∞
‚îú‚îÄ‚îÄ setup.sh                     # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–¥–µ–ª–æ–≤
‚îú‚îÄ‚îÄ mke2fs.conf                  # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ext4
‚îî‚îÄ‚îÄ device/
    ‚îú‚îÄ‚îÄ provisionmap-clear.json  # –ü—Ä–æ—Å—Ç–∞—è –∫–∞—Ä—Ç–∞
    ‚îú‚îÄ‚îÄ provisionmap-crypt.json  # –° —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º
    ‚îú‚îÄ‚îÄ provisionmap-hybrid.json # –ì–∏–±—Ä–∏–¥–Ω–∞—è
    ‚îú‚îÄ‚îÄ slot.rules               # –ü—Ä–∞–≤–∏–ª–∞ —Å–ª–æ—Ç–æ–≤
    ‚îî‚îÄ‚îÄ emmc-wp.sh              # –ó–∞—â–∏—Ç–∞ –æ—Ç –∑–∞–ø–∏—Å–∏
```

**–®–∞–±–ª–æ–Ω image.yaml –¥–ª—è —Å–ª–æ–∂–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞:**
```yaml
# METABEGIN
# X-Env-Layer-Name: {image_name}
# X-Env-Layer-Category: image
# X-Env-Layer-Description: {–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–æ–∂–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ —Å A/B –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏}
# X-Env-Layer-Version: 2.0.0
# X-Env-Layer-Requires: essential,image-base,device-base
# X-Env-Layer-Provides: image
# X-Env-VarPrefix: {image_name}
#
# X-Env-Var-system_part_size: 100%
# X-Env-Var-system_part_size-Description: –†–∞–∑–º–µ—Ä —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –Ω–∞ —Å–ª–æ—Ç
# X-Env-Var-system_part_size-Required: false
# X-Env-Var-system_part_size-Valid: size
# X-Env-Var-system_part_size-Set: true
#
# X-Env-Var-data_part_size: 100%
# X-Env-Var-data_part_size-Description: –†–∞–∑–º–µ—Ä —Ä–∞–∑–¥–µ–ª–∞ –¥–∞–Ω–Ω—ã—Ö
# X-Env-Var-data_part_size-Required: false
# X-Env-Var-data_part_size-Valid: size
# X-Env-Var-data_part_size-Set: true
#
# X-Env-Var-pmap: crypt
# X-Env-Var-pmap-Description: –¢–∏–ø provisioning map
# X-Env-Var-pmap-Required: false
# X-Env-Var-pmap-Valid: clear,crypt,hybrid
# X-Env-Var-pmap-Set: force
#
# X-Env-Var-ptable_protect: n
# X-Env-Var-ptable_protect-Description: –í–∫–ª—é—á–∏—Ç—å –∑–∞—â–∏—Ç—É —Ç–∞–±–ª–∏—Ü—ã —Ä–∞–∑–¥–µ–ª–æ–≤ eMMC
# X-Env-Var-ptable_protect-Required: false
# X-Env-Var-ptable_protect-Valid: y,n
# X-Env-Var-ptable_protect-Set: true
# METAEND
---
mmdebstrap:
  packages:
    - dosfstools
    - e2fsprogs
    - parted
    - initramfs-tools
    - rpi-blockutils
```

#### –®–∞–±–ª–æ–Ω –æ–±—Ä–∞–∑–∞ —Å RAID (RAID Image Template)

**–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
- –í–Ω–µ—à–Ω–∏–µ –¥–∏—Å–∫–∏ —Å RAID-–º–∞—Å—Å–∏–≤–∞–º–∏
- SD –∫–∞—Ä—Ç–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è RAID

**–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞:**
```
image/mbr/{image_name}/
‚îú‚îÄ‚îÄ image.yaml                    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–ª–æ—è
‚îú‚îÄ‚îÄ genimage.cfg.in.ext4         # –®–∞–±–ª–æ–Ω –¥–ª—è ext4
‚îú‚îÄ‚îÄ genimage.cfg.in.btrfs        # –®–∞–±–ª–æ–Ω –¥–ª—è btrfs
‚îú‚îÄ‚îÄ pre-image.sh                 # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–±—Ä–∞–∑–∞
‚îú‚îÄ‚îÄ setup.sh                     # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–¥–µ–ª–æ–≤
‚îú‚îÄ‚îÄ key-management.sh            # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞–º–∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
‚îú‚îÄ‚îÄ integrity-check.sh           # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏
‚îú‚îÄ‚îÄ performance-optimization.sh  # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
‚îî‚îÄ‚îÄ device/
    ‚îú‚îÄ‚îÄ provisionmap-clear.json  # –ü—Ä–æ—Å—Ç–∞—è –∫–∞—Ä—Ç–∞
    ‚îî‚îÄ‚îÄ provisionmap-crypt.json  # –° —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º
```

**–®–∞–±–ª–æ–Ω image.yaml –¥–ª—è RAID:**
```yaml
# METABEGIN
# X-Env-Layer-Name: {raid_image_name}
# X-Env-Layer-Category: image
# X-Env-Layer-Description: –û–±—Ä–∞–∑ —Å –≤–Ω–µ—à–Ω–∏–º–∏ RAID-–º–∞—Å—Å–∏–≤–∞–º–∏
# X-Env-Layer-Version: 1.0.0
# X-Env-Layer-Requires: essential,image-base,sys-misc-raid-base
# X-Env-Layer-Provides: image
# X-Env-VarPrefix: {raid_image_name}
#
# X-Env-Var-raid_level: RAID1
# X-Env-Var-raid_level-Description: –£—Ä–æ–≤–µ–Ω—å RAID –º–∞—Å—Å–∏–≤–∞
# X-Env-Var-raid_level-Required: false
# X-Env-Var-raid_level-Valid: RAID1,RAID5,RAID10
# X-Env-Var-raid_level-Set: true
#
# X-Env-Var-raid_devices: 2
# X-Env-Var-raid_devices-Description: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –≤ RAID –º–∞—Å—Å–∏–≤–µ
# X-Env-Var-raid_devices-Required: false
# X-Env-Var-raid_devices-Valid: int:2-16
# X-Env-Var-raid_devices-Set: true
#
# X-Env-Var-rootfs_type: ext4
# X-Env-Var-rootfs_type-Description: –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ RAID –º–∞—Å—Å–∏–≤–∞
# X-Env-Var-rootfs_type-Required: false
# X-Env-Var-rootfs_type-Valid: ext4,btrfs
# X-Env-Var-rootfs_type-Set: true
#
# X-Env-Var-encryption_enabled: y
# X-Env-Var-encryption_enabled-Description: –í–∫–ª—é—á–∏—Ç—å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ RAID –º–∞—Å—Å–∏–≤–∞
# X-Env-Var-encryption_enabled-Required: false
# X-Env-Var-encryption_enabled-Valid: y,n
# X-Env-Var-encryption_enabled-Set: true
# METAEND
---
mmdebstrap:
  packages:
    - dosfstools
    - e2fsprogs
    - mdadm
    - cryptsetup
```

### –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏–º–µ–Ω–æ–≤–∞–Ω–∏—é

#### –°–æ–≥–ª–∞—à–µ–Ω–∏—è –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –æ–±—Ä–∞–∑–æ–≤:

**–ü—Ä–æ—Å—Ç—ã–µ –æ–±—Ä–∞–∑—ã:**
- `{functionality}-{layout}` (–Ω–∞–ø—Ä–∏–º–µ—Ä: `minimal-mbr`, `desktop-gpt`)
- `{target}-{type}` (–Ω–∞–ø—Ä–∏–º–µ—Ä: `rpi4-simple`, `server-basic`)

**–°–ª–æ–∂–Ω—ã–µ –æ–±—Ä–∞–∑—ã:**
- `{feature}-{layout}-{version}` (–Ω–∞–ø—Ä–∏–º–µ—Ä: `ab-gpt-v2`, `ota-hybrid-v1`)
- `{usecase}-{technology}` (–Ω–∞–ø—Ä–∏–º–µ—Ä: `enterprise-raid`, `secure-crypt`)

**–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—ã:**
- `{domain}-{specialty}` (–Ω–∞–ø—Ä–∏–º–µ—Ä: `industrial-ota`, `automotive-ab`)
- `{industry}-{feature}` (–Ω–∞–ø—Ä–∏–º–µ—Ä: `healthcare-secure`, `finance-raid`)

### –ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –æ–±—Ä–∞–∑–æ–≤

#### –ú–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞:
- **–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å**: –û–±—Ä–∞–∑ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ
- **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å**: –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∫–ª—é—á–∏ –∑–∞—â–∏—â–µ–Ω—ã
- **–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å**: –í—Ä–µ–º—è —Å–±–æ—Ä–∫–∏, —Ä–∞–∑–º–µ—Ä –æ–±—Ä–∞–∑–∞
- **–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å**: –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ü–µ–ª–µ–≤—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö

#### –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
```bash
# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±–æ—Ä–∫–∏
rpi-image-gen build -c {config}.yaml --dry-run

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞
qemu-system-aarch64 -M raspi3b -drive file={image}.img,format=raw -serial stdio

# –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–Ω–µ—à–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã)
# parted -l {image}.img  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã —Ä–∞–∑–¥–µ–ª–æ–≤
# file {image}.img       # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
```

–≠—Ç–∏ –ø—Ä–∞–≤–∏–ª–∞ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç **—Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é**, **–±–µ–∑–æ–ø–∞—Å–Ω—É—é** –∏ **–º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—É—é** —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –æ–±—Ä–∞–∑–æ–≤ –¥–ª—è rpi-image-gen.

<a id="layer---–±–∏–±–ª–∏–æ—Ç–µ–∫–∞-—Å–ª–æ–µ–≤-—Å–∏—Å—Ç–µ–º—ã"></a>

### layer/ - –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å–ª–æ–µ–≤ —Å–∏—Å—Ç–µ–º—ã: üî¥ *–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï*

#### –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
–ú–æ–¥—É–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ –æ–±—Ä–∞–∑–æ–≤.

#### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤:
```
layer/
‚îú‚îÄ‚îÄ base/                   # –ë–∞–∑–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–ª–æ–∏
‚îú‚îÄ‚îÄ device/                 # –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ —Å–ª–æ–∏
‚îú‚îÄ‚îÄ image/                  # –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –æ–±—Ä–∞–∑–æ–≤ —Å–ª–æ–∏
‚îú‚îÄ‚îÄ suite/                  # –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è (desktop, server)
‚îú‚îÄ‚îÄ app-* /                 # –ü—Ä–∏–∫–ª–∞–¥–Ω—ã–µ —Å–ª–æ–∏ (app-web, app-database)
‚îú‚îÄ‚îÄ sys-* /                 # –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–ª–æ–∏ (sys-devel, sys-admin)
‚îî‚îÄ‚îÄ LAYER_BEST_PRACTICES   # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ —Å–ª–æ–µ–≤
```

#### –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Å–ª–æ–µ–≤:

**–û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ YAML:**
```yaml
# METABEGIN
# –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–ª–æ—è (X-Env —Ñ–æ—Ä–º–∞—Ç)
# X-Env-Layer-Name: unique-layer-name
# X-Env-Layer-Category: extension|device|image|suite|foundation
# X-Env-Layer-Description: –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
# X-Env-Layer-Version: 1.0.0
# X-Env-Layer-Requires: dependency1,dependency2
# X-Env-VarPrefix: layer_name
#
# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
# X-Env-Var-variable_name: default_value
# X-Env-Var-variable_name-Description: –û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
# X-Env-Var-variable_name-Required: y|n
# X-Env-Var-variable_name-Valid: validation_rules
# METAEND
---
mmdebstrap:
  packages:
    - package1
    - package2
  setup-hooks:
    - echo "Setup hook"
  customize-hooks:
    - echo "Customize hook"
  cleanup-hooks:
    - echo "Cleanup hook"
```

**–ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è —Ö—É–∫–æ–≤ –≤ —Å–ª–æ—è—Ö:**
```bash
# layer/{category}/{layer_name}/bdebstrap/customize-layer-setup
#!/bin/bash
set -euo pipefail

# –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
install_layer_packages() {
    local layer_name="$1"
    shift
    local packages=("$@")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–∞–∫–µ—Ç–æ–≤
    for package in "${packages[@]}"; do
        apt-cache show "$package" >/dev/null 2>&1 || {
            warn "–ü–∞–∫–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $package"
            continue
        }
    done

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    if ! apt-get install -y "${packages[@]}" 2>/dev/null; then
        warn "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤ –≤ —Å–ª–æ–µ $layer_name"
        return 1
    fi

    return 0
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–ª–æ—è
main() {
    local layer_packages=(
        "package1"
        "package2"
        "package3"
    )

    install_layer_packages "${IGconf_layer_name:-unknown}" "${layer_packages[@]}"
}

main "$@"
```

<a id="layer-hooks---—Ö—É–∫–∏-–¥–ª—è-—Å–ª–æ–µ–≤"></a>

### layer-hooks/ - –•—É–∫–∏ –¥–ª—è —Å–ª–æ–µ–≤: ‚ö†Ô∏è *–û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï*

#### –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
–û–±—â–∏–µ —Ö—É–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–ª–æ—è–º–∏.

#### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤:
```
layer-hooks/
‚îú‚îÄ‚îÄ {category}/             # –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ö—É–∫–æ–≤
‚îÇ   ‚îú‚îÄ‚îÄ hook-name.sh       # –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ö—É–∫
‚îÇ   ‚îî‚îÄ‚îÄ README.md          # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
```

#### –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è:

**–®–∞–±–ª–æ–Ω —Ö—É–∫–∞:**
```bash
#!/bin/bash
# layer-hooks/{category}/hook-name.sh

set -euo pipefail

# –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Ö—É–∫–∞
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: $1 - –ø–µ—Ä–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä, $2 - –≤—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä
# –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–±—É–µ–º—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: 0 - —É—Å–ø–µ—Ö, 1 - –æ—à–∏–±–∫–∞

# –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
validate_hook_parameters() {
    [[ $# -ge 1 ]] || die "–¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä"
    [[ -n "$1" ]] || die "–ü–µ—Ä–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ö—É–∫–∞
execute_hook_logic() {
    local param1="$1"
    local param2="${2:-default_value}"

    # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
    case "$param1" in
        "option1")
            handle_option1 "$param2"
            ;;
        "option2")
            handle_option2 "$param2"
            ;;
        *)
            die "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $param1"
            ;;
    esac
}

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
handle_option1() {
    local param="$1"
    # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ–ø—Ü–∏–∏ 1
}

handle_option2() {
    local param="$1"
    # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ–ø—Ü–∏–∏ 2
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    validate_hook_parameters "$@"
    execute_hook_logic "$@"
}

main "$@"
```

<a id="lib---–±–∏–±–ª–∏–æ—Ç–µ–∫–∏-–∏-–≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ-—Å–∫—Ä–∏–ø—Ç—ã"></a>

### lib/ - –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã: üî¥ *–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï*

#### –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
–û–±—â–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.

#### –ü—Ä–∞–≤–∏–ª–∞ –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è:
- **–û—Å–Ω–æ–≤–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏**: `{functionality}.sh` (cli.sh, common.sh)
- **–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ**: `{utility}-{function}.sh`

#### –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è:

**–®–∞–±–ª–æ–Ω –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:**
```bash
#!/bin/bash
# lib/{functionality}.sh

set -euo pipefail

# –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –º–æ–¥—É–ª—è
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª—è
# –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: —Å–ø–∏—Å–æ–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: —Å–ø–∏—Å–æ–∫ –ø—É–±–ª–∏—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then
    echo "–≠—Ç–æ—Ç —Ñ–∞–π–ª –¥–æ–ª–∂–µ–Ω –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∫–∞–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞, –∞ –Ω–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É—é" >&2
    exit 1
fi

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª—è
readonly LIB_NAME="$(basename "${BASH_SOURCE[0]}")"
readonly LIB_VERSION="1.0.0"

# –ü—É–±–ª–∏—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º—ã–µ)
public_function1() {
    # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: –æ–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –æ–ø–∏—Å–∞–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π

    # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
}

public_function2() {
    # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤—Ç–æ—Ä–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
}

# –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å _)
_private_helper() {
    # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
}

# –≠–∫—Å–ø–æ—Ä—Ç –ø—É–±–ª–∏—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
export -f public_function1 public_function2

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
_lib_init() {
    # –ö–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
}

_lib_init
```

<a id="scripts---—Å–∫—Ä–∏–ø—Ç—ã-—ç—Ç–∞–ø–æ–≤-—Å–±–æ—Ä–∫–∏"></a>

### scripts/ - –°–∫—Ä–∏–ø—Ç—ã —ç—Ç–∞–ø–æ–≤ —Å–±–æ—Ä–∫–∏: ‚ö†Ô∏è *–û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï*

#### –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
–°–∫—Ä–∏–ø—Ç—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —ç—Ç–∞–ø–æ–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–±–æ—Ä–∫–∏.

#### –°—Ç—Ä—É–∫—Ç—É—Ä–∞:
```
scripts/
‚îî‚îÄ‚îÄ bdebstrap/             # –°–∫—Ä–∏–ø—Ç—ã –¥–ª—è —ç—Ç–∞–ø–æ–≤ bdebstrap
    ‚îú‚îÄ‚îÄ setup*            # –°–∫—Ä–∏–ø—Ç—ã —ç—Ç–∞–ø–∞ setup
    ‚îú‚îÄ‚îÄ essential*        # –°–∫—Ä–∏–ø—Ç—ã —ç—Ç–∞–ø–∞ essential
    ‚îú‚îÄ‚îÄ customize*        # –°–∫—Ä–∏–ø—Ç—ã —ç—Ç–∞–ø–∞ customize
    ‚îî‚îÄ‚îÄ cleanup*          # –°–∫—Ä–∏–ø—Ç—ã —ç—Ç–∞–ø–∞ cleanup
```

#### –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è:

**–®–∞–±–ª–æ–Ω —Å–∫—Ä–∏–ø—Ç–∞ —ç—Ç–∞–ø–∞:**
```bash
#!/bin/bash
# scripts/bdebstrap/{stage}{number}-{description}

set -euo pipefail

# –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞
# –≠—Ç–∞–ø: –ù–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–∞–ø–∞ (setup|essential|customize|cleanup)
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
# –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: –í –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ chroot
# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã chroot ($1 = –ø—É—Ç—å –∫ chroot)

# –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
readonly CHROOT_PATH="$1"
[[ -d "$CHROOT_PATH" ]] || die "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—É—Ç—å –∫ chroot: $CHROOT_PATH"

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —ç—Ç–∞–ø–∞
execute_stage_logic() {
    # –°–ø–µ—Ü–∏—Ñ–∏—á–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è —ç—Ç–æ–≥–æ —ç—Ç–∞–ø–∞

    case "$(basename "$0")" in
        "essential"*)
            # –õ–æ–≥–∏–∫–∞ –¥–ª—è essential —ç—Ç–∞–ø–∞
            ;;
        "customize"*)
            # –õ–æ–≥–∏–∫–∞ –¥–ª—è customize —ç—Ç–∞–ø–∞
            ;;
        "cleanup"*)
            # –õ–æ–≥–∏–∫–∞ –¥–ª—è cleanup —ç—Ç–∞–ø–∞
            ;;
    esac
}

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –≤ chroot
safe_chroot_command() {
    local command="$1"

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã
    [[ -n "$command" ]] || die "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π"

    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    chroot "$CHROOT_PATH" sh -c "$command"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    execute_stage_logic
}

main "$@"
```

<a id="site---python-–º–æ–¥—É–ª–∏-–ø—Ä–æ–µ–∫—Ç–∞"></a>

### site/ - Python –º–æ–¥—É–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞: ‚ö†Ô∏è *–û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï*

#### –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
Python –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏.

#### –°—Ç—Ä—É–∫—Ç—É—Ä–∞:
```
site/
‚îú‚îÄ‚îÄ validators.py          # –í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
‚îú‚îÄ‚îÄ processors.py          # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
‚îî‚îÄ‚îÄ utils.py              # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã
```

#### –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è (Python):

```python
#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–µ–≤.

–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ü–∞—Ä—Å–∏–Ω–≥ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è X-Env –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: python3-debian, pyyaml
"""

import sys
import yaml
from pathlib import Path
from typing import Dict, List, Optional, Any

class LayerMetadataProcessor:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–µ–≤."""

    def __init__(self, layer_path: Path):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞.

        Args:
            layer_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å–ª–æ—è
        """
        self.layer_path = layer_path
        self.metadata: Dict[str, Any] = {}

    def parse_metadata(self) -> Dict[str, Any]:
        """–ü–∞—Ä—Å–∏–Ω–≥ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞ —Å–ª–æ—è.

        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ —Å–ª–æ—è

        Raises:
            MetadataError: –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø–∞—Ä—Å–∏–Ω–≥–∞
        """
        try:
            content = self.layer_path.read_text(encoding='utf-8')
            return self._extract_metadata(content)
        except (IOError, UnicodeDecodeError) as e:
            raise MetadataError(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {self.layer_path}: {e}")

    def _extract_metadata(self, content: str) -> Dict[str, Any]:
        """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞."""
        # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ X-Env –±–ª–æ–∫–æ–≤
        metadata = {}

        # –ü–æ–∏—Å–∫ –±–ª–æ–∫–∞ METABEGIN/METAEND
        # –ü–∞—Ä—Å–∏–Ω–≥ X-Env –¥–∏—Ä–µ–∫—Ç–∏–≤
        # –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã

        return metadata

    def validate_metadata(self) -> bool:
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Å–ª–æ—è.

        Returns:
            True –µ—Å–ª–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã
        """
        required_fields = [
            'X-Env-Layer-Name',
            'X-Env-Layer-Category',
            'X-Env-Layer-Description'
        ]

        for field in required_fields:
            if field not in self.metadata:
                raise ValidationError(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ: {field}")

        return True
```

<a id="docs---–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è-–ø—Ä–æ–µ–∫—Ç–∞"></a>

### docs/ - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞: ‚ö†Ô∏è *–û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï*

#### –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ AsciiDoc.

#### –°—Ç—Ä—É–∫—Ç—É—Ä–∞:
```
docs/
‚îú‚îÄ‚îÄ index.adoc             # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
‚îú‚îÄ‚îÄ execution/             # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
‚îÇ   ‚îî‚îÄ‚îÄ index.adoc
‚îú‚îÄ‚îÄ config/                # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
‚îÇ   ‚îî‚îÄ‚îÄ index.adoc
‚îú‚îÄ‚îÄ layer/                 # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Å–ª–æ–µ–≤
‚îÇ   ‚îî‚îÄ‚îÄ index.adoc
‚îî‚îÄ‚îÄ provisioning/          # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
    ‚îî‚îÄ‚îÄ index.adoc
```

#### –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:

**–§–æ—Ä–º–∞—Ç AsciiDoc:**
```asciidoc
= –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞
:author: rpi-image-gen documentation
:toc: left
:toclevels: 3
:sectlinks:
:sectanchors:

== –ü–æ–¥—Ä–∞–∑–¥–µ–ª

=== –ü–æ–¥–ø–æ–¥—Ä–∞–∑–¥–µ–ª

–û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∫–æ–¥–∞.

[IMPORTANT]
====
–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, —Ç—Ä–µ–±—É—é—â–∞—è –≤–Ω–∏–º–∞–Ω–∏—è.
====

[source,bash]
----
#!/bin/bash
# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞
echo "Hello, World!"
----

|===
| –ö–æ–ª–æ–Ω–∫–∞ 1 | –ö–æ–ª–æ–Ω–∫–∞ 2 | –ö–æ–ª–æ–Ω–∫–∞ 3

| –î–∞–Ω–Ω—ã–µ 1
| –î–∞–Ω–Ω—ã–µ 2
| –î–∞–Ω–Ω—ã–µ 3
|===
```

<a id="examples---–ø—Ä–∏–º–µ—Ä—ã-–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"></a>

### examples/ - –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: ‚ö†Ô∏è *–û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï*

#### –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
–ì–æ—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π.

#### –°—Ç—Ä—É–∫—Ç—É—Ä–∞:
```
examples/
‚îú‚îÄ‚îÄ {example_name}/        # –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞
‚îÇ   ‚îú‚îÄ‚îÄ README.md         # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∏–º–µ—Ä–∞
‚îÇ   ‚îú‚îÄ‚îÄ config/           # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
‚îÇ   ‚îú‚îÄ‚îÄ layer/            # –°–ª–æ–∏ –ø—Ä–∏–º–µ—Ä–∞
‚îÇ   ‚îî‚îÄ‚îÄ hooks/            # –•—É–∫–∏ –ø—Ä–∏–º–µ—Ä–∞
```

#### –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –¥–ª—è –ø—Ä–∏–º–µ—Ä–æ–≤:

**README.md —à–∞–±–ª–æ–Ω:**
```markdown
# –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞

–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —ç—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä.

---

## –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- [ ] –ü—Ä–∞–≤–∏–ª–æ –∏–∑—É—á–µ–Ω–æ –∏ –ø–æ–Ω—è—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ CI/CD
- [ ] –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –º–µ—Ä–¥–∂–∞
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞
- [ ] –†–µ–≥—É–ª—è—Ä–Ω—ã–π –∞—É–¥–∏—Ç —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞

### –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- [ ] 100% —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ –Ω–æ–≤–æ–º –∫–æ–¥–µ
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–µ—Ç–∫–∞—Ö
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏—è
- [ ] –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –ø—Ä–∞–≤–∏–ª–∞

### –ò—Å—Ç–æ—á–Ω–∏–∫
–°–æ–∑–¥–∞–Ω–æ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: `43_—Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è_–æ–±—Ä–∞–∑–æ–≤_–¥–∏—Å–∫–æ–≤_image_extensions.mdc`
