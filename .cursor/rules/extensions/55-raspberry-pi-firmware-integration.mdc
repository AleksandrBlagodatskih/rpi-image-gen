---
alwaysApply: ${cursor.file.path.includes("firmware")}
---


# –ü—Ä–∞–≤–∏–ª–æ 55: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Raspberry Pi Firmware

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ firmware Raspberry Pi –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è rpi-image-gen –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–≥–æ firmware –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤.

## –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

## –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Raspberry Pi Firmware

### –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ firmware –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–±–æ—Ä–∫–∏

#### –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ firmware:
```bash
#!/bin/bash
# install-rpi-firmware.sh

set -euo pipefail

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
FIRMWARE_REPO="https://github.com/raspberrypi/firmware.git"
FIRMWARE_DIR="/opt/rpi-firmware"
BOOT_DIR="/boot/firmware"
BACKUP_DIR="/opt/rpi-firmware-backup"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏ –º–æ–¥–µ–ª–∏
detect_system_info() {
    ARCH=$(uname -m)
    case "$ARCH" in
        aarch64)
            FIRMWARE_ARCH="arm64"
            ;;
        armv7l)
            FIRMWARE_ARCH="arm"
            ;;
        *)
            echo "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"
            exit 1
            ;;
    esac

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ Raspberry Pi
    if [ -f /proc/device-tree/model ]; then
        PI_MODEL=$(tr -d '\0' < /proc/device-tree/model | sed 's/Raspberry Pi //;s/ Model //;s/Rev.*//')
    else
        PI_MODEL="unknown"
    fi

    echo "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH ($FIRMWARE_ARCH)"
    echo "–ú–æ–¥–µ–ª—å: $PI_MODEL"
}

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è firmware
sync_firmware_repo() {
    echo "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è firmware..."

    if [ ! -d "$FIRMWARE_DIR" ]; then
        git clone --depth 1 --branch stable "$FIRMWARE_REPO" "$FIRMWARE_DIR"
    else
        cd "$FIRMWARE_DIR"
        git fetch origin
        git checkout stable
        git pull --ff-only
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ firmware
backup_current_firmware() {
    echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ firmware..."

    mkdir -p "$BACKUP_DIR"
    local backup_name="firmware-backup-$(date +%Y%m%d-%H%M%S)"

    if [ -d "$BOOT_DIR" ]; then
        cp -r "$BOOT_DIR" "$BACKUP_DIR/$backup_name"
        echo "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $BACKUP_DIR/$backup_name"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ firmware
install_firmware() {
    local firmware_source="$FIRMWARE_DIR/boot"

    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ firmware –¥–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã $FIRMWARE_ARCH..."

    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    mkdir -p "$BOOT_DIR"

    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ firmware
    cp -r "$firmware_source"/* "$BOOT_DIR/"

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –¥–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤
    case "$FIRMWARE_ARCH" in
        "arm64")
            # Raspberry Pi 3, 4, 5 (64-bit)
            cp "$firmware_source/kernel8.img" "$BOOT_DIR/" 2>/dev/null || true
            ;;
        "arm")
            # Raspberry Pi 1, 2, Zero (32-bit)
            cp "$firmware_source/kernel.img" "$BOOT_DIR/" 2>/dev/null || true
            cp "$firmware_source/kernel7.img" "$BOOT_DIR/" 2>/dev/null || true
            ;;
    esac

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —è–¥—Ä–∞
    install_kernel_firmware

    echo "Firmware —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —è–¥—Ä–∞ –∏ –º–æ–¥—É–ª–µ–π
install_kernel_firmware() {
    local kernel_modules="$FIRMWARE_DIR/modules"

    if [ -d "$kernel_modules" ]; then
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥—É–ª–µ–π —è–¥—Ä–∞..."

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ —è–¥—Ä–∞
        local kernel_version
        if [ -f "$BOOT_DIR/kernel.img" ]; then
            kernel_version=$(strings "$BOOT_DIR/kernel.img" | grep "Linux version" | head -1 | awk '{print $3}' | cut -d- -f1)
        else
            kernel_version=$(uname -r | cut -d- -f1)
        fi

        # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª–µ–π
        if [ -d "$kernel_modules/$kernel_version+" ]; then
            cp -r "$kernel_modules/$kernel_version+" /lib/modules/
        elif [ -d "$kernel_modules/$kernel_version" ]; then
            cp -r "$kernel_modules/$kernel_version" /lib/modules/
        fi

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –º–æ–¥—É–ª–µ–π
        depmod -a
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ config.txt –¥–ª—è firmware
configure_firmware_settings() {
    local config_file="$BOOT_DIR/config.txt"

    echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ config.txt..."

    # –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π
    cat >> "$config_file" << EOF

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Raspberry Pi Firmware
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ rpi-image-gen

# –í–∫–ª—é—á–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö overlays
dtoverlay=
dtparam=

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
gpu_mem=128
hdmi_force_hotplug=1

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
disable_splash=1
avoid_warnings=1
EOF

    # –ú–æ–¥–µ–ª—å-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    case "$PI_MODEL" in
        "5"|"4")
            cat >> "$config_file" << EOF
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Raspberry Pi 4/5
arm_boost=1
over_voltage=6
EOF
            ;;
        "3"*)
            cat >> "$config_file" << EOF
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Raspberry Pi 3
over_voltage=2
EOF
            ;;
    esac
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ firmware
verify_firmware_integrity() {
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ firmware..."

    local errors=0

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    local critical_files=("bootcode.bin" "start.elf" "fixup.dat")

    for file in "${critical_files[@]}"; do
        if [ ! -f "$BOOT_DIR/$file" ]; then
            echo "–û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª: $file"
            ((errors++))
        fi
    done

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —è–¥—Ä–∞
    if ! ls "$BOOT_DIR"/kernel*.img >/dev/null 2>&1; then
        echo "–û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª —è–¥—Ä–∞"
        ((errors++))
    fi

    if [ $errors -eq 0 ]; then
        echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ firmware –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        echo "–ù–∞–π–¥–µ–Ω–æ $errors –æ—à–∏–±–æ–∫ –≤ firmware"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Raspberry Pi Firmware"

    detect_system_info
    sync_firmware_repo
    backup_current_firmware
    install_firmware
    configure_firmware_settings

    if verify_firmware_integrity; then
        echo "Firmware —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        return 0
    else
        echo "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å firmware"
        return 1
    fi
}

main "$@"
```

#### –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è firmware –≤ —Å–ª–æ–π rpi-image-gen:
```yaml
# METABEGIN
# X-Env-Layer-Name: raspberrypi-firmware
# X-Env-Layer-Category: extension
# X-Env-Layer-Description: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Raspberry Pi firmware –≤ –æ–±—Ä–∞–∑
# X-Env-Layer-Version: 1.0.0
# X-Env-Layer-Requires: essential,bootloader
# X-Env-VarPrefix: firmware
#
# X-Env-Var-firmware_branch: stable
# X-Env-Var-firmware_branch-Description: –í–µ—Ç–∫–∞ firmware –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
# X-Env-Var-firmware_branch-Required: false
# X-Env-Var-firmware_branch-Valid: stable,master,next
#
# X-Env-Var-firmware_verify: true
# X-Env-Var-firmware_verify-Description: –ü—Ä–æ–≤–µ—Ä—è—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å firmware –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
# X-Env-Var-firmware_verify-Required: false
# X-Env-Var-firmware_verify-Valid: true,false
# METAEND
---
mmdebstrap:
  packages:
    - git
    - raspberrypi-bootloader
    - raspi-firmware
    - curl
    - wget
  customize-hooks:
    - |
      # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Raspberry Pi firmware
      setup_raspberrypi_firmware() {
          echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Raspberry Pi firmware"

          # –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è firmware
          if [ ! -d /opt/rpi-firmware ]; then
              git clone --depth 1 --branch "${IGconf_firmware_firmware_branch:-stable}" \
                  https://github.com/raspberrypi/firmware.git /opt/rpi-firmware
          fi

          cd /opt/rpi-firmware

          # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ boot —Ñ–∞–π–ª–æ–≤
          mkdir -p /boot/firmware
          cp -r boot/* /boot/firmware/

          # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥—É–ª–µ–π —è–¥—Ä–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
          if [ -d modules ]; then
              cp -r modules/* /lib/modules/ 2>/dev/null || true
              depmod -a
          fi

          # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ config.txt
          cat >> /boot/firmware/config.txt << EOF

# Raspberry Pi Firmware Integration
# –î–æ–±–∞–≤–ª–µ–Ω–æ rpi-image-gen —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º
dtparam=audio=on
camera_auto_detect=1
display_auto_detect=1
EOF

          # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è firmware
          cat > /usr/local/bin/update-rpi-firmware.sh << 'FIRMWARE_EOF'
#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Raspberry Pi firmware

set -euo pipefail

FIRMWARE_DIR="/opt/rpi-firmware"
BOOT_DIR="/boot/firmware"
LOG_FILE="/var/log/rpi-firmware-update.log"

log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') $*" | tee -a "$LOG_FILE"
}

update_firmware() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π firmware"

    cd "$FIRMWARE_DIR"

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
    git fetch origin
    git checkout "${IGconf_firmware_firmware_branch:-stable}"
    git pull --ff-only

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
    backup_dir="/tmp/firmware-backup-$(date +%Y%m%d-%H%M%S)"
    cp -r "$BOOT_DIR" "$backup_dir"
    log "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $backup_dir"

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    cp -r boot/* "$BOOT_DIR/"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏
    if [ "${IGconf_firmware_firmware_verify:-true}" = "true" ]; then
        if verify_firmware_files; then
            log "Firmware —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"
            return 0
        else
            log "–û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ firmware, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
            cp -r "$backup_dir"/* "$BOOT_DIR/"
            return 1
        fi
    fi

    log "Firmware –æ–±–Ω–æ–≤–ª–µ–Ω –±–µ–∑ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"
    return 0
}

verify_firmware_files() {
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    local critical_files=("bootcode.bin" "start.elf")
    local missing_files=0

    for file in "${critical_files[@]}"; do
        if [ ! -f "$BOOT_DIR/$file" ]; then
            log "–û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª $file"
            ((missing_files++))
        fi
    done

    [ $missing_files -eq 0 ]
}

update_firmware
FIRMWARE_EOF

          chmod +x /usr/local/bin/update-rpi-firmware.sh

          # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
          if [ "${IGconf_firmware_auto_update:-false}" = "true" ]; then
              cat > /etc/cron.weekly/update-rpi-firmware << 'CRON_EOF'
#!/bin/bash
/usr/local/bin/update-rpi-firmware.sh
CRON_EOF
              chmod +x /etc/cron.weekly/update-rpi-firmware
          fi
      }

      setup_raspberrypi_firmware
```

#### –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ firmware:
```bash
#!/bin/bash
# firmware-diagnostics.sh

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Raspberry Pi firmware

check_firmware_versions() {
    echo "=== –í–µ—Ä—Å–∏–∏ firmware –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ ==="

    # –í–µ—Ä—Å–∏—è bootloader
    if [ -f /boot/firmware/bootcode.bin ]; then
        echo "Bootloader: $(stat -c%s /boot/firmware/bootcode.bin) bytes"
    fi

    # –í–µ—Ä—Å–∏—è GPU firmware
    if [ -f /boot/firmware/start.elf ]; then
        echo "GPU firmware: $(stat -c%s /boot/firmware/start.elf) bytes"
    fi

    # –í–µ—Ä—Å–∏—è —è–¥—Ä–∞
    if ls /boot/firmware/kernel*.img >/dev/null 2>&1; then
        for kernel in /boot/firmware/kernel*.img; do
            echo "Kernel $(basename "$kernel"): $(stat -c%s "$kernel") bytes"
        done
    fi
}

check_firmware_config() {
    echo "=== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è firmware ==="

    local config_file="/boot/firmware/config.txt"

    if [ -f "$config_file" ]; then
        echo "–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã config.txt:"
        grep -E "^(gpu_mem|arm_freq|over_voltage|dtparam)" "$config_file" || echo "–°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    else
        echo "–§–∞–π–ª config.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

check_firmware_health() {
    echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ firmware ==="

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    local corrupted=0

    for file in /boot/firmware/*.elf /boot/firmware/*.bin; do
        if [ -f "$file" ]; then
            if ! file "$file" >/dev/null 2>&1; then
                echo "–ü–û–í–†–ï–ñ–î–ï–ù: $file"
                ((corrupted++))
            fi
        fi
    done

    if [ $corrupted -eq 0 ]; then
        echo "–í—Å–µ —Ñ–∞–π–ª—ã firmware –≤ –ø–æ—Ä—è–¥–∫–µ"
    else
        echo "–ù–∞–π–¥–µ–Ω–æ $corrupted –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
    fi
}

main() {
    check_firmware_versions
    echo ""
    check_firmware_config
    echo ""
    check_firmware_health
}

main "$@"
```

---

## –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- [ ] –ü—Ä–∞–≤–∏–ª–æ –∏–∑—É—á–µ–Ω–æ –∏ –ø–æ–Ω—è—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ CI/CD
- [ ] –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –º–µ—Ä–¥–∂–∞
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞
- [ ] –†–µ–≥—É–ª—è—Ä–Ω—ã–π –∞—É–¥–∏—Ç —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞

### –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- [ ] 100% —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ –Ω–æ–≤–æ–º –∫–æ–¥–µ
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–µ—Ç–∫–∞—Ö
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏—è
- [ ] –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –ø—Ä–∞–≤–∏–ª–∞

### –ò—Å—Ç–æ—á–Ω–∏–∫
–°–æ–∑–¥–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: https://github.com/raspberrypi/firmware