---
alwaysApply: ${cursor.file.content.includes("arm64") || cursor.file.content.includes("aarch64")}
---


# –ü—Ä–∞–≤–∏–ª–æ 68: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã Debian arm64

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ARM64 –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –≤ Debian, –≤–∫–ª—é—á–∞—è –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ –∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π.

## –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

## –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã Debian arm64

### –ü—Ä–æ–≤–µ—Ä–∫–∞ ARM64 –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã

#### –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏:
```bash
#!/bin/bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã arm64

check_arm64_support() {
    echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ARM64 ==="

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
    ARCH=$(uname -m)
    echo "–¢–µ–∫—É—â–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"

    if [ "$ARCH" = "aarch64" ]; then
        echo "‚úì ARM64 –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
        return 0
    elif [ "$ARCH" = "armv7l" ]; then
        echo "‚ö† –¢–µ–∫—É—â–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: ARM 32-bit (armhf)"
        echo "  –î–ª—è –ø–æ–ª–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ARM64 —Ç—Ä–µ–±—É–µ—Ç—Å—è aarch64"
        return 1
    else
        echo "‚úó –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ $ARCH –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
check_cpu_features() {
    echo -e "\n=== –ü—Ä–æ–≤–µ—Ä–∫–∞ CPU –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π ==="

    if [ -f /proc/cpuinfo ]; then
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ 64-bit
        if grep -q "aarch64" /proc/cpuinfo 2>/dev/null; then
            echo "‚úì CPU –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç 64-bit –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"
        fi

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
        FEATURES=$(grep "Features" /proc/cpuinfo | head -1 | cut -d: -f2)
        echo "CPU Features: $FEATURES"

        # –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è Debian arm64
        RECOMMENDED_FEATURES=("crc32" "aes" "pmull" "sha1" "sha2")

        for feature in "${RECOMMENDED_FEATURES[@]}"; do
            if echo "$FEATURES" | grep -q "$feature"; then
                echo "‚úì $feature –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
            else
                echo "‚ö† $feature –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
            fi
        done
    else
        echo "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ CPU –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    fi
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
detect_cpu_model() {
    echo -e "\n=== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–µ ==="

    if [ -f /proc/cpuinfo ]; then
        CPU_MODEL=$(grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | xargs)
        CPU_CORES=$(grep -c "processor" /proc/cpuinfo)
        CPU_FREQ=$(grep -m1 "cpu MHz" /proc/cpuinfo | cut -d: -f2 | xargs)

        echo "–ú–æ–¥–µ–ª—å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: $CPU_MODEL"
        echo "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–¥–µ—Ä: $CPU_CORES"
        echo "–ß–∞—Å—Ç–æ—Ç–∞: ${CPU_FREQ}MHz"

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
        if echo "$CPU_MODEL" | grep -qi "raspberry\|bcm"; then
            echo "–¢–∏–ø: Raspberry Pi (Broadcom)"
        elif echo "$CPU_MODEL" | grep -qi "ampere\|altra"; then
            echo "–¢–∏–ø: –°–µ—Ä–≤–µ—Ä–Ω—ã–π (Ampere)"
        elif echo "$CPU_MODEL" | grep -qi "graviton"; then
            echo "–¢–∏–ø: –û–±–ª–∞—á–Ω—ã–π (AWS Graviton)"
        else
            echo "–¢–∏–ø: –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π ARM64"
        fi
    fi
}

main() {
    check_arm64_support
    check_cpu_features
    detect_cpu_model
}

main "$@"
```

#### –ü–ª–∞—Ç—Ñ–æ—Ä–º–æ-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
```bash
#!/bin/bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π

check_platform_requirements() {
    echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π ==="

    # Raspberry Pi detection
    if [ -f /proc/device-tree/model ]; then
        if grep -q "Raspberry Pi" /proc/device-tree/model; then
            echo "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: Raspberry Pi"

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –¥–ª—è Raspberry Pi —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
            check_raspberry_pi_requirements
        fi
    # Generic ARM64 server
    elif [ -f /sys/class/dmi/id/product_name ]; then
        PRODUCT=$(cat /sys/class/dmi/id/product_name)
        echo "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: $PRODUCT"

        # –û–±—â–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
        check_server_requirements
    else
        echo "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è ARM64"
        check_generic_arm64_requirements
    fi
}

check_raspberry_pi_requirements() {
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è Raspberry Pi..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ GPIO (–¥–ª—è Raspberry Pi)
    if [ -d /sys/class/gpio ]; then
        echo "‚úì GPIO –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
        GPIO_CHIPS=$(ls /sys/class/gpio | grep -c "gpiochip")
        echo "  GPIO —á–∏–ø–æ–≤: $GPIO_CHIPS"
    else
        echo "‚ö† GPIO –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω (–º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è headless)"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ I2C (–¥–ª—è Raspberry Pi)
    if [ -d /sys/class/i2c-adapter ]; then
        echo "‚úì I2C –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
        I2C_BUSES=$(ls /sys/class/i2c-adapter | wc -l)
        echo "  I2C —à–∏–Ω: $I2C_BUSES"
    else
        echo "‚ö† I2C –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ SPI (–¥–ª—è Raspberry Pi)
    if [ -d /sys/class/spidev ]; then
        echo "‚úì SPI –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
    else
        echo "‚ö† SPI –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
}

check_server_requirements() {
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ NUMA (–¥–ª—è –º–Ω–æ–≥–æ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω—ã—Ö —Å–∏—Å—Ç–µ–º)
    if command -v numactl >/dev/null 2>&1; then
        echo "‚úì NUMA –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
        NUMA_NODES=$(numactl --hardware | grep -c "node [0-9]")
        echo "  NUMA —É–∑–ª–æ–≤: $NUMA_NODES"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏
    if grep -q "svm\|vmx" /proc/cpuinfo 2>/dev/null; then
        echo "‚úì –í–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ–ª—å—à–æ–≥–æ –æ–±—ä–µ–º–∞ –ø–∞–º—è—Ç–∏
    TOTAL_MEM=$(free -g | awk 'NR==2{print $2}')
    if [ "$TOTAL_MEM" -gt 64 ]; then
        echo "‚úì –ë–æ–ª—å—à–æ–π –æ–±—ä–µ–º –ø–∞–º—è—Ç–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è (${TOTAL_MEM}GB)"
    fi
}

check_generic_arm64_requirements() {
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π ARM64..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
    if [ -c /dev/random ] && [ -c /dev/urandom ]; then
        echo "‚úì –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –¥–æ—Å—Ç—É–ø–Ω—ã"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–π–º–µ—Ä–æ–≤ –≤—ã—Å–æ–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
    if [ -f /sys/devices/system/clocksource/clocksource0/current_clocksource ]; then
        CLOCKSOURCE=$(cat /sys/devices/system/clocksource/clocksource0/current_clocksource)
        echo "‚úì –¢–∞–π–º–µ—Ä –≤—ã—Å–æ–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: $CLOCKSOURCE"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ energy management
    if [ -d /sys/devices/system/cpu/cpu0/cpufreq ]; then
        echo "‚úì –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
    fi
}

main() {
    check_platform_requirements
}

main "$@"
```

---

## –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- [ ] –ü—Ä–∞–≤–∏–ª–æ –∏–∑—É—á–µ–Ω–æ –∏ –ø–æ–Ω—è—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ CI/CD
- [ ] –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –º–µ—Ä–¥–∂–∞
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞
- [ ] –†–µ–≥—É–ª—è—Ä–Ω—ã–π –∞—É–¥–∏—Ç —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞

### –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- [ ] 100% —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ –Ω–æ–≤–æ–º –∫–æ–¥–µ
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–µ—Ç–∫–∞—Ö
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏—è
- [ ] –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –ø—Ä–∞–≤–∏–ª–∞

### –ò—Å—Ç–æ—á–Ω–∏–∫
–°–æ–∑–¥–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–¥–µ–ª–∞ Debian arm64 system requirements