---
alwaysApply: ${cursor.file.content.includes("gpu") || cursor.file.content.includes("graphics")}
---


# –ü—Ä–∞–≤–∏–ª–æ 70: –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ Debian arm64

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ –¥–∏—Å–ø–ª–µ–µ–≤ –≤ Debian GNU/Linux –Ω–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É arm64, –∏—Å–∫–ª—é—á–∞—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è Raspberry Pi –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã.

## –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

## –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ Debian arm64

### –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ GPU

#### –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥—Ä–∞–π–≤–µ—Ä–æ–≤:
```bash
#!/bin/bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –¥–ª—è Debian arm64

check_graphics_hardware() {
    echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è ==="

    # –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ GPU
    if command -v glxinfo >/dev/null 2>&1; then
        echo "‚úì OpenGL –¥–æ—Å—Ç—É–ø–µ–Ω"
        GPU_INFO=$(glxinfo | grep "OpenGL renderer" | cut -d: -f2 | xargs)
        echo "  GPU: $GPU_INFO"
    elif command -v vulkaninfo >/dev/null 2>&1; then
        echo "‚úì Vulkan –¥–æ—Å—Ç—É–ø–µ–Ω"
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ Vulkan
        vulkaninfo --summary | grep -E "GPU|driver" | head -5
    else
        echo "‚Ñπ –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ API –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ headless —Å–∏—Å—Ç–µ–º–∞)"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ DRM —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    if [ -d /sys/class/drm ]; then
        echo -e "\nDRM —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:"
        ls /sys/class/drm/ | grep -v "^card[0-9]$" | while read -r device; do
            echo "  $device"
        done
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–µ–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    if [ -d /dev/dri ]; then
        echo -e "\nDirect Rendering —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:"
        ls -la /dev/dri/
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –¥—Ä–∞–π–≤–µ—Ä–æ–≤
setup_generic_graphics_drivers() {
    echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥—Ä–∞–π–≤–µ—Ä–æ–≤ ==="

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –¥—Ä–∞–π–≤–µ—Ä–æ–≤
    apt-get install -y \
        xserver-xorg-video-all \
        mesa-utils \
        vulkan-tools \
        libgl1-mesa-glx \
        libgl1-mesa-dri

    # –î–ª—è Wayland (—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã)
    if [ -n "$WAYLAND_DISPLAY" ] || [ -n "$DISPLAY" ]; then
        apt-get install -y \
            weston \
            sway \
            wayland-protocols
    fi

    # –î–ª—è X11 (—Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã)
    apt-get install -y \
        xorg \
        x11-utils \
        xterm

    echo "‚úì –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –¥—Ä–∞–π–≤–µ—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏—Å–ø–ª–µ–µ–≤
configure_displays() {
    echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏—Å–ø–ª–µ–µ–≤ ==="

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ xrandr –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∏—Å–ø–ª–µ—è–º–∏
    apt-get install -y x11-xserver-utils

    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏—Å–ø–ª–µ–µ–≤
    cat > /usr/local/bin/configure-displays.sh << 'EOF'
#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏—Å–ø–ª–µ–µ–≤

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –¥–∏—Å–ø–ª–µ–µ–≤
get_connected_displays() {
    xrandr | grep " connected" | cut -d' ' -f1
}

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏—Å–ø–ª–µ–µ–≤
auto_configure_displays() {
    echo "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏—Å–ø–ª–µ–µ–≤..."

    CONNECTED_DISPLAYS=$(get_connected_displays)

    if [ -z "$CONNECTED_DISPLAYS" ]; then
        echo "–î–∏—Å–ø–ª–µ–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
        return 1
    fi

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –¥–∏—Å–ø–ª–µ—è –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ
    PRIMARY_DISPLAY=$(echo "$CONNECTED_DISPLAYS" | head -1)
    xrandr --output "$PRIMARY_DISPLAY" --primary --auto

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∏—Å–ø–ª–µ–µ–≤
    echo "$CONNECTED_DISPLAYS" | tail -n +2 | while read -r display; do
        xrandr --output "$display" --auto --right-of "$PRIMARY_DISPLAY"
    done

    echo "–î–∏—Å–ø–ª–µ–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

# –†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏—Å–ø–ª–µ—è
manual_configure_display() {
    local display="$1"
    local mode="${2:-auto}"

    if [ "$mode" = "auto" ]; then
        xrandr --output "$display" --auto
    else
        xrandr --output "$display" --mode "$mode"
    fi
}

case "${1:-auto}" in
    "auto")
        auto_configure_displays
        ;;
    "list")
        echo "–ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –¥–∏—Å–ø–ª–µ–∏:"
        get_connected_displays
        ;;
    "manual")
        shift
        manual_configure_display "$@"
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <auto|list|manual> [display] [mode]"
        exit 1
        ;;
esac
EOF

    chmod +x /usr/local/bin/configure-displays.sh

    echo "‚úì –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏—Å–ø–ª–µ–µ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

main() {
    case "${1:-check}" in
        "check")
            check_graphics_hardware
            ;;
        "drivers")
            setup_generic_graphics_drivers
            ;;
        "displays")
            configure_displays
            ;;
        "all")
            check_graphics_hardware
            echo ""
            setup_generic_graphics_drivers
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <check|drivers|displays|all>"
            exit 1
            ;;
    esac
}

main "$@"
```

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ X Window System

#### –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è X11 –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö ARM64 —Å–∏—Å—Ç–µ–º:
```bash
#!/bin/bash
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ X Window System –¥–ª—è Debian arm64

configure_x11_system() {
    echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ X Window System ==="

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ X11
    apt-get install -y \
        xorg \
        xserver-xorg \
        x11-xserver-utils \
        xterm \
        twm \
        xfonts-base

    # –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ X11
    cat > /etc/X11/xorg.conf << 'EOF'
# Xorg configuration for ARM64

Section "Device"
    Identifier "Card0"
    Driver "modesetting"
    Option "AccelMethod" "glamor"
EndSection

Section "Screen"
    Identifier "Screen0"
    Device "Card0"
    DefaultDepth 24
    Subsection "Display"
        Depth 24
        Modes "1920x1080" "1680x1050" "1280x1024" "1024x768"
    EndSubsection
EndSection

Section "InputDevice"
    Identifier "Keyboard0"
    Driver "kbd"
EndSection

Section "InputDevice"
    Identifier "Mouse0"
    Driver "mouse"
    Option "Protocol" "auto"
    Option "Device" "/dev/input/mice"
EndSection

Section "ServerLayout"
    Identifier "Layout0"
    Screen "Screen0"
    InputDevice "Keyboard0" "CoreKeyboard"
    InputDevice "Mouse0" "CorePointer"
EndSection
EOF

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ xinitrc
    cat > /etc/X11/xinit/xinitrc << 'EOF'
#!/bin/sh
# Xinitrc for ARM64 systems

# Load X resources
xrdb -merge ~/.Xresources

# Start window manager
exec twm
EOF

    chmod +x /etc/X11/xinit/xinitrc

    echo "‚úì X Window System –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫–æ–Ω–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
setup_window_managers() {
    echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫–æ–Ω–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ ==="

    # –õ–µ–≥–∫–∏–µ –æ–∫–æ–Ω–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã –¥–ª—è ARM64
    apt-get install -y \
        fluxbox \
        openbox \
        icewm \
        jwm

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
    mkdir -p /etc/X11/fluxbox
    cat > /etc/X11/fluxbox/init << 'EOF'
session.screen0.workspaceNames: Work,Web,Term
EOF

    echo "‚úì –û–∫–æ–Ω–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–æ–≤
configure_fonts() {
    echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–æ–≤ ==="

    apt-get install -y \
        fonts-dejavu \
        fonts-liberation \
        fonts-noto \
        xfonts-100dpi \
        xfonts-75dpi \
        xfonts-scalable

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ —à—Ä–∏—Ñ—Ç–æ–≤
    fc-cache -f -v

    echo "‚úì –®—Ä–∏—Ñ—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

main() {
    case "${1:-x11}" in
        "x11")
            configure_x11_system
            ;;
        "wm")
            setup_window_managers
            ;;
        "fonts")
            configure_fonts
            ;;
        "all")
            configure_x11_system
            echo ""
            setup_window_managers
            echo ""
            configure_fonts
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <x11|wm|fonts|all>"
            exit 1
            ;;
    esac
}

main "$@"
```

### –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ rpi-image-gen

#### –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ—è –¥–ª—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è:
```yaml
# METABEGIN
# X-Env-Layer-Name: debian-arm64-graphics-hardware
# X-Env-Layer-Category: extension
# X-Env-Layer-Description: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è Debian arm64
# X-Env-Layer-Version: 1.0.0
# X-Env-Layer-Requires: essential
# X-Env-VarPrefix: graphics
#
# X-Env-Var-graphics_enable_x11: false
# X-Env-Var-graphics_enable_x11-Description: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å X Window System
# X-Env-Var-graphics_enable_x11-Required: false
# X-Env-Var-graphics_enable_x11-Valid: true,false
#
# X-Env-Var-graphics_window_manager: fluxbox
# X-Env-Var-graphics_window_manager-Description: –û–∫–æ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
# X-Env-Var-graphics_window_manager-Required: false
# X-Env-Var-graphics_window_manager-Valid: fluxbox,openbox,icewm,jwm,none
#
# X-Env-Var-graphics_enable_vulkan: false
# X-Env-Var-graphics_enable_vulkan-Description: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Vulkan –ø–æ–¥–¥–µ—Ä–∂–∫—É
# X-Env-Var-graphics_enable_vulkan-Required: false
# X-Env-Var-graphics_enable_vulkan-Valid: true,false
# METAEND
---
mmdebstrap:
  packages:
    - libgl1-mesa-glx
    - mesa-utils
    - x11-utils
  customize-hooks:
    - |
      # –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ Debian arm64
      setup_debian_graphics_hardware() {
          echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è Debian arm64"

          # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö —É—Ç–∏–ª–∏—Ç
          apt-get install -y mesa-utils x11-utils

          # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ X11 (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
          setup_x11() {
              if [ "${IGconf_graphics_graphics_enable_x11:-false}" = "true" ]; then
                  echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ X Window System..."

                  apt-get install -y \
                      xorg \
                      xserver-xorg \
                      x11-xserver-utils \
                      xterm \
                      xfonts-base

                  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Xwrapper
                  cat > /etc/X11/Xwrapper.config << 'EOF'
allowed_users = anybody
needs_root_rights = no
EOF
              fi
          }

          # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫–æ–Ω–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
          setup_window_manager() {
              local wm="${IGconf_graphics_graphics_window_manager:-fluxbox}"

              case "$wm" in
                  "fluxbox")
                      apt-get install -y fluxbox
                      ;;
                  "openbox")
                      apt-get install -y openbox
                      ;;
                  "icewm")
                      apt-get install -y icewm
                      ;;
                  "jwm")
                      apt-get install -y jwm
                      ;;
                  "none")
                      echo "–û–∫–æ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è"
                      ;;
              esac
          }

          # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Vulkan (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
          setup_vulkan() {
              if [ "${IGconf_graphics_graphics_enable_vulkan:-false}" = "true" ]; then
                  echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Vulkan –ø–æ–¥–¥–µ—Ä–∂–∫–∏..."

                  apt-get install -y vulkan-tools

                  # –ü—Ä–æ–≤–µ—Ä–∫–∞ Vulkan
                  if command -v vulkaninfo >/dev/null 2>&1; then
                      echo "Vulkan —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–≤–µ—Ä–∫–∞..."
                      vulkaninfo --summary | head -10
                  fi
              fi
          }

          # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–æ–≤
          setup_fonts() {
              apt-get install -y \
                  fonts-dejavu \
                  fonts-liberation \
                  xfonts-100dpi \
                  xfonts-75dpi

              fc-cache -f
          }

          # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∏
          create_graphics_diagnostic() {
              cat > /usr/local/bin/graphics-diagnostic.sh << 'EOF'
#!/bin/bash
# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è

echo "=== –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Debian arm64 ==="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenGL
echo "OpenGL –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
if command -v glxinfo >/dev/null 2>&1; then
    glxinfo | grep -E "OpenGL vendor|OpenGL renderer|OpenGL version" | head -3
else
    echo "glxinfo –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Vulkan
echo -e "\nVulkan –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
if command -v vulkaninfo >/dev/null 2>&1; then
    vulkaninfo --summary | grep -E "GPU|driver" | head -5
else
    echo "vulkaninfo –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ DRM
echo -e "\nDRM —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:"
if [ -d /sys/class/drm ]; then
    ls /sys/class/drm/ | grep "^card"
else
    echo "DRM —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ X11
echo -e "\nX11 —Å—Ç–∞—Ç—É—Å:"
if [ -n "$DISPLAY" ]; then
    echo "X11 –¥–∏—Å–ø–ª–µ–π: $DISPLAY"
    if command -v xdpyinfo >/dev/null 2>&1; then
        xdpyinfo | grep -E "dimensions|resolution" | head -2
    fi
else
    echo "X11 –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–ø–ª–µ–µ–≤
echo -e "\n–î–∏—Å–ø–ª–µ–∏:"
if command -v xrandr >/dev/null 2>&1; then
    xrandr | grep -E "connected|disconnected" | head -5
else
    echo "xrandr –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

echo -e "\n=== –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ==="
EOF

              chmod +x /usr/local/bin/graphics-diagnostic.sh
          }

          # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
          setup_x11
          setup_window_manager
          setup_vulkan
          setup_fonts
          create_graphics_diagnostic

          echo "–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ Debian arm64 –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
      }

      setup_debian_graphics_hardware
```

---

## –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- [ ] –ü—Ä–∞–≤–∏–ª–æ –∏–∑—É—á–µ–Ω–æ –∏ –ø–æ–Ω—è—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ CI/CD
- [ ] –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –º–µ—Ä–¥–∂–∞
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞
- [ ] –†–µ–≥—É–ª—è—Ä–Ω—ã–π –∞—É–¥–∏—Ç —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞

### –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- [ ] 100% —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ –Ω–æ–≤–æ–º –∫–æ–¥–µ
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–µ—Ç–∫–∞—Ö
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏—è
- [ ] –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –ø—Ä–∞–≤–∏–ª–∞

### –ò—Å—Ç–æ—á–Ω–∏–∫
–°–æ–∑–¥–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–¥–µ–ª–∞ Debian arm64 graphics hardware requirements