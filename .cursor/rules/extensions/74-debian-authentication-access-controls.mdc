---
alwaysApply: ${cursor.file.content.includes("auth") || cursor.file.content.includes("pam")}
---


# –ü—Ä–∞–≤–∏–ª–æ 74: –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞ Debian

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã —Å–∏—Å—Ç–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ Debian GNU/Linux.

## –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

## –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞ Debian

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –≥—Ä—É–ø–ø

#### –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:
```bash
#!/bin/bash
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –≥—Ä—É–ø–ø–∞–º–∏ Debian

user_management() {
    echo "=== –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –≥—Ä—É–ø–ø–∞–º–∏ Debian ==="

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏
    create_user() {
        local username="$1"
        local fullname="$2"
        local shell="${3:-/bin/bash}"
        local groups="${4:-}"

        echo "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $username"

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if id "$username" >/dev/null 2>&1; then
            echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $username —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
            return 1
        fi

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        useradd -m -s "$shell" -c "$fullname" "$username"

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—ã
        if [ -n "$groups" ]; then
            usermod -aG "$groups" "$username"
        fi

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–æ–ª—è
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä–æ–ª—è –¥–ª—è $username"
        passwd "$username"

        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–º–∞—à–Ω–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
        chown -R "$username:$username" "/home/$username"
        chmod 755 "/home/$username"

        echo "‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $username —Å–æ–∑–¥–∞–Ω"
    }

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ sudo –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    setup_sudo() {
        local username="$1"

        echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ sudo –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $username"

        # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ sudoers –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cat > "/etc/sudoers.d/$username" << EOF
# Sudo configuration for $username
$username ALL=(ALL) ALL
EOF

        chmod 440 "/etc/sudoers.d/$username"

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
        if visudo -c -f "/etc/sudoers.d/$username"; then
            echo "‚úì Sudo –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è $username"
        else
            echo "‚úó –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ sudo"
            rm "/etc/sudoers.d/$username"
            return 1
        fi
    }

    # –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
    create_group() {
        local groupname="$1"
        local gid="${2:-}"

        echo "–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã: $groupname"

        if [ -n "$gid" ]; then
            groupadd -g "$gid" "$groupname"
        else
            groupadd "$groupname"
        fi

        echo "‚úì –ì—Ä—É–ø–ø–∞ $groupname —Å–æ–∑–¥–∞–Ω–∞"
    }

    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–ª–µ–Ω—Å—Ç–≤–æ–º –≤ –≥—Ä—É–ø–ø–∞—Ö
    manage_group_membership() {
        local action="$1"
        local username="$2"
        local groupname="$3"

        case "$action" in
            "add")
                usermod -aG "$groupname" "$username"
                echo "‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $username –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É $groupname"
                ;;
            "remove")
                gpasswd -d "$username" "$groupname"
                echo "‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $username —É–¥–∞–ª–µ–Ω –∏–∑ –≥—Ä—É–ø–ø—ã $groupname"
                ;;
            *)
                echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: manage_group_membership <add|remove> <user> <group>"
                return 1
                ;;
        esac
    }

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    case "$1" in
        "create")
            create_user "$2" "$3" "$4" "$5"
            ;;
        "sudo")
            setup_sudo "$2"
            ;;
        "group")
            create_group "$2" "$3"
            ;;
        "membership")
            shift
            manage_group_membership "$@"
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <create|sudo|group|membership> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
            exit 1
            ;;
    esac
}

# –ê—É–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
audit_users() {
    echo "=== –ê—É–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–∏—Å—Ç–µ–º—ã ==="

    # –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    echo "–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:"
    who | awk '{print $1}' | sort | uniq | while read -r user; do
        echo "  $user"
    done

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å UID >= 1000
    echo -e "\n–û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:"
    getent passwd | awk -F: '$3 >= 1000 {print $1 " (UID: " $3 ")"}' | sort

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å sudo –ø—Ä–∞–≤–∞–º–∏
    echo -e "\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å sudo –ø—Ä–∞–≤–∞–º–∏:"
    getent group sudo | cut -d: -f4 | tr ',' '\n' | while read -r user; do
        [ -n "$user" ] && echo "  $user"
    done

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Å—Ç—ã—Ö –ø–∞—Ä–æ–ª–µ–π
    echo -e "\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Å—Ç—ã—Ö –ø–∞—Ä–æ–ª–µ–π:"
    awk -F: '($2 == "" ) { print $1 " –Ω–µ –∏–º–µ–µ—Ç –ø–∞—Ä–æ–ª—è!"}' /etc/shadow

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –ø–∞—Ä–æ–ª–µ–π
    echo -e "\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–µ–∑ –ø–∞—Ä–æ–ª–µ–π:"
    awk -F: '($2 == "!" || $2 == "*") { print $1 " –æ—Ç–∫–ª—é—á–µ–Ω"}' /etc/shadow
}

main() {
    case "$1" in
        "user")
            shift
            user_management "$@"
            ;;
        "audit")
            audit_users
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <user|audit> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
            exit 1
            ;;
    esac
}

main "$@"
```

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PAM (Pluggable Authentication Modules)

#### –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–Ω–æ–≥–æ—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:
```bash
#!/bin/bash
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PAM –¥–ª—è Debian

configure_pam() {
    echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PAM (Pluggable Authentication Modules) ==="

    # –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ PAM –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
    backup_pam_configs() {
        local backup_dir="/etc/pam.d/backup.$(date +%Y%m%d%H%M%S)"
        mkdir -p "$backup_dir"

        cp -r /etc/pam.d/* "$backup_dir/"
        echo "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è PAM —Å–æ–∑–¥–∞–Ω–∞: $backup_dir"
    }

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PAM –¥–ª—è SSH
    configure_ssh_pam() {
        echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ PAM –¥–ª—è SSH..."

        cat > /etc/pam.d/sshd << EOF
# PAM configuration for SSH
@include common-auth
@include common-account
@include common-session
@include common-password

# Additional security measures
auth required pam_faildelay.so delay=2000000
auth required pam_tally2.so deny=3 unlock_time=600
account required pam_tally2.so
session required pam_limits.so
EOF

        echo "‚úì PAM –¥–ª—è SSH –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    }

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PAM –¥–ª—è sudo
    configure_sudo_pam() {
        echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ PAM –¥–ª—è sudo..."

        cat > /etc/pam.d/sudo << EOF
# PAM configuration for sudo
@include common-auth
@include common-account
@include common-session

# Sudo specific configuration
auth required pam_wheel.so use_uid
auth required pam_tally2.so deny=5 unlock_time=900
account required pam_tally2.so
EOF

        echo "‚úì PAM –¥–ª—è sudo –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    }

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–Ω–æ–≥–æ—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    setup_mfa() {
        echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–Ω–æ–≥–æ—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏..."

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
        apt-get install -y libpam-google-authenticator

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ MFA –≤ common-auth
        if ! grep -q "pam_google_authenticator.so" /etc/pam.d/common-auth; then
            sed -i '/@include common-auth/a auth required pam_google_authenticator.so' /etc/pam.d/common-auth
        fi

        echo "‚úì MFA –Ω–∞—Å—Ç—Ä–æ–µ–Ω (—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: google-authenticator)"
    }

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏–º–∏—Ç–æ–≤ —Å–µ–∞–Ω—Å–∞
    configure_session_limits() {
        echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏–º–∏—Ç–æ–≤ —Å–µ–∞–Ω—Å–∞..."

        cat > /etc/security/limits.d/debian-hardening.conf << EOF
# Session limits for security
* soft core 0
* hard core 0
* soft nofile 1024
* hard nofile 2048
* soft nproc 512
* hard nproc 1024

# Root limits
root soft nofile 2048
root hard nofile 4096
EOF

        echo "‚úì –õ–∏–º–∏—Ç—ã —Å–µ–∞–Ω—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    }

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    case "$1" in
        "backup")
            backup_pam_configs
            ;;
        "ssh")
            configure_ssh_pam
            ;;
        "sudo")
            configure_sudo_pam
            ;;
        "mfa")
            setup_mfa
            ;;
        "limits")
            configure_session_limits
            ;;
        "all")
            backup_pam_configs
            configure_ssh_pam
            configure_sudo_pam
            configure_session_limits
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <backup|ssh|sudo|mfa|limits|all>"
            exit 1
            ;;
    esac
}

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞–º–∏ SSH
ssh_key_management() {
    echo "=== –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ SSH –∫–ª—é—á–∞–º–∏ ==="

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSH –∫–ª—é—á–∞
    generate_ssh_key() {
        local username="$1"
        local key_type="${2:-ed25519}"
        local key_file="/home/$username/.ssh/id_$key_type"

        echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSH –∫–ª—é—á–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $username"

        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ .ssh
        mkdir -p "/home/$username/.ssh"
        chown "$username:$username" "/home/$username/.ssh"
        chmod 700 "/home/$username/.ssh"

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–∞
        case "$key_type" in
            "rsa")
                su - "$username" -c "ssh-keygen -t rsa -b 4096 -f '$key_file' -N '' -C '$username@$(hostname)'"
                ;;
            "ed25519")
                su - "$username" -c "ssh-keygen -t ed25519 -f '$key_file' -N '' -C '$username@$(hostname)'"
                ;;
            "ecdsa")
                su - "$username" -c "ssh-keygen -t ecdsa -b 521 -f '$key_file' -N '' -C '$username@$(hostname)'"
                ;;
            *)
                echo "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –∫–ª—é—á–∞: $key_type"
                return 1
                ;;
        esac

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ authorized_keys
        cat "${key_file}.pub" >> "/home/$username/.ssh/authorized_keys"
        chmod 600 "/home/$username/.ssh/authorized_keys"
        chown "$username:$username" "/home/$username/.ssh/authorized_keys"

        echo "‚úì SSH –∫–ª—é—á —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: $key_file"
        echo "–ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –¥–æ–±–∞–≤–ª–µ–Ω –≤ authorized_keys"
    }

    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ authorized_keys
    manage_authorized_keys() {
        local action="$1"
        local username="$2"
        local key="$3"

        local auth_file="/home/$username/.ssh/authorized_keys"

        case "$action" in
            "add")
                echo "$key" >> "$auth_file"
                echo "‚úì –ö–ª—é—á –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $username"
                ;;
            "remove")
                sed -i "\|$key|d" "$auth_file"
                echo "‚úì –ö–ª—é—á —É–¥–∞–ª–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $username"
                ;;
            "list")
                echo "Authorized keys –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $username:"
                cat "$auth_file" 2>/dev/null || echo "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
                ;;
            *)
                echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: manage_authorized_keys <add|remove|list> <user> [key]"
                return 1
                ;;
        esac
    }

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    case "$1" in
        "generate")
            generate_ssh_key "$2" "$3"
            ;;
        "auth")
            shift
            manage_authorized_keys "$@"
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <generate|auth> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
            exit 1
            ;;
    esac
}

main() {
    case "$1" in
        "pam")
            shift
            configure_pam "$@"
            ;;
        "ssh")
            shift
            ssh_key_management "$@"
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <pam|ssh> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
            exit 1
            ;;
    esac
}

main "$@"
```

### –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ—Å—Ç—É–ø–∞ –∏ –∞—É–¥–∏—Ç–∞

#### –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞:
```bash
#!/bin/bash
# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ—Å—Ç—É–ø–∞ –∏ –∞—É–¥–∏—Ç–∞ Debian

access_monitoring() {
    echo "=== –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ—Å—Ç—É–ø–∞ –∏ –∞—É–¥–∏—Ç–∞ Debian ==="

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ auditd
    setup_auditd() {
        echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ auditd –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–æ—Å—Ç—É–ø–∞..."

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ auditd
        apt-get install -y auditd audispd-plugins

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤–∏–ª –∞—É–¥–∏—Ç–∞
        cat > /etc/audit/rules.d/access-monitoring.rules << EOF
# Audit rules for access monitoring

# Monitor login/logout events
-w /var/log/wtmp -p wa -k logins
-w /var/run/utmp -p wa -k logins
-w /var/log/btmp -p wa -k logins

# Monitor sudo usage
-w /etc/sudoers -p wa -k sudo
-w /etc/sudoers.d/ -p wa -k sudo

# Monitor user/group modifications
-w /etc/passwd -p wa -k user_mod
-w /etc/group -p wa -k group_mod
-w /etc/shadow -p wa -k shadow

# Monitor SSH access
-w /etc/ssh/sshd_config -p wa -k ssh_config
-w /var/log/auth.log -p wa -k auth_log

# Monitor PAM configuration
-w /etc/pam.d/ -p wa -k pam_config

# Monitor file access
-a always,exit -F arch=b64 -S open,openat,creat -F exit=-EPERM -k file_access_denied
-a always,exit -F arch=b64 -S open,openat,creat -F exit=-EACCES -k file_access_denied
EOF

        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∞–≤–∏–ª
        augenrules --load

        # –í–∫–ª—é—á–µ–Ω–∏–µ auditd
        systemctl enable auditd
        systemctl start auditd

        echo "‚úì Auditd –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–æ—Å—Ç—É–ø–∞"
    }

    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞
    monitor_failed_logins() {
        echo "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞..."

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–µ—É–¥–∞—á–Ω—ã—Ö –≤—Ö–æ–¥–æ–≤
        echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–µ—É–¥–∞—á–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –≤—Ö–æ–¥–∞:"
        lastb | head -10 2>/dev/null || echo "–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –≤—Ö–æ–¥–∞—Ö"

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
        echo -e "\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π:"
        pam_tally2 2>/dev/null | while read -r line; do
            echo "  $line"
        done
    }

    # –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    analyze_auth_logs() {
        echo "–ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏..."

        local log_file="/var/log/auth.log"

        if [ ! -f "$log_file" ]; then
            echo "–§–∞–π–ª –ª–æ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $log_file"
            return 1
        fi

        echo "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞:"
        echo "–£—Å–ø–µ—à–Ω—ã—Ö –≤—Ö–æ–¥–æ–≤: $(grep -c "session opened" "$log_file" 2>/dev/null || echo '0')"
        echo "–ù–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫: $(grep -c "FAILED" "$log_file" 2>/dev/null || echo '0')"
        echo "SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: $(grep -c "sshd.*Accepted" "$log_file" 2>/dev/null || echo '0')"

        # –¢–æ–ø –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –ø–æ IP
        echo -e "\n–¢–æ–ø –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –ø–æ IP:"
        grep "Failed password" "$log_file" 2>/dev/null | \
            grep -oE "from [0-9]+\.[0-9]+\.[0-9]+\.[0-9]+" | \
            cut -d' ' -f2 | sort | uniq -c | sort -nr | head -5 || echo "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
    }

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    case "$1" in
        "setup")
            setup_auditd
            ;;
        "failed")
            monitor_failed_logins
            ;;
        "analyze")
            analyze_auth_logs
            ;;
        "all")
            setup_auditd
            echo ""
            monitor_failed_logins
            echo ""
            analyze_auth_logs
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <setup|failed|analyze|all>"
            exit 1
            ;;
    esac
}

# –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
generate_security_report() {
    local report_file="/var/log/security-report-$(date +%Y%m%d).txt"

    echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: $report_file"

    {
        echo "=== –û—Ç—á–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Debian ==="
        echo "–î–∞—Ç–∞: $(date)"
        echo ""

        echo "=== –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ –≥—Ä—É–ø–ø—ã ==="
        audit_users

        echo -e "\n=== –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ—Å—Ç—É–ø–∞ ==="
        monitor_failed_logins

        echo -e "\n=== –ê–Ω–∞–ª–∏–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ ==="
        analyze_auth_logs

        echo -e "\n=== –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ ==="
        echo "1. –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ª–æ–≥–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"
        echo "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–Ω–æ–≥–æ—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é"
        echo "3. –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –Ω–µ—É–¥–∞—á–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –≤—Ö–æ–¥–∞"
        echo "4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ strong –ø–∞—Ä–æ–ª–∏"
        echo "5. –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ —Å–∏—Å—Ç–µ–º—É"

    } 2>/dev/null > "$report_file"

    echo "–û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $report_file"
}

main() {
    case "$1" in
        "monitor")
            shift
            access_monitoring "$@"
            ;;
        "report")
            generate_security_report
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <monitor|report> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
            exit 1
            ;;
    esac
}

main "$@"
```

---

## –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- [ ] –ü—Ä–∞–≤–∏–ª–æ –∏–∑—É—á–µ–Ω–æ –∏ –ø–æ–Ω—è—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ CI/CD
- [ ] –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –º–µ—Ä–¥–∂–∞
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞
- [ ] –†–µ–≥—É–ª—è—Ä–Ω—ã–π –∞—É–¥–∏—Ç —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞

### –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- [ ] 100% —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ –Ω–æ–≤–æ–º –∫–æ–¥–µ
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–µ—Ç–∫–∞—Ö
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏—è
- [ ] –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –ø—Ä–∞–≤–∏–ª–∞

### –ò—Å—Ç–æ—á–Ω–∏–∫
–°–æ–∑–¥–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–¥–µ–ª–∞ Debian authentication and access controls