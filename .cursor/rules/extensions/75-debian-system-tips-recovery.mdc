---
alwaysApply: ${cursor.file.content.includes("recovery") || cursor.file.content.includes("tips")}
---


# –ü—Ä–∞–≤–∏–ª–æ 75: –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ Debian

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã Debian GNU/Linux.

## –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

## –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ Debian

### –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã

#### –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã:
```bash
#!/bin/bash
# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã Debian

system_diagnostics() {
    echo "=== –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã Debian ==="

    # –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
    echo "–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
    echo "  –î–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤: $(lsb_release -d -s 2>/dev/null || cat /etc/os-release | grep PRETTY_NAME | cut -d'"' -f2)"
    echo "  –Ø–¥—Ä–æ: $(uname -r)"
    echo "  –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $(uname -m)"
    echo "  Uptime: $(uptime -p)"
    echo "  –ó–∞–≥—Ä—É–∑–∫–∞: $(uptime | awk -F'load average:' '{print $2}')"

    # –ü–∞–º—è—Ç—å
    echo -e "\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:"
    free -h | awk 'NR==1{print "  " $0} NR==2{print "  " $0}'

    # –î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    echo -e "\n–î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:"
    df -h | grep -E '^/dev/' | awk '{print "  " $0}'

    # –°–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
    echo -e "\n–°–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:"
    ip -brief addr show | awk '{print "  " $0}'

    # –°–ª—É–∂–±—ã systemd
    echo -e "\n–°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞–∂–Ω—ã—Ö —Å–ª—É–∂–±:"
    for service in sshd systemd-networkd systemd-resolved; do
        if systemctl is-active "$service" >/dev/null 2>&1; then
            echo "  ‚úì $service: –∞–∫—Ç–∏–≤–µ–Ω"
        else
            echo "  ‚úó $service: –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
        fi
    done

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏
    echo -e "\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏:"
    journalctl -p err --since "1 hour ago" --no-pager | wc -l | {
        read count
        if [ "$count" -gt 0 ]; then
            echo "  ‚ö† –ù–∞–π–¥–µ–Ω–æ $count –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å"
        else
            echo "  ‚úì –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        fi
    }
}

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
boot_diagnostics() {
    echo "=== –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏—Å—Ç–µ–º—ã ==="

    # –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
    echo "–í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏—Å—Ç–µ–º—ã:"
    systemd-analyze | head -3

    # –ù–µ—É–¥–∞—á–Ω—ã–µ —Å–ª—É–∂–±—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    echo -e "\n–ù–µ—É–¥–∞—á–Ω—ã–µ —Å–ª—É–∂–±—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:"
    systemctl --failed --no-pager | grep -v "UNIT\|LOAD" | while read -r unit status; do
        echo "  ‚úó $unit: $status"
    done

    # –ê–Ω–∞–ª–∏–∑ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—É—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    echo -e "\n–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø—É—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏:"
    systemd-analyze critical-chain | head -10

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    echo -e "\n–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã:"
    for fs in $(df -t ext4 -t btrfs -t xfs --output=target | tail -n +2); do
        echo "  –ü—Ä–æ–≤–µ—Ä–∫–∞ $fs..."
        if mountpoint -q "$fs"; then
            fs_type=$(df -T "$fs" | tail -1 | awk '{print $2}')
            case "$fs_type" in
                ext4)
                    tune2fs -l "$(df "$fs" | tail -1 | awk '{print $1}')" | grep -E "Filesystem state|Last checked" | sed 's/^/    /' || echo "    –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"
                    ;;
                *)
                    echo "    –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ $fs_type –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É"
                    ;;
            esac
        fi
    done
}

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ç–∏
network_diagnostics() {
    echo "=== –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ç–∏ ==="

    # DNS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
    echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DNS:"
    for domain in debian.org google.com; do
        if nslookup "$domain" >/dev/null 2>&1; then
            echo "  ‚úì DNS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ $domain: OK"
        else
            echo "  ‚úó DNS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ $domain: FAILED"
        fi
    done

    # –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
    echo -e "\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:"
    if ping -c 1 -W 2 8.8.8.8 >/dev/null 2>&1; then
        echo "  ‚úì –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–¥–æ—Å—Ç—É–ø: OK"
    else
        echo "  ‚úó –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–¥–æ—Å—Ç—É–ø: FAILED"
    fi

    # –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ Debian
    echo -e "\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ Debian:"
    if curl -s --connect-timeout 5 http://deb.debian.org/debian/dists/trixie/Release >/dev/null; then
        echo "  ‚úì –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π deb.debian.org: OK"
    else
        echo "  ‚úó –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π deb.debian.org: FAILED"
    fi

    # –õ–æ–∫–∞–ª—å–Ω—ã–µ —Å–µ—Ç–µ–≤—ã–µ —Å–ª—É–∂–±—ã
    echo -e "\n–õ–æ–∫–∞–ª—å–Ω—ã–µ —Å–µ—Ç–µ–≤—ã–µ —Å–ª—É–∂–±—ã:"
    netstat -tlnp 2>/dev/null | grep -E ":22|:80|:443" | while read -r line; do
        port=$(echo "$line" | awk '{print $4}' | cut -d: -f2)
        service=$(echo "$line" | awk '{print $7}' | cut -d/ -f2)
        echo "  –ü–æ—Ä—Ç $port: $service"
    done
}

main() {
    case "${1:-all}" in
        "system")
            system_diagnostics
            ;;
        "boot")
            boot_diagnostics
            ;;
        "network")
            network_diagnostics
            ;;
        "all")
            system_diagnostics
            echo ""
            boot_diagnostics
            echo ""
            network_diagnostics
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <system|boot|network|all>"
            exit 1
            ;;
    esac
}

main "$@"
```

### –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã

#### –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —Ä–µ–º–æ–Ω—Ç–∞:
```bash
#!/bin/bash
# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã Debian

system_recovery() {
    echo "=== –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã Debian ==="

    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
    restore_from_backup() {
        local backup_file="$1"
        local restore_path="$2"

        echo "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: $backup_file"

        if [ ! -f "$backup_file" ]; then
            echo "–û—à–∏–±–∫–∞: —Ñ–∞–π–ª —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
            return 1
        fi

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∞—Ä—Ö–∏–≤–∞
        case "$backup_file" in
            *.tar.gz|*.tgz)
                tar -xzf "$backup_file" -C "$restore_path"
                ;;
            *.tar.bz2|*.tbz2)
                tar -xjf "$backup_file" -C "$restore_path"
                ;;
            *.tar.xz|*.txz)
                tar -xJf "$backup_file" -C "$restore_path"
                ;;
            *)
                echo "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –∞—Ä—Ö–∏–≤–∞"
                return 1
                ;;
        esac

        echo "‚úì –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    }

    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤
    restore_packages() {
        echo "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
        dpkg --get-selections > /root/package-selections-backup.txt

        # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞
        if [ -f "/root/package-selections-restore.txt" ]; then
            dpkg --set-selections < /root/package-selections-restore.txt
            apt-get dselect-upgrade -y
            echo "‚úì –ü–∞–∫–µ—Ç—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        else
            echo "–§–∞–π–ª —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"
            return 1
        fi
    }

    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    restore_config_files() {
        echo "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."

        # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ /etc
        if [ -d "/etc/backup" ]; then
            cp -r /etc/backup/* /etc/
            echo "‚úì –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ /etc/backup"
        else
            echo "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è /etc –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        fi
    }

    # –†–µ–º–æ–Ω—Ç –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
    repair_bootloader() {
        echo "–†–µ–º–æ–Ω—Ç –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ GRUB..."

        # –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ GRUB
        apt-get install --reinstall -y grub-efi-arm64

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        update-grub

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ EFI
        if [ -d "/boot/efi" ]; then
            grub-install --target=arm64-efi --efi-directory=/boot/efi --bootloader-id=debian
            echo "‚úì –ó–∞–≥—Ä—É–∑—á–∏–∫ GRUB –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        else
            echo "EFI —Ä–∞–∑–¥–µ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ GRUB"
        fi
    }

    # –†–µ–º–æ–Ω—Ç —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    repair_filesystem() {
        local device="$1"

        echo "–†–µ–º–æ–Ω—Ç —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã: $device"

        if [ ! -b "$device" ]; then
            echo "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: $device"
            return 1
        fi

        # –†–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        umount "$device" 2>/dev/null || true

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –§–°
        fs_type=$(blkid -o value -s TYPE "$device")
        echo "–¢–∏–ø —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã: $fs_type"

        case "$fs_type" in
            ext4)
                e2fsck -y "$device"
                ;;
            btrfs)
                btrfs check --repair "$device"
                ;;
            xfs)
                xfs_repair "$device"
                ;;
            *)
                echo "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã: $fs_type"
                return 1
                ;;
        esac

        echo "‚úì –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—Ç—Ä–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞"
    }

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    case "$1" in
        "backup")
            restore_from_backup "$2" "$3"
            ;;
        "packages")
            restore_packages
            ;;
        "config")
            restore_config_files
            ;;
        "bootloader")
            repair_bootloader
            ;;
        "filesystem")
            repair_filesystem "$2"
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <backup|packages|config|bootloader|filesystem> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
            exit 1
            ;;
    esac
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
create_backups() {
    echo "=== –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π Debian ==="

    local backup_dir="/var/backups/debian-$(date +%Y%m%d)"
    mkdir -p "$backup_dir"

    # –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
    echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
    dpkg --get-selections > "$backup_dir/package-selections.txt"

    # –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è /etc
    echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ /etc..."
    tar -czf "$backup_dir/etc-backup.tar.gz" /etc

    # –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è /home (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    read -p "–°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é /home? (y/N): " backup_home
    if [[ $backup_home =~ ^[Yy]$ ]]; then
        echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ /home..."
        tar -czf "$backup_dir/home-backup.tar.gz" /home
    fi

    # –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã)
    if command -v mysqldump >/dev/null 2>&1; then
        echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ MySQL..."
        mysqldump --all-databases > "$backup_dir/mysql-backup.sql"
    fi

    if command -v pg_dumpall >/dev/null 2>&1; then
        echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ PostgreSQL..."
        su - postgres -c "pg_dumpall" > "$backup_dir/postgres-backup.sql"
    fi

    # –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
    echo "–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—â–µ–≥–æ –∞—Ä—Ö–∏–≤–∞..."
    tar -czf "/var/backups/debian-backup-$(date +%Y%m%d).tar.gz" -C /var/backups "debian-$(date +%Y%m%d)"

    echo "‚úì –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —Å–æ–∑–¥–∞–Ω—ã –≤: $backup_dir"
    echo "–û–±—â–∏–π –∞—Ä—Ö–∏–≤: /var/backups/debian-backup-$(date +%Y%m%d).tar.gz"
}

# –†–µ–∂–∏–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
recovery_mode() {
    echo "=== –†–µ–∂–∏–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è Debian ==="
    echo "–≠—Ç–æ—Ç —Ä–µ–∂–∏–º –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –≤ —Å–ª—É—á–∞–µ –ø—Ä–æ–±–ª–µ–º"

    # –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º
    mount -t proc proc /proc
    mount -t sysfs sys /sys
    mount -t devpts devpts /dev/pts

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ç–∏ (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
    if [ -f /etc/network/interfaces ]; then
        ifup -a
    fi

    # –ó–∞–ø—É—Å–∫ SSH –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    if [ -f /etc/init.d/ssh ]; then
        /etc/init.d/ssh start
        echo "SSH –∑–∞–ø—É—â–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞"
    fi

    echo "–°–∏—Å—Ç–µ–º–∞ –≤ —Ä–µ–∂–∏–º–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
    echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  $0 recovery packages    - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç—ã"
    echo "  $0 recovery bootloader  - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≥—Ä—É–∑—á–∏–∫"
    echo "  $0 recovery filesystem  - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –§–°"
    echo ""
    /bin/bash
}

main() {
    case "$1" in
        "recovery")
            shift
            system_recovery "$@"
            ;;
        "backup")
            create_backups
            ;;
        "mode")
            recovery_mode
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <recovery|backup|mode> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
            exit 1
            ;;
    esac
}

main "$@"
```

### –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

#### –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã:
```bash
#!/bin/bash
# –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ Debian

performance_optimization() {
    echo "=== –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ Debian ==="

    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è swappiness
    optimize_swappiness() {
        echo "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è swappiness..."

        # –î–ª—è SSD —Å–∏—Å—Ç–µ–º
        if [ -f /sys/block/sda/queue/rotational ]; then
            rotational=$(cat /sys/block/sda/queue/rotational)
            if [ "$rotational" = "0" ]; then
                echo "SSD —Å–∏—Å—Ç–µ–º–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ swappiness=1"
                echo "vm.swappiness=1" > /etc/sysctl.d/99-swappiness.conf
            else
                echo "HDD —Å–∏—Å—Ç–µ–º–∞, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ swappiness=10"
                echo "vm.swappiness=10" > /etc/sysctl.d/99-swappiness.conf
            fi
        fi

        sysctl -p /etc/sysctl.d/99-swappiness.conf
        echo "‚úì Swappiness –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω"
    }

    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è I/O –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    optimize_io_scheduler() {
        echo "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è I/O –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞..."

        for disk in /sys/block/sd*; do
            if [ -f "$disk/queue/scheduler" ]; then
                disk_name=$(basename "$disk")
                scheduler_file="$disk/queue/scheduler"

                # –î–ª—è SSD - noop –∏–ª–∏ deadline
                if [ -f "$disk/queue/rotational" ] && [ "$(cat "$disk/queue/rotational")" = "0" ]; then
                    echo noop > "$scheduler_file"
                    echo "‚úì $disk_name: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω noop –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ (SSD)"
                else
                    echo deadline > "$scheduler_file"
                    echo "‚úì $disk_name: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω deadline –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ (HDD)"
                fi
            fi
        done
    }

    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è TCP
    optimize_tcp() {
        echo "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è TCP –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤..."

        cat > /etc/sysctl.d/99-tcp-optimization.conf << EOF
# TCP optimization
net.core.somaxconn = 1024
net.core.netdev_max_backlog = 5000
net.ipv4.tcp_max_syn_backlog = 1024
net.ipv4.ip_local_port_range = 1024 65535
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_fin_timeout = 15
net.ipv4.tcp_keepalive_time = 300
net.ipv4.tcp_keepalive_probes = 5
net.ipv4.tcp_keepalive_intvl = 15
EOF

        sysctl -p /etc/sysctl.d/99-tcp-optimization.conf
        echo "‚úì TCP –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
    }

    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è systemd
    optimize_systemd() {
        echo "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è systemd..."

        # –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤
        mkdir -p /etc/systemd/system.conf.d
        cat > /etc/systemd/system.conf.d/limits.conf << EOF
[Manager]
DefaultLimitNOFILE=65536
DefaultLimitNPROC=65536
EOF

        # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è journald
        cat > /etc/systemd/journald.conf.d/performance.conf << EOF
[Journal]
Storage=volatile
Compress=yes
Seal=no
SplitMode=uid
SyncIntervalSec=5m
RateLimitInterval=30s
RateLimitBurst=1000
EOF

        systemctl restart systemd-journald
        echo "‚úì Systemd –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω"
    }

    # –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    system_cleanup() {
        echo "–û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."

        # –û—á–∏—Å—Ç–∫–∞ apt cache
        apt-get clean
        apt-get autoclean

        # –£–¥–∞–ª–µ–Ω–∏–µ orphan –ø–∞–∫–µ—Ç–æ–≤
        apt-get autoremove -y

        # –û—á–∏—Å—Ç–∫–∞ journal
        journalctl --vacuum-time=7d

        # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        rm -rf /tmp/*
        rm -rf /var/tmp/*

        # –û—á–∏—Å—Ç–∫–∞ cache –±—Ä–∞—É–∑–µ—Ä–æ–≤ (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã)
        if [ -d /root/.cache ]; then
            rm -rf /root/.cache/* 2>/dev/null || true
        fi

        echo "‚úì –°–∏—Å—Ç–µ–º–∞ –æ—á–∏—â–µ–Ω–∞"
    }

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    case "$1" in
        "swappiness")
            optimize_swappiness
            ;;
        "io")
            optimize_io_scheduler
            ;;
        "tcp")
            optimize_tcp
            ;;
        "systemd")
            optimize_systemd
            ;;
        "cleanup")
            system_cleanup
            ;;
        "all")
            optimize_swappiness
            echo ""
            optimize_io_scheduler
            echo ""
            optimize_tcp
            echo ""
            optimize_systemd
            echo ""
            system_cleanup
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <swappiness|io|tcp|systemd|cleanup|all>"
            exit 1
            ;;
    esac
}

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
performance_monitoring() {
    echo "=== –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ==="

    # –¢–µ–∫—É—â–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞
    echo "–¢–µ–∫—É—â–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã:"
    uptime
    echo ""

    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU:"
    top -bn1 | head -10
    echo ""

    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:"
    free -h
    echo ""

    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:"
    df -h
    echo ""

    # I/O —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    echo "I/O —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
    iostat -x 1 5 2>/dev/null || echo "iostat –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo ""

    # –°–µ—Ç–µ–≤—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    echo "–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Ç–µ–≤—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:"
    ss -tuln | head -10
}

main() {
    case "$1" in
        "optimize")
            shift
            performance_optimization "$@"
            ;;
        "monitor")
            performance_monitoring
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <optimize|monitor> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
            exit 1
            ;;
    esac
}

main "$@"
```

---

## –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- [ ] –ü—Ä–∞–≤–∏–ª–æ –∏–∑—É—á–µ–Ω–æ –∏ –ø–æ–Ω—è—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ CI/CD
- [ ] –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –º–µ—Ä–¥–∂–∞
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞
- [ ] –†–µ–≥—É–ª—è—Ä–Ω—ã–π –∞—É–¥–∏—Ç —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞

### –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- [ ] 100% —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ –Ω–æ–≤–æ–º –∫–æ–¥–µ
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–µ—Ç–∫–∞—Ö
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏—è
- [ ] –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –ø—Ä–∞–≤–∏–ª–∞

### –ò—Å—Ç–æ—á–Ω–∏–∫
–°–æ–∑–¥–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–¥–µ–ª–∞ Debian system tips and recovery