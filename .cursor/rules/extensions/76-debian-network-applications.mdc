---
alwaysApply: ${cursor.file.content.includes("network") || cursor.file.content.includes("dns")}
---


# –ü—Ä–∞–≤–∏–ª–æ 76: –°–µ—Ç–µ–≤—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Debian

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ç–µ–≤—ã–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏ –≤ Debian GNU/Linux, –∏—Å–∫–ª—é—á–∞—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è Raspberry Pi –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã.

## –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

## –°–µ—Ç–µ–≤—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Debian

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞

#### –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Apache/Nginx –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö ARM64 —Å–∏—Å—Ç–µ–º:
```bash
#!/bin/bash
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –≤ Debian

web_server_setup() {
    echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ Debian ==="

    # –í—ã–±–æ—Ä –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
    choose_web_server() {
        echo "–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä:"
        echo "1) Apache2"
        echo "2) Nginx"
        echo "3) Lighttpd"
        read -p "–í–∞—à –≤—ã–±–æ—Ä (1-3): " choice

        case "$choice" in
            1)
                install_apache
                ;;
            2)
                install_nginx
                ;;
            3)
                install_lighttpd
                ;;
            *)
                echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
                return 1
                ;;
        esac
    }

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Apache
    install_apache() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Apache2..."

        apt-get install -y apache2 apache2-utils

        # –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        cat > /etc/apache2/conf-available/security.conf << EOF
# Security configuration
ServerTokens Prod
ServerSignature Off
TraceEnable Off
Header always unset X-Powered-By
EOF

        a2enconf security

        # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è ARM64
        cat > /etc/apache2/conf-available/performance.conf << EOF
# Performance optimization for ARM64
StartServers 2
MinSpareServers 2
MaxSpareServers 5
MaxRequestWorkers 50
MaxConnectionsPerChild 1000

KeepAlive On
KeepAliveTimeout 5
MaxKeepAliveRequests 100
EOF

        a2enconf performance

        # –í–∫–ª—é—á–µ–Ω–∏–µ –º–æ–¥—É–ª–µ–π
        a2enmod rewrite
        a2enmod ssl
        a2enmod headers

        systemctl enable apache2
        systemctl start apache2

        echo "‚úì Apache2 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    }

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nginx
    install_nginx() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nginx..."

        apt-get install -y nginx

        # –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        cat > /etc/nginx/nginx.conf << EOF
user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '\$remote_addr - \$remote_user [\$time_local] "\$request" '
                    '\$status \$body_bytes_sent "\$http_referer" '
                    '"\$http_user_agent" "\$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
EOF

        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ —Å–∞–π—Ç–∞
        cat > /etc/nginx/sites-available/default << EOF
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    server_name _;

    location / {
        try_files \$uri \$uri/ =404;
    }

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
}
EOF

        ln -sf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/

        systemctl enable nginx
        systemctl start nginx

        echo "‚úì Nginx —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    }

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Lighttpd
    install_lighttpd() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Lighttpd..."

        apt-get install -y lighttpd

        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è ARM64
        cat > /etc/lighttpd/lighttpd.conf << EOF
server.modules = (
    "mod_access",
    "mod_alias",
    "mod_compress",
    "mod_redirect",
)

server.document-root = "/var/www/html"
server.upload-dirs = ( "/var/cache/lighttpd/uploads" )
server.errorlog = "/var/log/lighttpd/error.log"
server.pid-file = "/run/lighttpd.pid"
server.username = "www-data"
server.groupname = "www-data"
server.port = 80

index-file.names = ( "index.php", "index.html", "index.lighttpd.html" )
url.access-deny = ( "~", ".inc" )
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )

compress.cache-dir = "/var/cache/lighttpd/compress/"
compress.filetype = ( "application/javascript", "text/css", "text/html", "text/plain" )

# default listening port for IPv6 falls back to the IPv4 port
include_shell "/usr/share/lighttpd/use-ipv6.pl " + server.port
include_shell "/usr/share/lighttpd/create-mime.assign.pl"
include_shell "/usr/share/lighttpd/include-conf-enabled.pl"
EOF

        systemctl enable lighttpd
        systemctl start lighttpd

        echo "‚úì Lighttpd —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    }

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    case "$1" in
        "apache")
            install_apache
            ;;
        "nginx")
            install_nginx
            ;;
        "lighttpd")
            install_lighttpd
            ;;
        "choose")
            choose_web_server
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <apache|nginx|lighttpd|choose>"
            exit 1
            ;;
    esac
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL/TLS
ssl_setup() {
    echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL/TLS –¥–ª—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ ==="

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    generate_self_signed_cert() {
        local domain="$1"

        echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è $domain..."

        mkdir -p /etc/ssl/private /etc/ssl/certs

        openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
            -keyout "/etc/ssl/private/${domain}.key" \
            -out "/etc/ssl/certs/${domain}.crt" \
            -subj "/C=US/ST=State/L=City/O=Organization/CN=${domain}"

        echo "‚úì –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω: /etc/ssl/certs/${domain}.crt"
        echo "‚úì –ö–ª—é—á —Å–æ–∑–¥–∞–Ω: /etc/ssl/private/${domain}.key"
    }

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS –¥–ª—è Apache
    setup_apache_ssl() {
        local domain="$1"

        echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS –¥–ª—è Apache..."

        a2enmod ssl

        cat > "/etc/apache2/sites-available/${domain}-ssl.conf" << EOF
<VirtualHost *:443>
    ServerName ${domain}
    DocumentRoot /var/www/html

    SSLEngine on
    SSLCertificateFile /etc/ssl/certs/${domain}.crt
    SSLCertificateKeyFile /etc/ssl/private/${domain}.key

    <Directory /var/www/html>
        AllowOverride All
        Require all granted
    </Directory>

    ErrorLog \${APACHE_LOG_DIR}/error.log
    CustomLog \${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
EOF

        a2ensite "${domain}-ssl"
        systemctl reload apache2

        echo "‚úì HTTPS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è Apache"
    }

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS –¥–ª—è Nginx
    setup_nginx_ssl() {
        local domain="$1"

        echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS –¥–ª—è Nginx..."

        cat > "/etc/nginx/sites-available/${domain}-ssl" << EOF
server {
    listen 443 ssl http2;
    server_name ${domain};

    ssl_certificate /etc/ssl/certs/${domain}.crt;
    ssl_certificate_key /etc/ssl/private/${domain}.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    root /var/www/html;
    index index.html index.htm;

    location / {
        try_files \$uri \$uri/ =404;
    }
}
EOF

        ln -sf "/etc/nginx/sites-available/${domain}-ssl" /etc/nginx/sites-enabled/
        systemctl reload nginx

        echo "‚úì HTTPS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è Nginx"
    }

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    case "$1" in
        "cert")
            generate_self_signed_cert "$2"
            ;;
        "apache")
            setup_apache_ssl "$2"
            ;;
        "nginx")
            setup_nginx_ssl "$2"
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <cert|apache|nginx> <domain>"
            exit 1
            ;;
    esac
}

main() {
    case "$1" in
        "web")
            shift
            web_server_setup "$@"
            ;;
        "ssl")
            shift
            ssl_setup "$@"
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <web|ssl> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
            exit 1
            ;;
    esac
}

main "$@"
```

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞

#### –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Squid/HAProxy –¥–ª—è –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ –Ω–∞–≥—Ä—É–∑–∫–∏:
```bash
#!/bin/bash
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞ –≤ Debian

proxy_server_setup() {
    echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞ Debian ==="

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Squid
    install_squid() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Squid..."

        apt-get install -y squid squid-common

        # –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Squid
        cat > /etc/squid/squid.conf << EOF
# Squid configuration for ARM64
acl localnet src 192.168.0.0/16
acl localnet src 172.16.0.0/12
acl localnet src 10.0.0.0/8

acl SSL_ports port 443
acl Safe_ports port 80          # http
acl Safe_ports port 21          # ftp
acl Safe_ports port 443         # https
acl Safe_ports port 70          # gopher
acl Safe_ports port 210         # wais
acl Safe_ports port 1025-65535  # unregistered ports
acl Safe_ports port 280         # http-mgmt
acl Safe_ports port 488         # gss-http
acl Safe_ports port 591         # filemaker
acl Safe_ports port 777         # multiling http
acl CONNECT method CONNECT

# Deny requests to certain unsafe ports
http_access deny !Safe_ports
http_access deny CONNECT !SSL_ports

# Only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager

# We strongly recommend the following be uncommented to protect innocent
# web applications running on the proxy server who think the only
# one who can access services on "localhost" is a local user
http_access deny to_localhost

# Allow local networks
http_access allow localnet
http_access allow localhost

# And finally deny all other access to this proxy
http_access deny all

# Squid normally listens to port 3128
http_port 3128

# Leave coredumps in the first cache dir
coredump_dir /var/spool/squid

# Add any of your own refresh_pattern entries above these.
refresh_pattern ^ftp:           1440    20%     10080
refresh_pattern ^gopher:        1440    0%      1440
refresh_pattern -i (/cgi-bin/|\?) 0     0%      0
refresh_pattern .               0       20%     4320

# Cache settings optimized for ARM64
cache_dir ufs /var/spool/squid 100 16 256
maximum_object_size 100 MB
cache_mem 64 MB
EOF

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫—ç—à –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        squid -z

        systemctl enable squid
        systemctl start squid

        echo "‚úì Squid —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    }

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ HAProxy
    install_haproxy() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ HAProxy..."

        apt-get install -y haproxy

        # –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è HAProxy
        cat > /etc/haproxy/haproxy.cfg << EOF
global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend http_front
    bind *:80
    default_backend http_back

backend http_back
    balance roundrobin
    server web1 127.0.0.1:8080 check
EOF

        systemctl enable haproxy
        systemctl start haproxy

        echo "‚úì HAProxy —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    }

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ –Ω–∞–≥—Ä—É–∑–∫–∏
    setup_load_balancing() {
        echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ –Ω–∞–≥—Ä—É–∑–∫–∏..."

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ HAProxy –¥–ª—è –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏
        cat >> /etc/haproxy/haproxy.cfg << EOF

frontend https_front
    bind *:443
    mode tcp
    default_backend https_back

backend https_back
    mode tcp
    balance source
    server web1_ssl 127.0.0.1:8443 check

# Statistics page
listen stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if TRUE
EOF

        systemctl reload haproxy

        echo "‚úì –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
    }

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    case "$1" in
        "squid")
            install_squid
            ;;
        "haproxy")
            install_haproxy
            ;;
        "balance")
            setup_load_balancing
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <squid|haproxy|balance>"
            exit 1
            ;;
    esac
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ FTP —Å–µ—Ä–≤–µ—Ä–∞
ftp_server_setup() {
    echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ FTP —Å–µ—Ä–≤–µ—Ä–∞ Debian ==="

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ vsftpd
    install_vsftpd() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ vsftpd..."

        apt-get install -y vsftpd

        # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        cat > /etc/vsftpd.conf << EOF
# vsftpd configuration for ARM64
listen=YES
listen_ipv6=YES
anonymous_enable=NO
local_enable=YES
write_enable=YES
local_umask=022
dirmessage_enable=YES
use_localtime=YES
xferlog_enable=YES
connect_from_port_20=YES
chroot_local_user=YES
secure_chroot_dir=/var/run/vsftpd/empty
pam_service_name=vsftpd
rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
ssl_enable=NO

# Performance optimizations
max_clients=50
max_per_ip=5
idle_session_timeout=600
data_connection_timeout=120

# Security
hide_ids=YES
EOF

        systemctl enable vsftpd
        systemctl start vsftpd

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
        if command -v ufw >/dev/null 2>&1; then
            ufw allow 21
            ufw reload
        fi

        echo "‚úì vsftpd —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    }

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ proftpd
    install_proftpd() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ proftpd..."

        apt-get install -y proftpd-basic

        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è proftpd
        cat > /etc/proftpd/proftpd.conf << EOF
# proftpd configuration
Include /etc/proftpd/modules.conf
UseIPv6 on
IdentLookups off
ServerName "Debian FTP Server"
ServerType standalone
DeferWelcome off

MultilineRFC2228 on
DefaultServer on
ShowSymlinks on

TimeoutNoTransfer 600
TimeoutStalled 600
TimeoutIdle 1200

DisplayLogin welcome.msg
DisplayChdir .message true
ListOptions "-l"

DenyFilter \*.*/

Port 21

MaxInstances 30

User proftpd
Group nogroup

Umask 022 022
AllowOverwrite on
TransferLog /var/log/proftpd/xferlog
SystemLog /var/log/proftpd/proftpd.log

<IfModule mod_quotatab.c>
QuotaEngine off
</IfModule>

<IfModule mod_ratio.c>
Ratios off
</IfModule>

<IfModule mod_delay.c>
DelayEngine on
</IfModule>

<IfModule mod_ctrls.c>
ControlsEngine off
</IfModule>

<IfModule mod_ctrls_admin.c>
AdminControlsEngine off
</IfModule>
EOF

        systemctl enable proftpd
        systemctl start proftpd

        echo "‚úì proftpd —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    }

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    case "$1" in
        "vsftpd")
            install_vsftpd
            ;;
        "proftpd")
            install_proftpd
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <vsftpd|proftpd>"
            exit 1
            ;;
    esac
}

main() {
    case "$1" in
        "proxy")
            shift
            proxy_server_setup "$@"
            ;;
        "ftp")
            shift
            ftp_server_setup "$@"
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <proxy|ftp> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
            exit 1
            ;;
    esac
}

main "$@"
```

---

## –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- [ ] –ü—Ä–∞–≤–∏–ª–æ –∏–∑—É—á–µ–Ω–æ –∏ –ø–æ–Ω—è—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ CI/CD
- [ ] –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –º–µ—Ä–¥–∂–∞
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞
- [ ] –†–µ–≥—É–ª—è—Ä–Ω—ã–π –∞—É–¥–∏—Ç —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞

### –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- [ ] 100% —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ –Ω–æ–≤–æ–º –∫–æ–¥–µ
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–µ—Ç–∫–∞—Ö
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏—è
- [ ] –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –ø—Ä–∞–≤–∏–ª–∞

### –ò—Å—Ç–æ—á–Ω–∏–∫
–°–æ–∑–¥–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–¥–µ–ª–∞ Debian network applications