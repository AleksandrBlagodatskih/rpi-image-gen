---
alwaysApply: ${cursor.file.content.includes("python") || cursor.file.content.includes("gcc")}
---


# –ü—Ä–∞–≤–∏–ª–æ 78: –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ä–µ–¥—ã Debian

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ä–µ–¥—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Debian GNU/Linux, –≤–∫–ª—é—á–∞—è –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä—ã, –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä—ã –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.

## –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

## –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ä–µ–¥—ã Debian

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–≤

#### –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è GCC/Clang –¥–ª—è ARM64:
```bash
#!/bin/bash
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–≤ –≤ Debian

compiler_setup() {
    echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–≤ Debian ARM64 ==="

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ GCC
    install_gcc() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ GCC..."

        apt-get install -y \
            gcc \
            g++ \
            gcc-multilib \
            g++-multilib \
            gcc-arm-linux-gnueabihf \
            gcc-aarch64-linux-gnu \
            binutils \
            make \
            cmake \
            ninja-build

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        gcc --version | head -1
        g++ --version | head -1

        echo "‚úì GCC —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    }

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Clang/LLVM
    install_clang() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Clang/LLVM..."

        apt-get install -y \
            clang \
            clang-tools \
            llvm \
            lldb \
            lld \
            clang-format \
            clang-tidy

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        clang --version | head -1
        llvm-config --version

        echo "‚úì Clang/LLVM —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    }

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    setup_compiler_environment() {
        echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–≤..."

        cat >> /etc/profile.d/compiler-env.sh << 'EOF'
# Compiler environment variables for ARM64
export CC=gcc
export CXX=g++
export CFLAGS="-O2 -march=armv8-a -mtune=cortex-a72"
export CXXFLAGS="${CFLAGS}"
export LDFLAGS="-Wl,--as-needed"

# Alternative compilers
export CLANG_CC=clang
export CLANG_CXX=clang++

# Cross-compilation
export CROSS_COMPILE=aarch64-linux-gnu-
export CROSS_CFLAGS="-O2 -march=armv8-a"

# Include paths
export C_INCLUDE_PATH="/usr/include:/usr/local/include"
export CPLUS_INCLUDE_PATH="/usr/include:/usr/local/include"
export LIBRARY_PATH="/usr/lib/aarch64-linux-gnu:/usr/local/lib"
export LD_LIBRARY_PATH="/usr/lib/aarch64-linux-gnu:/usr/local/lib"

# Go environment (if installed)
export GOPATH="$HOME/go"
export GOROOT="/usr/local/go"
export PATH="$PATH:$GOROOT/bin:$GOPATH/bin"

# Rust environment (if installed)
export RUSTUP_HOME="$HOME/.rustup"
export CARGO_HOME="$HOME/.cargo"
export PATH="$PATH:$CARGO_HOME/bin"
EOF

        # –°–¥–µ–ª–∞—Ç—å –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
        chmod +x /etc/profile.d/compiler-env.sh

        echo "‚úì –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    }

    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–≤
    optimize_compilers() {
        echo "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–≤ –¥–ª—è ARM64..."

        # GCC –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        cat > /etc/gcc.conf << 'EOF'
# GCC optimization flags for ARM64
*flags:
-O2 -march=armv8-a -mtune=cortex-a72 -fstack-protector-strong -fstack-clash-protection

*cxxflags:
${flags} -std=c++17

*ldflags:
-Wl,--as-needed -Wl,--hash-style=gnu
EOF

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ccache –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
        apt-get install -y ccache

        cat > /etc/profile.d/ccache.sh << 'EOF'
# ccache configuration
export CC="ccache gcc"
export CXX="ccache g++"
export PATH="/usr/lib/ccache:$PATH"

# ccache statistics
alias ccache-stats='ccache -s'
alias ccache-clear='ccache -C'
EOF

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ distcc –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
        apt-get install -y distcc

        cat > /etc/distcc/hosts << 'EOF'
# Distcc hosts configuration
localhost/4
EOF

        echo "‚úì –ö–æ–º–ø–∏–ª—è—Ç–æ—Ä—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
    }

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    case "$1" in
        "gcc")
            install_gcc
            ;;
        "clang")
            install_clang
            ;;
        "env")
            setup_compiler_environment
            ;;
        "optimize")
            optimize_compilers
            ;;
        "all")
            install_gcc
            echo ""
            install_clang
            echo ""
            setup_compiler_environment
            echo ""
            optimize_compilers
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <gcc|clang|env|optimize|all>"
            exit 1
            ;;
    esac
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–æ–≤
interpreter_setup() {
    echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–æ–≤ Debian ARM64 ==="

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python
    install_python() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python..."

        apt-get install -y \
            python3 \
            python3-dev \
            python3-pip \
            python3-venv \
            python-is-python3 \
            python3-setuptools \
            python3-wheel

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip
        python3 -m pip install --upgrade pip setuptools wheel

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ virtualenv
        python3 -m pip install virtualenv

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        python3 --version
        pip3 --version

        echo "‚úì Python —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    }

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
    install_nodejs() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js..."

        # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ NodeSource —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –¥–ª—è —Å–≤–µ–∂–µ–π –≤–µ—Ä—Å–∏–∏
        curl -fsSL https://deb.nodesource.com/setup_lts.x | bash -
        apt-get install -y nodejs

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm –∏ yarn
        npm install -g npm@latest
        npm install -g yarn

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        node --version
        npm --version
        yarn --version

        echo "‚úì Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    }

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Java
    install_java() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Java..."

        apt-get install -y \
            default-jdk \
            default-jre \
            maven \
            gradle

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        java -version
        javac -version
        mvn --version

        echo "‚úì Java —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    }

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Go
    install_go() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Go..."

        # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏
        GO_VERSION="1.21.0"
        wget "https://golang.org/dl/go${GO_VERSION}.linux-arm64.tar.gz" -O /tmp/go.tar.gz

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞
        rm -rf /usr/local/go
        tar -C /usr/local -xzf /tmp/go.tar.gz
        rm /tmp/go.tar.gz

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PATH
        cat >> /etc/profile.d/go.sh << 'EOF'
export GOROOT=/usr/local/go
export GOPATH=$HOME/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
EOF

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        /usr/local/go/bin/go version

        echo "‚úì Go —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    }

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Rust
    install_rust() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Rust..."

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ rustup
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PATH
        cat >> /etc/profile.d/rust.sh << 'EOF'
export RUSTUP_HOME=$HOME/.rustup
export CARGO_HOME=$HOME/.cargo
export PATH=$PATH:$CARGO_HOME/bin
EOF

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cp /root/.cargo/bin/* /usr/local/bin/ 2>/dev/null || true

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        source /etc/profile.d/rust.sh
        cargo --version
        rustc --version

        echo "‚úì Rust —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    }

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    case "$1" in
        "python")
            install_python
            ;;
        "nodejs")
            install_nodejs
            ;;
        "java")
            install_java
            ;;
        "go")
            install_go
            ;;
        "rust")
            install_rust
            ;;
        "all")
            install_python
            echo ""
            install_nodejs
            echo ""
            install_java
            echo ""
            install_go
            echo ""
            install_rust
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <python|nodejs|java|go|rust|all>"
            exit 1
            ;;
    esac
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
development_tools_setup() {
    echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ Debian ARM64 ==="

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    install_basic_tools() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."

        apt-get install -y \
            git \
            git-lfs \
            subversion \
            mercurial \
            build-essential \
            autoconf \
            automake \
            libtool \
            pkg-config \
            gettext \
            intltool \
            valgrind \
            gdb \
            strace \
            ltrace \
            perf \
            linux-perf \
            htop \
            iotop \
            ncdu \
            tree \
            tmux \
            screen \
            vim \
            emacs-nox \
            neovim \
            jq \
            curl \
            wget \
            httpie \
            sqlite3 \
            redis-tools \
            postgresql-client \
            mysql-client

        echo "‚úì –û—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    }

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ IDE –∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤
    install_editors() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤ –∏ IDE..."

        apt-get install -y \
            vim \
            neovim \
            emacs-nox \
            nano \
            joe

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Vim
        cat > /etc/vim/vimrc.local << 'EOF'
" Vim configuration for ARM64 development
syntax on
set number
set tabstop=4
set shiftwidth=4
set expandtab
set autoindent
set smartindent
set hlsearch
set incsearch
set ignorecase
set smartcase
set encoding=utf-8
set fileencoding=utf-8

" Development shortcuts
nmap <F5> :make<CR>
nmap <F6> :make clean<CR>
nmap <F7> :!./a.out<CR>
EOF

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ NeoVim
        mkdir -p /etc/xdg/nvim
        cat > /etc/xdg/nvim/init.vim << 'EOF'
" NeoVim configuration
syntax on
set number
set tabstop=4
set shiftwidth=4
set expandtab
set autoindent
set smartindent
set hlsearch
set incsearch
set ignorecase
set smartcase

" Plugins would be configured here for advanced users
EOF

        echo "‚úì –†–µ–¥–∞–∫—Ç–æ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    }

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    install_monitoring_tools() {
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."

        apt-get install -y \
            htop \
            iotop \
            ncdu \
            tree \
            progress \
            pv \
            sysstat \
            dstat \
            atop \
            glances \
            nmon \
            powertop

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ sysstat
        sed -i 's/ENABLED="false"/ENABLED="true"/' /etc/default/sysstat
        systemctl enable sysstat
        systemctl start sysstat

        echo "‚úì –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    }

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git
    configure_git() {
        echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git..."

        # –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        git config --global init.defaultBranch main
        git config --global core.editor vim
        git config --global merge.tool vimdiff
        git config --global diff.tool vimdiff
        git config --global color.ui auto

        # –ü–æ–ª–µ–∑–Ω—ã–µ –∞–ª–∏–∞—Å—ã
        git config --global alias.st status
        git config --global alias.ci commit
        git config --global alias.co checkout
        git config --global alias.br branch
        git config --global alias.lg "log --oneline --graph --decorate"

        # Git LFS
        git lfs install

        echo "‚úì Git –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    }

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    case "$1" in
        "basic")
            install_basic_tools
            ;;
        "editors")
            install_editors
            ;;
        "monitoring")
            install_monitoring_tools
            ;;
        "git")
            configure_git
            ;;
        "all")
            install_basic_tools
            echo ""
            install_editors
            echo ""
            install_monitoring_tools
            echo ""
            configure_git
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <basic|editors|monitoring|git|all>"
            exit 1
            ;;
    esac
}

main() {
    case "$1" in
        "compiler")
            shift
            compiler_setup "$@"
            ;;
        "interpreter")
            shift
            interpreter_setup "$@"
            ;;
        "tools")
            shift
            development_tools_setup "$@"
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <compiler|interpreter|tools> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
            exit 1
            ;;
    esac
}

main "$@"
```

---

## –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- [ ] –ü—Ä–∞–≤–∏–ª–æ –∏–∑—É—á–µ–Ω–æ –∏ –ø–æ–Ω—è—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ CI/CD
- [ ] –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –º–µ—Ä–¥–∂–∞
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞
- [ ] –†–µ–≥—É–ª—è—Ä–Ω—ã–π –∞—É–¥–∏—Ç —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞

### –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- [ ] 100% —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ –Ω–æ–≤–æ–º –∫–æ–¥–µ
- [ ] –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–µ—Ç–∫–∞—Ö
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏—è
- [ ] –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –ø—Ä–∞–≤–∏–ª–∞

### –ò—Å—Ç–æ—á–Ω–∏–∫
–°–æ–∑–¥–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–¥–µ–ª–∞ Debian programming environment