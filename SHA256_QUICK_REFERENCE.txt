╔════════════════════════════════════════════════════════════════════════════╗
║                    SHA256 VERIFICATION - QUICK REFERENCE                   ║
╚════════════════════════════════════════════════════════════════════════════╝

📋 БЫСТРЫЙ СТАРТ
═══════════════

1️⃣  В конфигурации добавьте:

   image:
     base_image_url: https://example.com/image.img.xz
     base_image_sha256_url: https://example.com/image.img.xz.sha256

2️⃣  Запустите скрипт:

   ./scripts/apply-layers-to-base-image.sh config.yaml

3️⃣  Скрипт автоматически:
   ✓ Загрузит SHA256 файл
   ✓ Загрузит образ
   ✓ Проверит целостность
   ✓ Продолжит или остановится при ошибке

───────────────────────────────────────────────────────────────────────────

🎯 ДВА СПОСОБА УКАЗАНИЯ SHA256
═════════════════════════════

┌─ Способ 1: URL к SHA256 файлу (автоматическая загрузка) ──────────────┐
│                                                                         │
│ image:                                                                  │
│   base_image_sha256_url: https://example.com/image.img.xz.sha256       │
│                                                                         │
│ ✓ Автоматическая загрузка                                              │
│ ✓ Всегда актуальный checksum                                           │
│ ✓ Поддержка разных форматов                                            │
│ ⚠ Требует доступ к URL                                                 │
└─────────────────────────────────────────────────────────────────────────┘

┌─ Способ 2: Прямой checksum (offline verification) ─────────────────────┐
│                                                                         │
│ image:                                                                  │
│   base_image_sha256: "a1b2c3d4e5f6789012345678...abcd"                 │
│                                                                         │
│ ✓ Быстро - нет загрузки                                                │
│ ✓ Надёжно - зашито в конфиге                                           │
│ ✓ Offline - работает без интернета                                     │
│ ⚠ Нужно вручную обновлять                                              │
└─────────────────────────────────────────────────────────────────────────┘

───────────────────────────────────────────────────────────────────────────

📄 ПОДДЕРЖИВАЕМЫЕ ФОРМАТЫ SHA256
═══════════════════════════════

Формат 1: Только checksum
┌─────────────────────────────────────────────────────────────────────────┐
│ a1b2c3d4e5f6789012345678901234567890123456789012345678901234abcd        │
└─────────────────────────────────────────────────────────────────────────┘

Формат 2: Checksum + filename (standard sha256sum output)
┌─────────────────────────────────────────────────────────────────────────┐
│ a1b2c3d4e5f6...  image.img.xz                                           │
└─────────────────────────────────────────────────────────────────────────┘

Формат 3: Несколько файлов
┌─────────────────────────────────────────────────────────────────────────┐
│ a1b2c3d4e5f6...  file1.img.xz                                           │
│ b2c3d4e5f678...  file2.img.xz                                           │
│ c3d4e5f67890...  file3.img.xz                                           │
└─────────────────────────────────────────────────────────────────────────┘

Формат 4: Filename: checksum
┌─────────────────────────────────────────────────────────────────────────┐
│ image.img.xz: a1b2c3d4e5f6789012345678901234567890123456789012abcd      │
└─────────────────────────────────────────────────────────────────────────┘

Формат 5: Filename = checksum
┌─────────────────────────────────────────────────────────────────────────┐
│ image.img.xz = a1b2c3d4e5f6789012345678901234567890123456789012abcd     │
└─────────────────────────────────────────────────────────────────────────┘

⚡ Скрипт АВТОМАТИЧЕСКИ определяет формат!

───────────────────────────────────────────────────────────────────────────

🔧 ENVIRONMENT VARIABLES
═══════════════════════

export BASE_IMAGE_SHA256="a1b2c3d4e5f6..."
export BASE_IMAGE_SHA256_URL="https://example.com/image.sha256"

./scripts/apply-layers-to-base-image.sh config.yaml

───────────────────────────────────────────────────────────────────────────

🚀 ПРИМЕРЫ
═════════

┌─ Базовый пример ───────────────────────────────────────────────────────┐
│                                                                         │
│ device:                                                                 │
│   layer: rpi5                                                           │
│                                                                         │
│ image:                                                                  │
│   layer: mdraid1-external-root                                          │
│   base_image_url: https://...image.img.xz                              │
│   base_image_sha256_url: https://...image.img.xz.sha256                │
│                                                                         │
│   mdraid1_external_root_rootfs_type: f2fs                               │
│   mdraid1_external_root_raid_level: RAID1                               │
│   mdraid1_external_root_raid_devices: 2                                 │
│                                                                         │
│ layers:                                                                 │
│   - security-suite                                                      │
└─────────────────────────────────────────────────────────────────────────┘

┌─ Enterprise пример ────────────────────────────────────────────────────┐
│                                                                         │
│ device:                                                                 │
│   layer: rpi-cm5                                                        │
│                                                                         │
│ image:                                                                  │
│   layer: mdraid1-external-root                                          │
│   base_image_url: https://internal-mirror.company.com/image.img.xz     │
│   base_image_sha256: "verified_checksum_from_secure_source"            │
│                                                                         │
│   mdraid1_external_root_rootfs_type: f2fs                               │
│   mdraid1_external_root_encryption_enabled: y                           │
│                                                                         │
│ layers:                                                                 │
│   - security-suite                                                      │
│   - cockpit                                                             │
└─────────────────────────────────────────────────────────────────────────┘

───────────────────────────────────────────────────────────────────────────

✅ ПРОЦЕСС ВЕРИФИКАЦИИ
══════════════════════

[INFO] SHA256 URL provided: https://...sha256
[INFO] Downloading SHA256 checksum...
[INFO] SHA256 file downloaded: cache/image.img.xz.sha256
[INFO] Downloading base image...
[INFO] Download completed: cache/image.img.xz
[INFO] Extracting image...
[INFO] Extraction completed: cache/image.img
[INFO] Verifying image integrity...
[INFO] Image size: 2500 MB
[INFO] Verifying SHA256 checksum...
[INFO] Expected: a1b2c3d4e5f6...
[INFO] Actual:   a1b2c3d4e5f6...
[INFO] ✓ SHA256 checksum verified: OK

───────────────────────────────────────────────────────────────────────────

❌ ОШИБКИ
═════════

┌─ Checksum mismatch ────────────────────────────────────────────────────┐
│                                                                         │
│ [ERROR] SHA256 checksum mismatch!                                      │
│ [ERROR]   Expected: a1b2c3d4e5f6...                                    │
│ [ERROR]   Actual:   b2c3d4e5f678...                                    │
│ [ERROR]                                                                 │
│ [ERROR] This could indicate:                                           │
│ [ERROR]   - Download was corrupted                                     │
│ [ERROR]   - File was modified                                          │
│ [ERROR]   - Wrong checksum provided                                    │
│                                                                         │
│ РЕШЕНИЕ:                                                                │
│   1. Удалите кеш: rm cache/*                                           │
│   2. Перезагрузите: ./scripts/apply-layers-to-base-image.sh           │
│   3. Проверьте checksum вручную: sha256sum cache/image.img.xz         │
└─────────────────────────────────────────────────────────────────────────┘

┌─ Без проверки (WARNING) ───────────────────────────────────────────────┐
│                                                                         │
│ [WARN] No SHA256 checksum provided - skipping verification             │
│ [WARN] For security, it's recommended to verify checksums              │
│                                                                         │
│ РЕКОМЕНДАЦИЯ: Добавьте base_image_sha256 или base_image_sha256_url     │
└─────────────────────────────────────────────────────────────────────────┘

───────────────────────────────────────────────────────────────────────────

🎯 BEST PRACTICES
════════════════

┌───────────────┬─────────────────────────────────────────────────────────┐
│ Окружение     │ Рекомендация                                            │
├───────────────┼─────────────────────────────────────────────────────────┤
│ Development   │ Опционально (warning если нет)                          │
│               │ base_image_sha256_url: ...                              │
├───────────────┼─────────────────────────────────────────────────────────┤
│ Staging       │ Рекомендуется (SHA256 URL)                              │
│               │ base_image_sha256_url: ...                              │
├───────────────┼─────────────────────────────────────────────────────────┤
│ Production    │ ОБЯЗАТЕЛЬНО (прямой checksum)                           │
│               │ base_image_sha256: "verified..."                        │
├───────────────┼─────────────────────────────────────────────────────────┤
│ Enterprise    │ ОБЯЗАТЕЛЬНО (оба метода для двойной проверки)           │
│               │ base_image_sha256: "verified..."                        │
│               │ base_image_sha256_url: ...                              │
└───────────────┴─────────────────────────────────────────────────────────┘

───────────────────────────────────────────────────────────────────────────

🔒 SECURITY
══════════

✓ Защита от повреждённых загрузок
✓ Защита от подмены файлов
✓ Защита от MITM атак
✓ Compliance с security стандартами
✓ Audit trail для enterprise

───────────────────────────────────────────────────────────────────────────

📚 ДОКУМЕНТАЦИЯ
══════════════

📄 docs/SHA256_VERIFICATION.md      - Comprehensive guide (417 lines)
📄 docs/TRIXIE_BASE_IMAGE.md        - Trixie with SHA256
📄 SHA256_SUPPORT_SUMMARY.md        - Feature summary
📄 examples/trixie-sha256-demo.yaml - Demo configuration

───────────────────────────────────────────────────────────────────────────

🔍 КАК ПОЛУЧИТЬ SHA256
═════════════════════

# Официальный сайт:
wget https://downloads.raspberrypi.com/.../image.img.xz.sha256
cat image.img.xz.sha256

# Локально вычислить:
sha256sum image.img.xz

# Проверить файл:
sha256sum -c image.img.xz.sha256

───────────────────────────────────────────────────────────────────────────

📊 СТАТИСТИКА
════════════

Изменённых файлов:          5
Новых файлов:               2 (docs)
Новых функций в скрипте:    3
Поддерживаемых форматов:    5
Строк документации:       600+
Примеров конфигураций:      4

───────────────────────────────────────────────────────────────────────────

✅ ГОТОВО К ИСПОЛЬЗОВАНИЮ!

Security Level: ⬆️ ЗНАЧИТЕЛЬНО ПОВЫШЕН

╔════════════════════════════════════════════════════════════════════════════╗
║  Дата: 2 октября 2025                          Версия: 1.0.0              ║
╚════════════════════════════════════════════════════════════════════════════╝
