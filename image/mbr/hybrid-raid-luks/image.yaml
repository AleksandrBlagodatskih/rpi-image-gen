# METABEGIN
# X-Env-Layer-Name: hybrid-raid-luks
# X-Env-Layer-Category: image
# X-Env-Layer-Desc: Hybrid SD + RAID1 + LUKS storage layer (genimage-based disk images)
# X-Env-Layer-Version: 2.0.0
# X-Env-Layer-Requires: rpi-essential-base
# X-Env-Layer-Provides: image,raid,luks
# X-Env-VarPrefix: hybrid_raid_luks
#
# X-Env-Var-rootfs_type: ext4
# X-Env-Var-rootfs_type-Desc: Root filesystem type (ext4, btrfs, f2fs)
# X-Env-Var-rootfs_type-Required: false
# X-Env-Var-rootfs_type-Valid: ext4,btrfs,f2fs
# X-Env-Var-rootfs_type-Set: immediate
#
# X-Env-Var-encryption_enabled: n
# X-Env-Var-encryption_enabled-Desc: Enable LUKS encryption for root filesystem
# X-Env-Var-encryption_enabled-Required: false
# X-Env-Var-encryption_enabled-Valid: bool
# X-Env-Var-encryption_enabled-Set: immediate
#
# X-Env-Var-key_method: file
# X-Env-Var-key_method-Desc: LUKS key storage method (file, env)
# X-Env-Var-key_method-Required: false
# X-Env-Var-key_method-Valid: file,env
# X-Env-Var-key_method-Set: immediate
#
# X-Env-Var-ssd_devices: /dev/sda,/dev/sdb
# X-Env-Var-ssd_devices-Desc: Comma-separated list of SSD devices for RAID1
# X-Env-Var-ssd_devices-Required: true
# X-Env-Var-ssd_devices-Valid: string
# X-Env-Var-ssd_devices-Set: immediate
#
# X-Env-Var-boot_part_size: 200M
# X-Env-Var-boot_part_size-Desc: Boot partition size
# X-Env-Var-boot_part_size-Required: false
# X-Env-Var-boot_part_size-Valid: size
# X-Env-Var-boot_part_size-Set: immediate
#
# X-Env-Var-root_part_size: 2G
# X-Env-Var-root_part_size-Desc: Root partition size
# X-Env-Var-root_part_size-Required: false
# X-Env-Var-root_part_size-Valid: size
# X-Env-Var-root_part_size-Set: immediate
#
# X-Env-Var-key_size: 512
# X-Env-Var-key_size-Desc: LUKS key size in bits
# X-Env-Var-key_size-Required: false
# X-Env-Var-key_size-Valid: int:256-8192
# X-Env-Var-key_size-Set: immediate
#
# X-Env-Var-pmap: clear
# X-Env-Var-pmap-Desc: Provision map type (clear, crypt)
# X-Env-Var-pmap-Required: false
# X-Env-Var-pmap-Valid: clear,crypt
# X-Env-Var-pmap-Set: immediate
#
# X-Env-Var-disk_expansion_enabled: y
# X-Env-Var-disk_expansion_enabled-Desc: Enable automatic disk expansion to smallest disk size on first boot
# X-Env-Var-disk_expansion_enabled-Required: false
# X-Env-Var-disk_expansion_enabled-Valid: bool
# X-Env-Var-disk_expansion_enabled-Set: lazy
# METAEND
---
mmdebstrap:
  packages:
    - mdadm
    - cryptsetup
    - initramfs-tools
    - parted
    - e2fsprogs  # for resize2fs
    - btrfs-progs  # for btrfs filesystem resize
    - f2fs-tools  # for resize.f2fs

  customize-hooks:
    # RAID/LUKS configuration with idempotency and error handling
    - |
      set -eu
      echo "üîß Configuring RAID/LUKS hybrid storage"

      # Ensure services are enabled with automatic recovery
      systemctl enable mdadm.service 2>/dev/null || true
      systemctl enable cryptsetup.target 2>/dev/null || true

      # Configure mdadm for automatic RAID assembly
      if [ ! -f /etc/mdadm/mdadm.conf.backup ]; then
        cp /etc/mdadm/mdadm.conf /etc/mdadm/mdadm.conf.backup 2>/dev/null || true
      fi

      echo "‚úÖ RAID/LUKS hybrid storage configured"

  rootfs-overlay:
    usr/local/bin/raid-luks-status: |
      #!/bin/bash
      # RAID/LUKS Status Script
      # Provides comprehensive status information about RAID/LUKS hybrid storage

      echo "=== RAID/LUKS Hybrid Storage Status ==="
      echo

      # Check RAID status
      echo "1. RAID Status:"
      if [ -b /dev/md0 ]; then
        echo "   ‚úÖ RAID array /dev/md0 active"
        mdadm --detail /dev/md0 | grep -E "(State|Active|Failed)" | sed 's/^/   /'
      else
        echo "   ‚ùå RAID array /dev/md0 not found"
      fi
      echo

      # Check LUKS status
      echo "2. LUKS Encryption Status:"
      if [ -b /dev/mapper/cryptroot ]; then
        echo "   ‚úÖ LUKS container cryptroot active"
        cryptsetup status cryptroot | grep -E "(type|cipher|keysize)" | sed 's/^/   /'
      else
        echo "   ‚ùå LUKS container cryptroot not active"
      fi
      echo

      # Check filesystem
      echo "3. Filesystem Status:"
      ROOT_MOUNT=$(findmnt -n -o TARGET / 2>/dev/null || echo "unknown")
      FS_TYPE=$(findmnt -n -o FSTYPE / 2>/dev/null || echo "unknown")
      echo "   Mount point: \"$ROOT_MOUNT\""
      echo "   Filesystem: \"$FS_TYPE\""

      # Check disk expansion
      if [ -f /var/lib/disk-expansion.done ]; then
        echo "   ‚úÖ Disk expansion completed"
      else
        echo "   ‚è≥ Disk expansion pending"
      fi
      echo

      # Check services
      echo "4. Services Status:"
      for service in mdadm cryptsetup disk-expansion; do
        if systemctl is-active --quiet "$service" 2>/dev/null; then
          echo "   ‚úÖ $service: active"
        elif systemctl is-enabled --quiet "$service" 2>/dev/null; then
          echo "   ‚ö†Ô∏è  $service: enabled but inactive"
        else
          echo "   ‚ùå $service: not configured"
        fi
      done

    etc/profile.d/raid-luks-status.sh: |
      # Show RAID/LUKS status on login
      if [ -x /usr/local/bin/raid-luks-status ]; then
        echo "üîí RAID/LUKS Storage Status:"
        /usr/local/bin/raid-luks-status | head -10 | tail -8
        echo
      fi
