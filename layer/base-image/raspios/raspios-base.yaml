# METABEGIN
# X-Env-Layer-Name: raspios-base
# X-Env-Layer-Category: base-image
# X-Env-Layer-Desc: Use official Raspberry Pi OS images as base (via external script integration)
# X-Env-Layer-Version: 1.0.0
# X-Env-Layer-Requires: 
# X-Env-Layer-Provides: base-image,raspios
# X-Env-Layer-Conflicts: 
#
# X-Env-VarPrefix: raspios_base
#
# X-Env-Var-image_url: 
# X-Env-Var-image_url-Desc: URL to Raspberry Pi OS image (used by external script)
# X-Env-Var-image_url-Required: n
# X-Env-Var-image_url-Set: immediate
#
# X-Env-Var-image_sha256: 
# X-Env-Var-image_sha256-Desc: SHA256 checksum for verification
# X-Env-Var-image_sha256-Required: n
# X-Env-Var-image_sha256-Set: immediate
#
# X-Env-Var-image_sha256_url: 
# X-Env-Var-image_sha256_url-Desc: URL to SHA256 checksum file
# X-Env-Var-image_sha256_url-Required: n
# X-Env-Var-image_sha256_url-Set: immediate
#
# X-Env-Var-cache_dir: ./cache
# X-Env-Var-cache_dir-Desc: Cache directory for downloaded images
# X-Env-Var-cache_dir-Required: n
# X-Env-Var-cache_dir-Set: immediate
#
# X-Env-Var-verify_checksum: y
# X-Env-Var-verify_checksum-Desc: Verify SHA256 checksum
# X-Env-Var-verify_checksum-Required: n
# X-Env-Var-verify_checksum-Valid: bool
# X-Env-Var-verify_checksum-Set: immediate
# METAEND
---
# Raspberry Pi OS Base Image Layer
#
# ============================================================================
# IMPORTANT: Standard rpi-image-gen Pipeline Integration
# ============================================================================
#
# This layer is a configuration marker for using pre-built Raspberry Pi OS
# images with rpi-image-gen. It follows the standard pipeline architecture:
#
# Pipeline Flow:
#   1. This layer exports configuration variables
#   2. External script (apply-layers-to-base-image.sh) handles image download
#   3. Additional layers are applied on top using standard rpi-image-gen
#
# Usage:
#
#   Method 1: With external script (RECOMMENDED)
#     ./scripts/apply-layers-to-base-image.sh config.yaml
#
#   Method 2: Within standard build (configuration only)
#     ./rpi-image-gen build -c config.yaml
#     (This method only exports configuration, actual image handling is external)
#
# Why this approach?
#   - mmdebstrap is designed for creating chroots from Debian packages
#   - Pre-built images require different tooling (mount, tar, loopback)
#   - Separating concerns: download/prepare vs layer application
#   - Maintains compatibility with standard rpi-image-gen workflow
#
# Architecture:
#   - Layer: Configuration and metadata (this file)
#   - Script: Image download, verification, extraction
#   - Pipeline: Standard layer application via mmdebstrap hooks
#
# See: https://manpages.debian.org/bullseye/mmdebstrap/mmdebstrap.1.en.html
# See: ./scripts/apply-layers-to-base-image.sh
# See: ./docs/RASPIOS_BASE_LAYER.md
#

mmdebstrap:
  mode: unshare
  variant: extract
  
  # This layer exports configuration for external tooling.
  # It does NOT perform image download/extraction itself.
  # Use apply-layers-to-base-image.sh for complete workflow.
  
  customize-hooks:
    - |
      #!/bin/bash
      set -e
      
      echo "[raspios-base] =============================================="
      echo "[raspios-base] Raspberry Pi OS Base Image Layer"
      echo "[raspios-base] =============================================="
      echo "[raspios-base]"
      echo "[raspios-base] This layer provides configuration for using"
      echo "[raspios-base] pre-built Raspberry Pi OS images as base."
      echo "[raspios-base]"
      echo "[raspios-base] Configuration:"
      echo "[raspios-base]   Image URL: ${IGconf_raspios_base_image_url:-not configured}"
      echo "[raspios-base]   SHA256 URL: ${IGconf_raspios_base_image_sha256_url:-not configured}"
      echo "[raspios-base]   Cache Dir: ${IGconf_raspios_base_cache_dir:-./cache}"
      echo "[raspios-base]   Verify: ${IGconf_raspios_base_verify_checksum:-y}"
      echo "[raspios-base]"
      
      # Export configuration to /etc/raspios-base/
      mkdir -p "$1/etc/raspios-base"
      
      cat > "$1/etc/raspios-base/config" << EOF
# Raspberry Pi OS Base Image Layer Configuration
# Generated by rpi-image-gen
# $(date -u +"%Y-%m-%d %H:%M:%S UTC")

RASPIOS_BASE_IMAGE_URL="${IGconf_raspios_base_image_url:-}"
RASPIOS_BASE_IMAGE_SHA256="${IGconf_raspios_base_image_sha256:-}"
RASPIOS_BASE_IMAGE_SHA256_URL="${IGconf_raspios_base_image_sha256_url:-}"
RASPIOS_BASE_CACHE_DIR="${IGconf_raspios_base_cache_dir:-./cache}"
RASPIOS_BASE_VERIFY_CHECKSUM="${IGconf_raspios_base_verify_checksum:-y}"
EOF
      
      echo "[raspios-base] Configuration exported to:"
      echo "[raspios-base]   /etc/raspios-base/config"
      echo "[raspios-base]"
      
      # Check if running in external script context
      if [ -n "${RASPIOS_BASE_EXTERNAL_SCRIPT:-}" ]; then
        echo "[raspios-base] Running in external script context"
        echo "[raspios-base] Image preparation handled externally"
      else
        echo "[raspios-base] =============================================="
        echo "[raspios-base] NOTICE: Configuration Layer Only"
        echo "[raspios-base] =============================================="
        echo "[raspios-base]"
        echo "[raspios-base] This layer exports configuration but does NOT"
        echo "[raspios-base] download or prepare Raspberry Pi OS images."
        echo "[raspios-base]"
        echo "[raspios-base] To use pre-built images, run:"
        echo "[raspios-base]   ./scripts/apply-layers-to-base-image.sh config.yaml"
        echo "[raspios-base]"
        echo "[raspios-base] For standard rpi-image-gen builds from packages,"
        echo "[raspios-base] use a suite layer like 'bookworm-minbase' instead."
        echo "[raspios-base]"
        echo "[raspios-base] Documentation:"
        echo "[raspios-base]   - docs/RASPIOS_BASE_LAYER.md"
        echo "[raspios-base]   - layer/base-image/raspios/README.md"
        echo "[raspios-base]"
      fi
      
      echo "[raspios-base] =============================================="
      echo "[raspios-base] Layer processing complete"
      echo "[raspios-base] =============================================="
