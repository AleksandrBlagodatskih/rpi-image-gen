# METABEGIN
# X-Env-Layer-Name: image-base
# X-Env-Layer-Category: image
# X-Env-Layer-Desc: Default image settings and build attributes.
# X-Env-Layer-Version: 1.0.0
# X-Env-Layer-Requires: sys-build-base,sbom-base,device-base
# X-Env-Layer-RequiresProvider: device
#
# X-Env-VarRequires: IGconf_device_class,IGconf_sys_workroot
# X-Env-VarRequires-Valid: string,string
#
# X-Env-VarPrefix: image
#
# X-Env-Var-version: $(date +%Y-%m-%d)
# X-Env-Var-version-Desc: Version string of the image
# X-Env-Var-version-Required: n
# X-Env-Var-version-Valid: string
# X-Env-Var-version-Set: y
#
# X-Env-Var-suffix: img
# X-Env-Var-suffix-Desc: The base suffix of generated raw image(s)
# X-Env-Var-suffix-Required: n
# X-Env-Var-suffix-Valid: string
# X-Env-Var-suffix-Set: y
#
# X-Env-Var-compression: none
# X-Env-Var-compression-Desc: Identifier for the compression scheme used when
#  deploying images and assets
# X-Env-Var-compression-Required: n
# X-Env-Var-compression-Valid: none,zstd
# X-Env-Var-compression-Set: y
#
# X-Env-Var-name: ${IGconf_device_class}-${IGconf_image_version}
# X-Env-Var-name-Desc: The base name for all generated images
# X-Env-Var-name-Required: n
# X-Env-Var-name-Valid: string
# X-Env-Var-name-Set: y
#
# X-Env-Var-pmap:
# X-Env-Var-pmap-Desc: Set the identifier string for the image Provisioning
#  Map. The Provisioning Map defines how the image will be provisioned on the
#  device for which it's intended. The pmap is an extension of the Image
#  Description JSON file generated by the build. Providing a pmap is optional,
#  but it is mandatory for provisioning the image using Raspberry Pi tools.
# X-Env-Var-pmap-Required: n
# X-Env-Var-pmap-Valid: string-or-empty
# X-Env-Var-pmap-Set: lazy
#
# X-Env-Var-outputdir: ${IGconf_sys_workroot}/${IGconf_image_name}/artefacts
# X-Env-Var-outputdir-Desc: Location of all image build artefacts.
# X-Env-Var-outputdir-Required: n
# X-Env-Var-outputdir-Valid: string
# X-Env-Var-outputdir-Set: y
#
# X-Env-Var-deploydir: ${IGconf_sys_workroot}/${IGconf_image_name}/deploy
# X-Env-Var-deploydir-Desc: Final images and assets will be installed here.
# X-Env-Var-deploydir-Required: n
# X-Env-Var-deploydir-Valid: string
# X-Env-Var-deploydir-Set: y
#
# X-Env-Var-target: ${IGconf_sys_workroot}/${IGconf_image_name}/rootfs
# X-Env-Var-target-Desc: The type of target created by bdebstrap to hold the
#  filesystem. This argument is passed straight to bdebstrap via --target and
#  can be the path to a directory, the path to a tarball filename, etc. See
#  bdebstrap(1) for further details. Post-build and Pre-image hooks should
#  cater for this being a file rather than assuming it will be a directory.
#  All bdebstrap hooks are unaffected by different target types because they
#  execute in bdebstrap context and always operate on the chroot regardless if
#  the target is a file or a directory.
#  Note that it's possible to specify a directory here and use a post-build hook
#  to create a file (eg tarball) as an additional artefact.
# X-Env-Var-target-Required: n
# X-Env-Var-target-Valid: string
# X-Env-Var-target-Set: y
#
# X-Env-Var-provider: genimage
# X-Env-Var-provider-Desc: Image generation provider
# X-Env-Var-provider-Required: n
# X-Env-Var-provider-Valid: keywords:genimage
# X-Env-Var-provider-Set: lazy
# METAEND
---
