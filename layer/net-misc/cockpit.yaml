# METABEGIN
# X-Env-Layer-Name: cockpit
# X-Env-Layer-Desc: Cockpit web interface for system management and monitoring
# X-Env-Layer-Version: 1.0.0
# X-Env-Layer-Requires: systemd-net-min
#
# X-Env-VarRequires: IGconf_device_user1
# X-Env-VarRequires-Valid: string
#
# X-Env-VarPrefix: cockpit
#
# X-Env-Var-port: 9090
# X-Env-Var-port-Desc: Port for Cockpit web interface
# X-Env-Var-port-Required: n
# X-Env-Var-port-Valid: int
# X-Env-Var-port-Set: y
#
# X-Env-Var-allow_unprivileged: n
# X-Env-Var-allow_unprivileged-Desc: Allow unprivileged users to access Cockpit
# X-Env-Var-allow_unprivileged-Required: n
# X-Env-Var-allow_unprivileged-Valid: bool
# X-Env-Var-allow_unprivileged-Set: y
#
# X-Env-Var-max_startup_time: 120
# X-Env-Var-max_startup_time-Desc: Maximum startup time in seconds
# X-Env-Var-max_startup_time-Required: n
# X-Env-Var-max_startup_time-Valid: int
# X-Env-Var-max_startup_time-Set: y
#
# X-Env-Var-login_banner: "Welcome to $(hostname)"
# X-Env-Var-login_banner-Desc: Login banner message
# X-Env-Var-login_banner-Required: n
# X-Env-Var-login_banner-Valid: string
# X-Env-Var-login_banner-Set: y
# METAEND
---
mmdebstrap:
  packages:
    - cockpit
    - cockpit-ws
    - cockpit-bridge
  customize-hooks:
    - |-
      # Enable and start cockpit socket
      $BDEBSTRAP_HOOKS/enable-units "$1" cockpit.socket
    - |-
      # Configure firewall for cockpit port
      if command -v ufw >/dev/null 2>&1; then
        uchroot $1 'ufw allow 9090/tcp'
      elif command -v firewall-cmd >/dev/null 2>&1; then
        uchroot $1 'firewall-cmd --permanent --add-port=9090/tcp'
        uchroot $1 'firewall-cmd --reload'
      fi
    - |-
      # Create cockpit configuration directory
      uchroot $1 'mkdir -p /etc/cockpit'
    - |-
      # Apply cockpit configuration based on variables
      COCKPIT_CONF="$1/etc/cockpit/cockpit.conf"

      # Start WebService section
      cat > "$COCKPIT_CONF" << 'EOF'
[WebService]
EOF

      # Configure port
      if igconf isy cockpit_port && [ "${IGconf_cockpit_port:-9090}" != "9090" ]; then
        echo "Port = ${IGconf_cockpit_port}" >> "$COCKPIT_CONF"
      fi

      # Configure max startup time
      if igconf isy cockpit_max_startup_time && [ "${IGconf_cockpit_max_startup_time:-120}" != "120" ]; then
        echo "MaxStartupTime = ${IGconf_cockpit_max_startup_time}" >> "$COCKPIT_CONF"
      fi

      # Configure unprivileged access
      if igconf isy cockpit_allow_unprivileged; then
        echo "AllowUnprivileged = true" >> "$COCKPIT_CONF"
      fi

      # Configure login banner
      if igconf isy cockpit_login_banner && [ -n "${IGconf_cockpit_login_banner:-}" ]; then
        cat >> "$COCKPIT_CONF" << EOF

[Session]
Banner = ${IGconf_cockpit_login_banner}
EOF
      fi
    - |-
      # Restart cockpit service to apply configuration
      if [ -f "$1/etc/systemd/system/multi-user.target.wants/cockpit.socket" ]; then
        uchroot $1 'systemctl restart cockpit.socket'
      fi
