# METABEGIN
# X-Env-Layer-Name: apparmor
# X-Env-Layer-Category: security
# X-Env-Layer-Desc: AppArmor Mandatory Access Control with base profiles
# X-Env-Layer-Version: 1.0.0
# X-Env-Layer-Requires: locale-base
#
# X-Env-VarPrefix: apparmor
#
# X-Env-Var-enable: y
# X-Env-Var-enable-Desc: Enable AppArmor Mandatory Access Control
# X-Env-Var-enable-Required: n
# X-Env-Var-enable-Valid: bool
# X-Env-Var-enable-Set: y
#
# X-Env-Var-mode: enforce
# X-Env-Var-mode-Desc: AppArmor mode - enforce (block violations) or complain (log only)
# X-Env-Var-mode-Required: n
# X-Env-Var-mode-Valid: keywords:enforce,complain
# X-Env-Var-mode-Set: lazy
#
# METAEND
---
mmdebstrap:
  includes:
    - apparmor
    - apparmor-utils
    - apparmor-profiles
    - apparmor-profiles-extra
  customize-hooks:
    # Настройка AppArmor для Raspberry Pi
    - |
      igconf isy IGconf_apparmor_enable || exit 0

      echo "Configuring AppArmor for Raspberry Pi compatibility..."

      # Включение AppArmor через Raspberry Pi bootloader
      if [ -f "$1/boot/firmware/cmdline.txt" ]; then
          # Для Raspberry Pi OS с firmware в /boot/firmware
          if ! grep -q "apparmor=1" "$1/boot/firmware/cmdline.txt"; then
              echo "Adding AppArmor parameters to /boot/firmware/cmdline.txt"
              sed -i 's/$/ apparmor=1 security=apparmor/' "$1/boot/firmware/cmdline.txt"
          else
              echo "AppArmor parameters already present in /boot/firmware/cmdline.txt"
          fi
      elif [ -f "$1/boot/cmdline.txt" ]; then
          # Альтернативный путь для других Raspberry Pi конфигураций
          if ! grep -q "apparmor=1" "$1/boot/cmdline.txt"; then
              echo "Adding AppArmor parameters to /boot/cmdline.txt"
              sed -i 's/$/ apparmor=1 security=apparmor/' "$1/boot/cmdline.txt"
          else
              echo "AppArmor parameters already present in /boot/cmdline.txt"
          fi
      else
          echo "Warning: Could not find Raspberry Pi bootloader cmdline.txt file"
      fi

      # Для Raspberry Pi OS - включение через initramfs
      if [ ! -f "$1/etc/apparmor/initramfs" ]; then
          # Создание директории если она не существует
          mkdir -p "$1/etc/apparmor"
          touch "$1/etc/apparmor/initramfs"
          # Обновление initramfs
          chroot "$1" update-initramfs -u 2>/dev/null || echo "initramfs update may require manual intervention"
      fi

      # Установка режима работы AppArmor
      APPARMOR_MODE=$(igconf getval IGconf_apparmor_mode)
      case "$APPARMOR_MODE" in
          complain)
              echo "Setting AppArmor to complain mode (logging only)"
              chroot "$1" aa-complain /etc/apparmor.d/* 2>/dev/null || true
              ;;
          enforce|*)
              echo "Setting AppArmor to enforce mode (blocking violations)"
              chroot "$1" aa-enforce /etc/apparmor.d/* 2>/dev/null || true
              ;;
      esac
