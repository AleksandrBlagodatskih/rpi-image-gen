# METABEGIN
# X-Env-Layer-Name: auditd
# X-Env-Layer-Category: security
# X-Env-Layer-Desc: Audit daemon for system logging and compliance monitoring
# X-Env-Layer-Version: 1.0.0
# X-Env-Layer-Requires: locale-base
#
# X-Env-VarPrefix: auditd
#
# X-Env-Var-enable: y
# X-Env-Var-enable-Desc: Enable audit daemon for system monitoring
# X-Env-Var-enable-Required: n
# X-Env-Var-enable-Valid: bool
# X-Env-Var-enable-Set: y
#
# X-Env-Var-max_log_file: 8
# X-Env-Var-max_log_file-Desc: Maximum number of audit log files
# X-Env-Var-max_log_file-Required: n
# X-Env-Var-max_log_file-Valid: int
# X-Env-Var-max_log_file-Set: lazy
#
# X-Env-Var-max_log_file_action: rotate
# X-Env-Var-max_log_file_action-Desc: Action when max log files reached (rotate, keep_logs, syslog, suspend, single, halt)
# X-Env-Var-max_log_file_action-Required: n
# X-Env-Var-max_log_file_action-Valid: keywords:rotate,keep_logs,syslog,suspend,single,halt
# X-Env-Var-max_log_file_action-Set: lazy
#
# X-Env-Var-space_left: 75
# X-Env-Var-space_left-Desc: Space left threshold (MB) before action
# X-Env-Var-space_left-Required: n
# X-Env-Var-space_left-Valid: int
# X-Env-Var-space_left-Set: lazy
#
# X-Env-Var-space_left_action: syslog
# X-Env-Var-space_left_action-Desc: Action when space left threshold reached
# X-Env-Var-space_left_action-Required: n
# X-Env-Var-space_left_action-Valid: keywords:ignore,syslog,suspend,single,halt
# X-Env-Var-space_left_action-Set: lazy
#
# X-Env-Var-admin_space_left: 50
# X-Env-Var-admin_space_left-Desc: Admin space left threshold (MB)
# X-Env-Var-admin_space_left-Required: n
# X-Env-Var-admin_space_left-Valid: int
# X-Env-Var-admin_space_left-Set: lazy
#
# X-Env-Var-admin_space_left_action: single
# X-Env-Var-admin_space_left_action-Desc: Action when admin space left threshold reached
# X-Env-Var-admin_space_left_action-Required: n
# X-Env-Var-admin_space_left_action-Valid: keywords:ignore,syslog,suspend,single,halt
# X-Env-Var-admin_space_left_action-Set: lazy
#
# X-Env-Var-disk_full_action: suspend
# X-Env-Var-disk_full_action-Desc: Action when disk is full
# X-Env-Var-disk_full_action-Required: n
# X-Env-Var-disk_full_action-Valid: keywords:ignore,syslog,suspend,single,halt
# X-Env-Var-disk_full_action-Set: lazy
#
# X-Env-Var-disk_error_action: syslog
# X-Env-Var-disk_error_action-Desc: Action when disk error occurs
# X-Env-Var-disk_error_action-Required: n
# X-Env-Var-disk_error_action-Valid: keywords:ignore,syslog,suspend,single,halt
# X-Env-Var-disk_error_action-Set: lazy
#
# X-Env-Var-flush: incremental_async
# X-Env-Var-flush-Desc: Audit log flush behavior (none, incremental, data, sync)
# X-Env-Var-flush-Required: n
# X-Env-Var-flush-Valid: keywords:none,incremental,incremental_async,data,sync
# X-Env-Var-flush-Set: lazy
#
# X-Env-Var-freq: 50
# X-Env-Var-freq-Desc: Audit message frequency (records)
# X-Env-Var-freq-Required: n
# X-Env-Var-freq-Valid: int
# X-Env-Var-freq-Set: lazy
#
# X-Env-Var-num_logs: 5
# X-Env-Var-num_logs-Desc: Number of audit log files to keep
# X-Env-Var-num_logs-Required: n
# X-Env-Var-num_logs-Valid: int
# X-Env-Var-num_logs-Set: lazy
#
# X-Env-Var-dispatcher: /sbin/audispd
# X-Env-Var-dispatcher-Desc: Audit dispatcher program
# X-Env-Var-dispatcher-Required: n
# X-Env-Var-dispatcher-Valid: string
# X-Env-Var-dispatcher-Set: lazy
#
# X-Env-Var-name_format: hostname
# X-Env-Var-name_format-Desc: Audit log filename format (none, hostname, fqd, numeric, user)
# X-Env-Var-name_format-Required: n
# X-Env-Var-name_format-Valid: keywords:none,hostname,fqd,numeric,user
# X-Env-Var-name_format-Set: lazy
#
# X-Env-Var-system_monitoring: y
# X-Env-Var-system_monitoring-Desc: Enable comprehensive system access monitoring (authentication, file access, network)
# X-Env-Var-system_monitoring-Required: n
# X-Env-Var-system_monitoring-Valid: bool
# X-Env-Var-system_monitoring-Set: lazy
#
# X-Env-Var-security_monitoring: y
# X-Env-Var-security_monitoring-Desc: Enable security-focused monitoring (privilege escalation, suspicious processes)
# X-Env-Var-security_monitoring-Required: n
# X-Env-Var-security_monitoring-Valid: bool
# X-Env-Var-security_monitoring-Set: lazy
#
# X-Env-Var-compliance_monitoring: n
# X-Env-Var-compliance_monitoring-Desc: Enable compliance-focused monitoring (audit trails, access logging)
# X-Env-Var-compliance_monitoring-Required: n
# X-Env-Var-compliance_monitoring-Valid: bool
# X-Env-Var-compliance_monitoring-Set: lazy
# METAEND
---
mmdebstrap:
  includes:
    - auditd
  customize-hooks:
    # Настройка auditd для системного мониторинга
    - |
      if [ "${IGconf_auditd_enable:-n}" != "y" ]; then
        echo "Audit daemon disabled by configuration"
        exit 0
      fi

      echo "Configuring audit daemon for system monitoring..."

      # Создание конфигурационного файла auditd
      AUDITD_CONF="/etc/audit/auditd.conf"
      chroot "$1" cp /usr/share/doc/auditd/examples/auditd.conf "$AUDITD_CONF"

      # Настройка основных параметров
      MAX_LOG_FILE="${IGconf_auditd_max_log_file:-8}"
      MAX_LOG_ACTION="${IGconf_auditd_max_log_file_action:-rotate}"
      SPACE_LEFT="${IGconf_auditd_space_left:-75}"
      SPACE_LEFT_ACTION="${IGconf_auditd_space_left_action:-syslog}"
      ADMIN_SPACE_LEFT="${IGconf_auditd_admin_space_left:-50}"
      ADMIN_SPACE_ACTION="${IGconf_auditd_admin_space_left_action:-single}"
      DISK_FULL_ACTION="${IGconf_auditd_disk_full_action:-suspend}"
      DISK_ERROR_ACTION="${IGconf_auditd_disk_error_action:-syslog}"
      FLUSH="${IGconf_auditd_flush:-incremental_async}"
      FREQ="${IGconf_auditd_freq:-50}"
      NUM_LOGS="${IGconf_auditd_num_logs:-5}"
      DISPATCHER="${IGconf_auditd_dispatcher:-/sbin/audispd}"
      NAME_FORMAT="${IGconf_auditd_name_format:-hostname}"

      echo "Setting auditd parameters: max_log_file=$MAX_LOG_FILE, space_left=$SPACE_LEFT, flush=$FLUSH"

      # Применение настроек
      chroot "$1" sed -i "s|^max_log_file = 8|max_log_file = $MAX_LOG_FILE|" "$AUDITD_CONF"
      chroot "$1" sed -i "s|^max_log_file_action = rotate|max_log_file_action = $MAX_LOG_ACTION|" "$AUDITD_CONF"
      chroot "$1" sed -i "s|^space_left = 75|space_left = $SPACE_LEFT|" "$AUDITD_CONF"
      chroot "$1" sed -i "s|^space_left_action = syslog|space_left_action = $SPACE_LEFT_ACTION|" "$AUDITD_CONF"
      chroot "$1" sed -i "s|^admin_space_left = 50|admin_space_left = $ADMIN_SPACE_LEFT|" "$AUDITD_CONF"
      chroot "$1" sed -i "s|^admin_space_left_action = single|admin_space_left_action = $ADMIN_SPACE_ACTION|" "$AUDITD_CONF"
      chroot "$1" sed -i "s|^disk_full_action = suspend|disk_full_action = $DISK_FULL_ACTION|" "$AUDITD_CONF"
      chroot "$1" sed -i "s|^disk_error_action = syslog|disk_error_action = $DISK_ERROR_ACTION|" "$AUDITD_CONF"
      chroot "$1" sed -i "s|^flush = incremental_async|flush = $FLUSH|" "$AUDITD_CONF"
      chroot "$1" sed -i "s|^freq = 50|freq = $FREQ|" "$AUDITD_CONF"
      chroot "$1" sed -i "s|^num_logs = 5|num_logs = $NUM_LOGS|" "$AUDITD_CONF"
      chroot "$1" sed -i "s|^dispatcher = /sbin/audispd|dispatcher = $DISPATCHER|" "$AUDITD_CONF"
      chroot "$1" sed -i "s|^name_format = hostname|name_format = $NAME_FORMAT|" "$AUDITD_CONF"

      # Создание базовых правил аудита для системы
      AUDIT_RULES="/etc/audit/audit.rules"
      chroot "$1" cp /usr/share/doc/auditd/examples/audit.rules "$AUDIT_RULES"

      # Добавление базовых правил для мониторинга
      cat >> "$1$AUDIT_RULES" << 'EOF'

# Basic system monitoring rules
# Monitor authentication events
-w /var/log/auth.log -p wa -k auth
-w /var/log/sudo.log -p wa -k sudo

# Monitor system calls that could be used for privilege escalation
-a exit,always -F arch=b64 -S execve -k exec
-a exit,always -F arch=b32 -S execve -k exec

# Monitor changes to system configuration
-w /etc/passwd -p wa -k passwd
-w /etc/shadow -p wa -k shadow
-w /etc/group -p wa -k group
-w /etc/sudoers -p wa -k sudoers

# Monitor network configuration changes
-w /etc/network/ -p wa -k network
-w /etc/hosts -p wa -k hosts

# Monitor service management
-w /etc/systemd/ -p wa -k systemd
-w /var/log/systemd/ -p wa -k systemd

# Monitor kernel module loading
-w /sbin/insmod -p x -k modules
-w /sbin/rmmod -p x -k modules
-w /sbin/modprobe -p x -k modules

# Monitor file system mounts
-a exit,always -F arch=b64 -S mount -k mount
-a exit,always -F arch=b32 -S mount -k mount

# Monitor privilege escalation attempts
-a exit,always -F arch=b64 -S setuid -k setuid
-a exit,always -F arch=b32 -S setuid -k setuid
-a exit,always -F arch=b64 -S setgid -k setgid
-a exit,always -F arch=b32 -S setgid -k setgid

# Monitor changes to critical files
-w /etc/audit/ -p wa -k audit
-w /etc/cron* -p wa -k cron
-w /var/spool/cron/ -p wa -k cron
EOF

      # Включение и запуск auditd сервиса
      echo "Enabling auditd service..."
      chroot "$1" systemctl enable auditd
      chroot "$1" systemctl start auditd || echo "Warning: Could not start auditd during build"

      # Проверка статуса
      # Настройка универсального мониторинга доступа к системе
      SYSTEM_MONITORING="${IGconf_auditd_system_monitoring:-y}"
      SECURITY_MONITORING="${IGconf_auditd_security_monitoring:-y}"
      COMPLIANCE_MONITORING="${IGconf_auditd_compliance_monitoring:-n}"

      # Добавление универсальных правил аудита для мониторинга доступа к системе
      echo "Adding universal system access monitoring rules..."

      # Универсальные правила мониторинга доступа к системе
      if [ "$SYSTEM_MONITORING" = "y" ]; then
        cat >> "$1$AUDIT_RULES" << 'EOF'

# Universal system access monitoring
# Monitor authentication events
-a exit,always -F arch=b64 -S open,openat -F success=0 -F dir=/var/log/ -k auth_failures
-w /var/log/auth.log -p wa -k authentication
-w /var/log/sudo.log -p wa -k sudo_access

# Monitor system calls that could indicate privilege escalation
-a exit,always -F arch=b64 -S execve -F uid=0 -k root_execution
-a exit,always -F arch=b64 -S setuid,setgid -k privilege_escalation

# Monitor changes to critical system files
-w /etc/passwd -p wa -k user_accounts
-w /etc/shadow -p wa -k password_changes
-w /etc/group -p wa -k group_changes
-w /etc/sudoers -p wa -k sudo_config

# Monitor network configuration
-w /etc/network/ -p wa -k network_config
-w /etc/hosts -p wa -k hosts_file

# Monitor service management
-w /etc/systemd/ -p wa -k systemd_config
-w /var/log/systemd/ -p wa -k systemd_logs

# Monitor kernel module loading
-w /sbin/insmod -p x -k module_loading
-w /sbin/rmmod -p x -k module_unloading
-w /sbin/modprobe -p x -k module_management

# Monitor file system mounts
-a exit,always -F arch=b64 -S mount -k filesystem_mounts
EOF
      fi

      # Правила мониторинга безопасности
      if [ "$SECURITY_MONITORING" = "y" ]; then
        cat >> "$1$AUDIT_RULES" << 'EOF'

# Security monitoring rules
# Monitor suspicious network connections
-a exit,always -F arch=b64 -S connect -F sport>1024 -F dport<1024 -k suspicious_network

# Monitor unusual process execution
-a exit,always -F arch=b64 -S execve -F exe=/usr/bin/wget -k external_downloads
-a exit,always -F arch=b64 -S execve -F exe=/usr/bin/curl -k external_requests
-a exit,always -F arch=b64 -S execve -F exe=/usr/bin/python* -k python_execution

# Monitor changes to system binaries
-w /usr/bin/ -p wa -k system_binaries
-w /usr/sbin/ -p wa -k system_admin_binaries
-w /sbin/ -p wa -k critical_binaries

# Monitor kernel parameter changes
-w /proc/sys/ -p wa -k kernel_parameters
EOF
      fi

      # Правила мониторинга compliance и общего доступа к системе
      if [ "$COMPLIANCE_MONITORING" = "y" ]; then
        cat >> "$1$AUDIT_RULES" << 'EOF'

# Comprehensive system access monitoring for compliance (CIS, PCI-DSS, HIPAA, GDPR)
# Monitor all authentication attempts
-a exit,always -F arch=b64 -S open,openat -F dir=/var/log/ -k access_attempts

# Monitor file access patterns for compliance
-a exit,always -F arch=b64 -S open,openat -F dir=/etc/ -k config_access
-a exit,always -F arch=b64 -S open,openat -F dir=/var/log/ -k log_access

# Monitor network access for compliance
-a exit,always -F arch=b64 -S connect,accept -k network_access

# Monitor privilege changes
-a exit,always -F arch=b64 -S setuid,setgid -k privilege_changes

# Monitor system time changes
-a exit,always -F arch=b64 -S adjtimex,settimeofday -k time_changes

# Monitor kernel module operations for compliance
-a exit,always -F arch=b64 -S init_module,finit_module -k module_operations

# Monitor system administration commands
-a exit,always -F arch=b64 -S execve -F exe=/usr/bin/systemctl -k systemctl_commands
-a exit,always -F arch=b64 -S execve -F exe=/usr/bin/journalctl -k journal_commands
-a exit,always -F arch=b64 -S execve -F exe=/usr/sbin/service -k service_commands

# Monitor user account management
-a exit,always -F arch=b64 -S execve -F exe=/usr/sbin/useradd -k user_management
-a exit,always -F arch=b64 -S execve -F exe=/usr/sbin/usermod -k user_management
-a exit,always -F arch=b64 -S execve -F exe=/usr/sbin/userdel -k user_management
-a exit,always -F arch=b64 -S execve -F exe=/usr/sbin/groupadd -k group_management
-a exit,always -F arch=b64 -S execve -F exe=/usr/sbin/groupmod -k group_management

# Monitor file permission changes
-a exit,always -F arch=b64 -S chmod -k permission_changes
-a exit,always -F arch=b64 -S chown -k ownership_changes

# Monitor system log modifications
-a exit,always -F arch=b64 -S open,openat -F dir=/var/log/ -F success=0 -k log_access_denied

# Monitor critical system files access
-a exit,always -F arch=b64 -S open,openat -F path=/etc/passwd -k critical_file_access
-a exit,always -F arch=b64 -S open,openat -F path=/etc/shadow -k critical_file_access
-a exit,always -F arch=b64 -S open,openat -F path=/etc/sudoers -k critical_file_access
-a exit,always -F arch=b64 -S open,openat -F path=/etc/group -k critical_file_access

# Monitor system resource usage
-a exit,always -F arch=b64 -S setpriority -k priority_changes
-a exit,always -F arch=b64 -S ioprio_set -k io_priority_changes
EOF
      fi

      # Создание скрипта для анализа логов аудита
      cat > "$1/usr/local/bin/audit-analyze" << 'EOF'
#!/bin/bash
# Скрипт анализа логов аудита для выявления подозрительной активности

echo "=== Audit Log Analysis ==="
echo "Timestamp: $(date)"

# Анализ неудачных аутентификаций
echo "Failed authentications (last 24h):"
sudo ausearch -m USER_AUTH -sv no --start recent --end now | grep -c "acct=" || echo "0"

# Анализ неудачных сетевых подключений
echo "Failed network connections (last 24h):"
sudo ausearch -m SOCKADDR -sv no --start recent --end now | grep -c "saddr=" || echo "0"

# Анализ попыток эскалации привилегий
echo "Privilege escalation attempts (last 24h):"
sudo ausearch -m USER_MGMT -sv no --start recent --end now | grep -c "op=" || echo "0"

# Анализ изменений конфигурации
echo "Configuration changes (last 24h):"
sudo ausearch -m CONFIG_CHANGE -sv no --start recent --end now | grep -c "op=" || echo "0"

echo "=== Top suspicious IPs ==="
sudo aureport -f --summary | head -10

echo "=== Analysis completed ==="
EOF

      chmod +x "$1/usr/local/bin/audit-analyze"

      # Перезагрузка правил аудита
      echo "Reloading audit rules..."
      chroot "$1" auditctl -R /etc/audit/audit.rules || echo "Warning: Could not reload audit rules"

      echo "Audit daemon configuration completed"
      chroot "$1" auditctl -s || echo "Audit daemon status check completed"

      echo "Audit daemon setup completed successfully"
      echo "System access monitoring configuration completed"
