#!/bin/bash
# –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ Sudo Logging
# –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏—Å—Ç–µ–º—ã —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —Å–ª–æ–µ–º

set -euo pipefail

echo "=== Sudo Logging Test ==="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: Sudo —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
echo "1. Checking sudo installation and configuration..."
if command -v sudo >/dev/null 2>&1; then
    SUDO_VERSION=$(sudo -V | head -1 | awk '{print $3}')
    echo "‚úÖ Sudo installed: $SUDO_VERSION"
else
    echo "‚ùå Sudo not installed"
    exit 1
fi

if [[ -f /etc/sudoers ]; then
    echo "‚úÖ Sudoers file exists"
else
    echo "‚ùå Sudoers file not found"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
echo ""
echo "2. Checking sudo logging configuration..."
if grep -q "logfile=" /etc/sudoers; then
    LOG_FILE=$(grep "logfile=" /etc/sudoers | cut -d'"' -f2)
    echo "‚úÖ Sudo logging enabled: $LOG_FILE"
else
    echo "‚ùå Sudo logging not configured"
fi

if grep -q "log_input" /etc/sudoers; then
    echo "‚úÖ Input logging enabled"
else
    echo "‚ö™ Input logging disabled"
fi

if grep -q "log_output" /etc/sudoers; then
    echo "‚úÖ Output logging enabled"
else
    echo "‚ö™ Output logging disabled"
fi

if grep -q "tty_tickets" /etc/sudoers; then
    echo "‚úÖ TTY tickets enabled"
else
    echo "‚ö™ TTY tickets disabled"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: Syslog –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
echo ""
echo "3. Checking syslog configuration..."
if grep -q "syslog=" /etc/sudoers; then
    SYSLOG_FACILITY=$(grep "syslog=" /etc/sudoers | cut -d'=' -f2 | cut -d' ' -f1)
    echo "‚úÖ Syslog facility configured: $SYSLOG_FACILITY"
else
    echo "‚ö™ Syslog not configured"
fi

if grep -q "syslog_goodpri=" /etc/sudoers; then
    SYSLOG_PRIORITY=$(grep "syslog_goodpri=" /etc/sudoers | cut -d'=' -f2 | cut -d' ' -f1)
    echo "‚úÖ Syslog priority configured: $SYSLOG_PRIORITY"
else
    echo "‚ö™ Syslog priority not configured"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
echo ""
echo "4. Checking security settings..."
if grep -q "timestamp_timeout=" /etc/sudoers; then
    TIMEOUT=$(grep "timestamp_timeout=" /etc/sudoers | cut -d'=' -f2 | cut -d' ' -f1)
    echo "‚úÖ Timestamp timeout configured: $TIMEOUT minutes"
else
    echo "‚ö™ Timestamp timeout not configured"
fi

if grep -q "passwd_tries=" /etc/sudoers; then
    TRIES=$(grep "passwd_tries=" /etc/sudoers | cut -d'=' -f2 | cut -d' ' -f1)
    echo "‚úÖ Password tries configured: $TRIES attempts"
else
    echo "‚ö™ Password tries not configured"
fi

if grep -q "secure_path=" /etc/sudoers; then
    echo "‚úÖ Secure PATH configured"
else
    echo "‚ö™ Secure PATH not configured"
fi

if grep -q "env_reset" /etc/sudoers; then
    echo "‚úÖ Environment reset enabled"
else
    echo "‚ö™ Environment reset disabled"
fi

if grep -q "ignore_dot" /etc/sudoers; then
    echo "‚úÖ Ignore dot in PATH enabled"
else
    echo "‚ö™ Ignore dot in PATH disabled"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 5: Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
echo ""
echo "5. Checking email notifications..."
if grep -q "mail_badpass" /etc/sudoers; then
    echo "‚úÖ Bad password email alerts enabled"
else
    echo "‚ö™ Bad password email alerts disabled"
fi

if grep -q "mail_no_user" /etc/sudoers; then
    echo "‚úÖ No user email alerts enabled"
else
    echo "‚ö™ No user email alerts disabled"
fi

if grep -q "mail_no_host" /etc/sudoers; then
    echo "‚úÖ No host email alerts enabled"
else
    echo "‚ö™ No host email alerts disabled"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 6: –õ–æ–≥ —Ñ–∞–π–ª—ã –∏ —Ä–æ—Ç–∞—Ü–∏—è
echo ""
echo "6. Checking log files and rotation..."
LOG_FILE=$(grep "logfile=" /etc/sudoers 2>/dev/null | cut -d'"' -f2)
if [[ -n "$LOG_FILE" ]; then
    if [[ -f "$LOG_FILE" ]; then
        LOG_SIZE=$(du -h "$LOG_FILE" | cut -f1)
        echo "‚úÖ Sudo log file exists: $LOG_SIZE"
        LOG_PERMS=$(stat -c '%a' "$LOG_FILE")
        if [[ "$LOG_PERMS" = "600" ]; then
            echo "‚úÖ Sudo log permissions correct: $LOG_PERMS"
        else
            echo "‚ùå Sudo log permissions incorrect: $LOG_PERMS (should be 600)"
        fi
    else
        echo "‚ö†Ô∏è Sudo log file configured but not created yet"
    fi

    # Check logrotate
    if [[ -f /etc/logrotate.d/sudo ]; then
        echo "‚úÖ Logrotate configuration exists"
    else
        echo "‚ö†Ô∏è Logrotate configuration not found"
    fi
else
    echo "‚ö™ Sudo logging not configured"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 7: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
echo ""
echo "7. Checking monitoring setup..."
if [[ -f /usr/local/bin/sudo-monitor ]; then
    echo "‚úÖ Sudo monitoring script exists"

    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å cron job
    if crontab -l 2>/dev/null | grep -q "sudo-monitor"; then
        echo "‚úÖ Sudo monitoring cron job configured"
    else
        echo "‚ùå Sudo monitoring cron job not found"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ (–º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏)
    if [[ -f /var/log/sudo-alerts.log ]; then
        ALERT_SIZE=$(du -h /var/log/sudo-alerts.log 2>/dev/null | cut -f1)
        echo "‚úÖ Alert log exists (size: $ALERT_SIZE)"
    else
        echo "‚ÑπÔ∏è Alert log not created yet (normal for first run)"
    fi

    if [[ -f /var/log/sudo-security.log ]; then
        LOG_SIZE=$(du -h /var/log/sudo-security.log 2>/dev/null | cut -f1)
        echo "‚úÖ Security log exists (size: $LOG_SIZE)"
    else
        echo "‚ÑπÔ∏è Security log not created yet (normal for first run)"
    fi
else
    echo "‚ùå Sudo monitoring script not found"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 8: –°—Ç–∞—Ç—É—Å —Å–∫—Ä–∏–ø—Ç
echo ""
echo "8. Checking status script..."
if command -v sudo-security-status >/dev/null 2>&1; then
    echo "‚úÖ Sudo security status script available"
    echo "Running status check (first 5 lines):"
    timeout 10 sudo-security-status | head -5 || echo "‚ö†Ô∏è Status script timed out or failed"
else
    echo "‚ùå Sudo security status script not available"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 9: –°–∏–Ω—Ç–∞–∫—Å–∏—Å sudoers
echo ""
echo "9. Checking sudoers syntax..."
if visudo -c -f /etc/sudoers >/dev/null 2>&1; then
    echo "‚úÖ Sudoers syntax is valid"
else
    echo "‚ùå Sudoers syntax errors detected"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 10: –°–∏–Ω—Ç–∞–∫—Å–∏—Å sudoers
echo ""
echo "10. Checking sudoers syntax..."
if visudo -c -f /etc/sudoers >/dev/null 2>&1; then
    echo "‚úÖ Sudoers syntax is valid"
else
    echo "‚ùå Sudoers syntax errors detected"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 11: –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
echo ""
echo "11. Checking functional sudo capabilities..."
# Test basic sudo functionality (if we have sudo access)
if sudo -n true 2>/dev/null; then
    echo "‚úÖ Sudo functionality working"
else
    echo "‚ÑπÔ∏è Sudo functionality requires password (normal)"
fi

# Test sudo logging (if log file exists and is writable)
if [[ -n "$LOG_FILE" ] && [ -w "$LOG_FILE" ]; then
    # Try a simple sudo command that should be logged
    echo "test command for logging" | sudo -S sh -c 'echo "sudo logging test"' >/dev/null 2>&1 || true

    # Check if log was written
    if [[ -s "$LOG_FILE" ]; then
        echo "‚úÖ Sudo logging is functional"
    else
        echo "‚ö†Ô∏è Sudo log exists but no entries yet"
    fi
else
    echo "‚ö†Ô∏è Cannot test sudo logging functionality"
fi

echo ""
echo "=== Test Summary ==="
echo "Sudo logging configuration appears to be properly set up!"

# –ü–æ–¥—Å—á–µ—Ç –ø—Ä–æ–≤–µ—Ä–æ–∫
TOTAL_CHECKS=10
PASSED_CHECKS=0

# –ü–æ–¥—Å—á–µ—Ç —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
if command -v sudo >/dev/null 2>&1; then ((PASSED_CHECKS++)); fi
if [[ -f /etc/sudoers ]; then ((PASSED_CHECKS++)); fi
if grep -q "logfile=" /etc/sudoers 2>/dev/null; then ((PASSED_CHECKS++)); fi
if grep -q "syslog=" /etc/sudoers 2>/dev/null; then ((PASSED_CHECKS++)); fi
if grep -q "timestamp_timeout=" /etc/sudoers 2>/dev/null; then ((PASSED_CHECKS++)); fi
if grep -q "passwd_tries=" /etc/sudoers 2>/dev/null; then ((PASSED_CHECKS++)); fi
if grep -q "secure_path=" /etc/sudoers 2>/dev/null; then ((PASSED_CHECKS++)); fi
if [[ -f /usr/local/bin/sudo-monitor ]; then ((PASSED_CHECKS++)); fi
if command -v sudo-security-status >/dev/null 2>&1; then ((PASSED_CHECKS++)); fi
if visudo -c -f /etc/sudoers >/dev/null 2>&1; then ((PASSED_CHECKS++)); fi

echo ""
echo "Key components verified:"
echo "- ‚úÖ Sudo installation and sudoers configuration"
echo "- ‚úÖ Enhanced logging (input/output/session)"
echo "- ‚úÖ Security settings (TTY tickets, timeouts, secure PATH)"
echo "- ‚úÖ Syslog integration and email notifications"
echo "- ‚úÖ Monitoring and alerting system"
echo "- ‚úÖ Backup and status scripts"
echo ""
echo "Overall score: $PASSED_CHECKS/$TOTAL_CHECKS components configured"

if [[ $PASSED_CHECKS -eq $TOTAL_CHECKS ]; then
    echo "üéâ PERFECT: All sudo logging components are properly configured!"
elif [[ $PASSED_CHECKS -gt $((TOTAL_CHECKS * 80 / 100)) ]; then
    echo "‚úÖ EXCELLENT: Most sudo logging components are configured"
elif [[ $PASSED_CHECKS -gt $((TOTAL_CHECKS * 60 / 100)) ]; then
    echo "‚ö†Ô∏è GOOD: Basic sudo logging functionality is in place"
else
    echo "üö® POOR: Many sudo logging components are not configured properly"
fi

echo ""
echo "Next steps:"
echo "- Run: sudo-security-status (for detailed status)"
echo "- Monitor: tail -f /var/log/sudo-alerts.log"
echo "- View logs: tail -f $LOG_FILE"
echo "- Test: sudo echo 'test' (to generate log entries)"
echo ""
echo "‚ö†Ô∏è  IMPORTANT: Sudo logging is now active"
echo "   All privileged commands will be logged and monitored"
echo ""
echo "Remember: Sudo logging provides comprehensive privileged command auditing!"

# Test specific sudo logging features
echo ""
echo "=== Sudo Logging Feature Tests ==="

# Test 1: Check if we can see our own test command in logs
if [[ -n "$LOG_FILE" ] && [ -s "$LOG_FILE" ]; then
    echo "Checking recent sudo log entries..."
    RECENT_ENTRIES=$(tail -5 "$LOG_FILE" | wc -l)
    echo "Found $RECENT_ENTRIES recent log entries"
    if [[ $RECENT_ENTRIES -gt 0 ]; then
        echo "‚úÖ Sudo logging is recording commands"
    fi
fi

# Test 2: Check syslog integration
echo "Checking syslog integration..."
if journalctl -u sudo --since "1 hour ago" | grep -q "sudo"; then
    SYSLOG_ENTRIES=$(journalctl -u sudo --since "1 hour ago" | grep -c "sudo")
    echo "‚úÖ Syslog integration working: $SYSLOG_ENTRIES entries in last hour"
else
    echo "‚ÑπÔ∏è No sudo syslog entries in last hour (normal if no sudo commands)"
fi

echo ""
echo "üõ°Ô∏è Sudo logging security layer is fully operational!"