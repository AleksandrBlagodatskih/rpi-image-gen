# METABEGIN
# X-Env-Layer-Name: sysctl-hardening
# X-Env-Layer-Category: security
# X-Env-Layer-Desc: System security hardening via sysctl parameters (CIS Level 2)
# X-Env-Layer-Version: 1.0.0
# X-Env-Layer-Requires: locale-base
#
# X-Env-VarPrefix: sysctl_hardening
#
# X-Env-Var-enable: y
# X-Env-Var-enable-Desc: Enable sysctl security hardening
# X-Env-Var-enable-Required: n
# X-Env-Var-enable-Valid: bool
# X-Env-Var-enable-Set: y
#
# X-Env-Var-ptrace_restrict: y
# X-Env-Var-ptrace_restrict-Desc: Restrict ptrace to prevent debugging of other processes
# X-Env-Var-ptrace_restrict-Required: n
# X-Env-Var-ptrace_restrict-Valid: bool
# X-Env-Var-ptrace_restrict-Set: lazy
#
# X-Env-Var-aslr_enable: y
# X-Env-Var-aslr_enable-Desc: Enable Address Space Layout Randomization
# X-Env-Var-aslr_enable-Required: n
# X-Env-Var-aslr_enable-Valid: bool
# X-Env-Var-aslr_enable-Set: lazy
#
# X-Env-Var-tcp_syn_cookies: y
# X-Env-Var-tcp_syn_cookies-Desc: Enable TCP SYN cookies for SYN flood protection
# X-Env-Var-tcp_syn_cookies-Required: n
# X-Env-Var-tcp_syn_cookies-Valid: bool
# X-Env-Var-tcp_syn_cookies-Set: lazy
#
# X-Env-Var-source_route_validation: y
# X-Env-Var-source_route_validation-Desc: Enable source route validation (RFC compliance)
# X-Env-Var-source_route_validation-Required: n
# X-Env-Var-source_route_validation-Valid: bool
# X-Env-Var-source_route_validation-Set: lazy
#
# X-Env-Var-core_dump_restrict: y
# X-Env-Var-core_dump_restrict-Desc: Restrict core dumps to prevent memory disclosure
# X-Env-Var-core_dump_restrict-Required: n
# X-Env-Var-core_dump_restrict-Valid: bool
# X-Env-Var-core_dump_restrict-Set: lazy
#
# X-Env-Var-icmp_redirect_ignore: y
# X-Env-Var-icmp_redirect_ignore-Desc: Ignore ICMP redirects (prevents man-in-the-middle attacks)
# X-Env-Var-icmp_redirect_ignore-Required: n
# X-Env-Var-icmp_redirect_ignore-Valid: bool
# X-Env-Var-icmp_redirect_ignore-Set: lazy
#
# X-Env-Var-source_routed_packets_ignore: y
# X-Env-Var-source_routed_packets_ignore-Desc: Ignore source routed packets
# X-Env-Var-source_routed_packets_ignore-Required: n
# X-Env-Var-source_routed_packets_ignore-Valid: bool
# X-Env-Var-source_routed_packets_ignore-Set: lazy
#
# X-Env-Var-broadcast_requests_ignore: y
# X-Env-Var-broadcast_requests_ignore-Desc: Ignore broadcast ICMP requests
# X-Env-Var-broadcast_requests_ignore-Required: n
# X-Env-Var-broadcast_requests_ignore-Valid: bool
# X-Env-Var-broadcast_requests_ignore-Set: lazy
#
# X-Env-Var-icmp_echo_ignore_broadcasts: y
# X-Env-Var-icmp_echo_ignore_broadcasts-Desc: Ignore ICMP echo requests to broadcast addresses
# X-Env-Var-icmp_echo_ignore_broadcasts-Required: n
# X-Env-Var-icmp_echo_ignore_broadcasts-Valid: bool
# X-Env-Var-icmp_echo_ignore_broadcasts-Set: lazy
#
# X-Env-Var-log_martian_packets: y
# X-Env-Var-log_martian_packets-Desc: Log packets with impossible addresses (martians)
# X-Env-Var-log_martian_packets-Required: n
# X-Env-Var-log_martian_packets-Valid: bool
# X-Env-Var-log_martian_packets-Set: lazy
# METAEND
---
mmdebstrap:
  includes:
    - procps  # Для sysctl команд
  customize-hooks:
    # Системные настройки безопасности через sysctl
    - |
      igconf isy IGconf_sysctl_hardening_enable || exit 0

      echo "Applying sysctl security hardening (CIS Level 2)..."

      # Создание файла с настройками безопасности
      SYSCTL_CONF="/etc/sysctl.d/99-security-hardening.conf"
      cat > "$1$SYSCTL_CONF" << 'EOF'
# System security hardening configuration
# Generated by rpi-image-gen sysctl-hardening layer
# Based on CIS Debian Hardening benchmarks
EOF

      # Ptrace restriction (предотвращает отладку процессов)
      if igconf isy IGconf_sysctl_hardening_ptrace_restrict; then
        echo "kernel.yama.ptrace_scope = 1" >> "$1$SYSCTL_CONF"
        echo "Set kernel.yama.ptrace_scope = 1 (restrict ptrace)"
      fi

      # Address Space Layout Randomization
      if igconf isy IGconf_sysctl_hardening_aslr_enable; then
        echo "kernel.randomize_va_space = 2" >> "$1$SYSCTL_CONF"
        echo "Set kernel.randomize_va_space = 2 (enable ASLR)"
      fi

      # TCP SYN cookies for SYN flood protection
      if igconf isy IGconf_sysctl_hardening_tcp_syn_cookies; then
        echo "net.ipv4.tcp_syncookies = 1" >> "$1$SYSCTL_CONF"
        echo "Set net.ipv4.tcp_syncookies = 1 (SYN flood protection)"
      fi

      # Source route validation (RFC compliance)
      if igconf isy IGconf_sysctl_hardening_source_route_validation; then
        echo "net.ipv4.conf.all.rp_filter = 1" >> "$1$SYSCTL_CONF"
        echo "net.ipv4.conf.default.rp_filter = 1" >> "$1$SYSCTL_CONF"
        echo "Set rp_filter = 1 (source route validation)"
      fi

      # Core dump restriction
      if igconf isy IGconf_sysctl_hardening_core_dump_restrict; then
        echo "fs.suid_dumpable = 0" >> "$1$SYSCTL_CONF"
        echo "Set fs.suid_dumpable = 0 (restrict core dumps)"
      fi

      # ICMP redirect protection
      if igconf isy IGconf_sysctl_hardening_icmp_redirect_ignore; then
        echo "net.ipv4.conf.all.accept_redirects = 0" >> "$1$SYSCTL_CONF"
        echo "net.ipv4.conf.all.secure_redirects = 0" >> "$1$SYSCTL_CONF"
        echo "net.ipv4.conf.default.accept_redirects = 0" >> "$1$SYSCTL_CONF"
        echo "net.ipv4.conf.default.secure_redirects = 0" >> "$1$SYSCTL_CONF"
        echo "net.ipv6.conf.all.accept_redirects = 0" >> "$1$SYSCTL_CONF"
        echo "net.ipv6.conf.default.accept_redirects = 0" >> "$1$SYSCTL_CONF"
        echo "Set accept_redirects = 0 (ignore ICMP redirects)"
      fi

      # Source routed packets protection
      if igconf isy IGconf_sysctl_hardening_source_routed_packets_ignore; then
        echo "net.ipv4.conf.all.accept_source_route = 0" >> "$1$SYSCTL_CONF"
        echo "net.ipv4.conf.default.accept_source_route = 0" >> "$1$SYSCTL_CONF"
        echo "net.ipv6.conf.all.accept_source_route = 0" >> "$1$SYSCTL_CONF"
        echo "net.ipv6.conf.default.accept_source_route = 0" >> "$1$SYSCTL_CONF"
        echo "Set accept_source_route = 0 (ignore source routed packets)"
      fi

      # Broadcast request protection
      if igconf isy IGconf_sysctl_hardening_broadcast_requests_ignore; then
        echo "net.ipv4.icmp_echo_ignore_broadcasts = 1" >> "$1$SYSCTL_CONF"
        echo "Set icmp_echo_ignore_broadcasts = 1"
      fi

      # ICMP echo to broadcast protection
      if igconf isy IGconf_sysctl_hardening_icmp_echo_ignore_broadcasts; then
        echo "net.ipv4.icmp_echo_ignore_broadcasts = 1" >> "$1$SYSCTL_CONF"
        echo "Set icmp_echo_ignore_broadcasts = 1"
      fi

      # Martian packet logging
      if igconf isy IGconf_sysctl_hardening_log_martian_packets; then
        echo "net.ipv4.conf.all.log_martians = 1" >> "$1$SYSCTL_CONF"
        echo "net.ipv4.conf.default.log_martians = 1" >> "$1$SYSCTL_CONF"
        echo "Set log_martians = 1 (log packets with impossible addresses)"
      fi

      # Применение настроек sysctl
      echo "Applying sysctl security settings..."
      chroot "$1" sysctl -p "$SYSCTL_CONF"

      # Проверка что настройки применены
      echo "Verifying sysctl settings..."
      chroot "$1" sysctl -a | grep -E "(yama.ptrace_scope|randomize_va_space|tcp_syncookies|rp_filter|suid_dumpable|accept_redirects|accept_source_route|icmp_echo_ignore_broadcasts|log_martians)" || echo "Some sysctl settings may not be available on this kernel"

      echo "Sysctl security hardening completed successfully"
