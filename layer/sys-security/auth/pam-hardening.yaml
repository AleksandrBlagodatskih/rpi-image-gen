# ==========================================
# PAM SECURITY HARDENING LAYER
# ==========================================
# Hardening PAM (Pluggable Authentication Modules) для усиления аутентификации
# Включает: password quality, lockout policies, session security

# БЛОК МЕТАДАННЫХ (METADATA BLOCK)
# ==========================================
# METABEGIN
# X-Env-Layer-Name: pam-hardening
# X-Env-Layer-Category: base
# X-Env-Layer-Desc: PAM hardening with strong authentication policies and security controls
# X-Env-Layer-Version: 1.0.0
# X-Env-Layer-Requires: base
# X-Env-Layer-Provides: pam-hardening

# X-Env-VarPrefix: pam

# X-Env-Var-enable_password_quality: y
# X-Env-Var-enable_password_quality-Desc: Enable password quality checking
# X-Env-Var-enable_password_quality-Required: n
# X-Env-Var-enable_password_quality-Valid: keywords:y,n
# X-Env-Var-enable_password_quality-Set: y

# X-Env-Var-password_min_length: 12
# X-Env-Var-password_min_length-Desc: Minimum password length
# X-Env-Var-password_min_length-Required: n
# X-Env-Var-password_min_length-Set: y

# X-Env-Var-enable_login_lockout: y
# X-Env-Var-enable_login_lockout-Desc: Enable login lockout after failed attempts
# X-Env-Var-enable_login_lockout-Required: n
# X-Env-Var-enable_login_lockout-Valid: keywords:y,n
# X-Env-Var-enable_login_lockout-Set: y

# X-Env-Var-lockout_attempts: 5
# X-Env-Var-lockout_attempts-Desc: Number of failed attempts before lockout
# X-Env-Var-lockout_attempts-Required: n
# X-Env-Var-lockout_attempts-Set: y

# X-Env-Var-lockout_time: 600
# X-Env-Var-lockout_time-Desc: Lockout time in seconds
# X-Env-Var-lockout_time-Required: n
# X-Env-Var-lockout_time-Set: y

# METAEND
# ==========================================

---
mmdebstrap:
  packages:
    - libpam-pwquality
    - libpam-cracklib
    - libpam-tally2
    - cracklib-runtime

  customize-hooks:
    # PAM hardening configuration
    - |
      set -eu
      mkdir -p $1/etc/security

      # Настройка качества паролей (pwquality)
      if [[ "${pam_enable_password_quality:-y}" == "y" ]]; then
        cat << EOF > $1/etc/security/pwquality.conf
      # ==========================================
      # PASSWORD QUALITY CONFIGURATION
      # ==========================================

      # Minimum password length
      minlen = ${pam_password_min_length:-12}

      # Minimum number of different character classes
      minclass = 4

      # Maximum number of consecutive characters of the same class
      maxrepeat = 3

      # Maximum number of consecutive characters from the same character class
      maxclassrepeat = 3

      # Minimum number of characters that must be different from the old password
      difok = 8

      # Check if the password contains the user's name
      usercheck = 1

      # Check if the password contains words from dictionary
      dictcheck = 1

      # Dictionary file
      dictpath = /usr/share/dict/words

      # Reject passwords that contain more than this number of character classes repeating
      badwords = 3

      # Enforce checking for rotation of one character
      enforcing = 1

      # Reject passwords that contain sequences of more than this length
      maxsequence = 3

      # Reject passwords that match the pattern of a palindrome
      palindromes = 1
      EOF
      fi

      # Настройка common-auth для lockout
      if [[ "${pam_enable_login_lockout:-y}" == "y" ]]; then
        cat << EOF > $1/etc/pam.d/common-auth
      # ==========================================
      # PAM COMMON AUTHENTICATION
      # ==========================================

      # Authentication modules
      auth    required                        pam_tally2.so deny=${pam_lockout_attempts:-5} unlock_time=${pam_lockout_time:-600} even_deny_root root_unlock_time=60
      auth    [success=2 default=ignore]      pam_unix.so nullok_secure try_first_pass
      auth    [success=1 default=ignore]      pam_sss.so use_first_pass
      auth    requisite                       pam_deny.so
      auth    required                        pam_permit.so
      auth    optional                        pam_cap.so
      EOF
      else
        cat << EOF > $1/etc/pam.d/common-auth
      # ==========================================
      # PAM COMMON AUTHENTICATION
      # ==========================================

      # Authentication modules
      auth    [success=2 default=ignore]      pam_unix.so nullok_secure try_first_pass
      auth    [success=1 default=ignore]      pam_sss.so use_first_pass
      auth    requisite                       pam_deny.so
      auth    required                        pam_permit.so
      auth    optional                        pam_cap.so
      EOF
      fi

      # Настройка common-password для качества паролей
      if [[ "${pam_enable_password_quality:-y}" == "y" ]]; then
        cat << EOF > $1/etc/pam.d/common-password
      # ==========================================
      # PAM COMMON PASSWORD
      # ==========================================

      # Password modules
      password        requisite                       pam_pwquality.so retry=3
      password        [success=2 default=ignore]      pam_unix.so obscure use_authtok try_first_pass yescrypt
      password        [success=1 default=ignore]      pam_sss.so use_authtok
      password        requisite                       pam_deny.so
      password        required                        pam_permit.so
      EOF
      else
        cat << EOF > $1/etc/pam.d/common-password
      # ==========================================
      # PAM COMMON PASSWORD
      # ==========================================

      # Password modules
      password        [success=2 default=ignore]      pam_unix.so obscure use_authtok try_first_pass yescrypt
      password        [success=1 default=ignore]      pam_sss.so use_authtok
      password        requisite                       pam_deny.so
      password        required                        pam_permit.so
      EOF
      fi

      # Настройка common-account
      cat << EOF > $1/etc/pam.d/common-account
      # ==========================================
      # PAM COMMON ACCOUNT
      # ==========================================

      # Account modules
      account [success=2 new_authtok_reqd=done default=ignore]    pam_unix.so
      account [success=1 default=ignore]      pam_sss.so
      account requisite                       pam_deny.so
      account required                        pam_permit.so
      account required                        pam_time.so
      EOF

      # Настройка common-session
      cat << EOF > $1/etc/pam.d/common-session
      # ==========================================
      # PAM COMMON SESSION
      # ==========================================

      # Session modules
      session required                        pam_limits.so
      session required                        pam_unix.so
      session optional                        pam_sss.so
      session optional                        pam_systemd.so
      session optional                        pam_umask.so
      session optional                        pam_env.so conffile=/etc/default/locale
      EOF

      # Настройка common-session-noninteractive
      cat << EOF > $1/etc/pam.d/common-session-noninteractive
      # ==========================================
      # PAM COMMON SESSION NON-INTERACTIVE
      # ==========================================

      # Session modules for non-interactive sessions
      session [default=1]                     pam_permit.so
      session requisite                       pam_deny.so
      session required                        pam_permit.so
      session optional                        pam_umask.so
      session required                        pam_limits.so
      EOF

      # Настройка faillock для дополнительной защиты
      if [[ "${pam_enable_login_lockout:-y}" == "y" ]]; then
        cat << EOF > $1/etc/security/faillock.conf
      # ==========================================
      # FAILLOCK CONFIGURATION
      # ==========================================

      # Directory where the user files with the failure records are kept
      dir = /var/run/faillock

      # Number of failed attempts before the account is locked
      deny = ${pam_lockout_attempts:-5}

      # Time in seconds after which the failed attempts are forgotten
      unlock_time = ${pam_lockout_time:-600}

      # Root account can become unavailable
      even_deny_root

      # Root account gets locked too
      root_unlock_time = 60

      # If the user is already locked, do not reset the counter
      fail_interval = 900
      EOF
      fi

      log_success "PAM hardening настроен"
