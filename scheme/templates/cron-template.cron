# ============================================================================
# ШАБЛОН CRON ЗАДАНИЙ ДЛЯ RPI-IMAGE-GEN
# ============================================================================

# [CRON_DESCRIPTION]

# Общее описание:
# - [ОПИСАНИЕ 1]
# - [ОПИСАНИЕ 2]
# - [ОПИСАНИЕ 3]

# Расписание выполнения:
# - [РАСПИСАНИЕ 1]
# - [РАСПИСАНИЕ 2]

# Установка:
# crontab [FILENAME]

# ============================================================================
# ФОРМАТ CRON ЗАДАНИЙ
# ============================================================================

# Формат строки cron:
# [МИНУТА] [ЧАС] [ДЕНЬ_МЕСЯЦА] [МЕСЯЦ] [ДЕНЬ_НЕДЕЛИ] [КОМАНДА]

# Диапазоны значений:
# МИНУТА: 0-59
# ЧАС: 0-23
# ДЕНЬ_МЕСЯЦА: 1-31
# МЕСЯЦ: 1-12
# ДЕНЬ_НЕДЕЛИ: 0-7 (0 и 7 = воскресенье)

# ============================================================================
# СПЕЦИАЛЬНЫЕ ЗНАЧЕНИЯ
# ============================================================================

# Специальные строки:
@reboot    [COMMAND]    # Выполнить при загрузке системы
@yearly    [COMMAND]    # Выполнить ежегодно (0 0 1 1 *)
@annually  [COMMAND]    # Синоним @yearly
@monthly   [COMMAND]    # Выполнить ежемесячно (0 0 1 * *)
@weekly    [COMMAND]    # Выполнить еженедельно (0 0 * * 0)
@daily     [COMMAND]    # Выполнить ежедневно (0 0 * * *)
@midnight  [COMMAND]    # Синоним @daily
@hourly    [COMMAND]    # Выполнить ежечасно (0 * * * *)

# ============================================================================
# ПРИМЕРЫ ЗАДАНИЙ
# ============================================================================

# Пример 1: Простое задание
[MINUTE] [HOUR] [DAY] [MONTH] [WEEKDAY] [COMMAND]

# Пример 2: Задание с интервалом
*/15 * * * * [COMMAND]                    # Каждые 15 минут
0 */2 * * * [COMMAND]                     # Каждые 2 часа
0 0 * * 1 [COMMAND]                       # Каждый понедельник в полночь

# Пример 3: Задание с диапазоном
0 9-17 * * 1-5 [COMMAND]                  # По будням с 9 до 17 часов
0 0 1,15 * * [COMMAND]                    # 1 и 15 числа каждого месяца

# Пример 4: Задание с несколькими значениями
0 0 * * 1,3,5 [COMMAND]                   # По понедельникам, средам и пятницам
30 8,12,16 * * * [COMMAND]                # В 8:30, 12:30 и 16:30 ежедневно

# ============================================================================
# ЗАДАНИЯ ДЛЯ СИСТЕМНОГО АДМИНИСТРИРОВАНИЯ
# ============================================================================

# Обновление системного времени
0 * * * * /usr/sbin/ntpdate -u pool.ntp.org

# Ротация логов
0 2 * * * /usr/sbin/logrotate /etc/logrotate.conf

# Очистка временных файлов
0 3 * * * find /tmp -type f -mtime +7 -delete

# Мониторинг дискового пространства
0 * * * * df -h | grep -v "100%" > /dev/null || echo "Low disk space" | mail -s "Disk Warning" admin@example.com

# Резервное копирование
0 1 * * * /usr/local/bin/backup-script.sh

# ============================================================================
# ЗАДАНИЯ ДЛЯ RASPBERRY PI
# ============================================================================

# Обновление прошивки GPU
0 4 * * 1 /usr/bin/rpi-update

# Проверка температуры
*/5 * * * * /usr/bin/vcgencmd measure_temp >> /var/log/temperature.log

# Мониторинг использования памяти
0 * * * * free -m >> /var/log/memory-usage.log

# Проверка состояния GPIO
*/10 * * * * /usr/local/bin/gpio-status.sh

# Обновление пакетов (ночью)
0 2 * * * apt-get update && apt-get -y upgrade

# Очистка кеша пакетов
0 3 * * 0 apt-get -y autoclean && apt-get -y autoremove

# ============================================================================
# ЗАДАНИЯ С УСЛОВИЯМИ
# ============================================================================

# Выполнение только если устройство доступно
* * * * * [ -b /dev/sda1 ] && mount /dev/sda1 /mnt/backup

# Выполнение только если сеть доступна
* * * * * ping -c 1 8.8.8.8 > /dev/null 2>&1 && /usr/local/bin/network-sync.sh

# Выполнение только в определенное время
0 9 * * 1-5 [ "$(date +\%u)" -le 5 ] && /usr/local/bin/weekday-task.sh

# ============================================================================
# ЗАДАНИЯ С ВЫВОДОМ И ЛОГИРОВАНИЕМ
# ============================================================================

# Логирование в файл
0 * * * * /usr/local/bin/system-check.sh >> /var/log/system-check.log 2>&1

# Отправка уведомлений
0 0 * * * /usr/local/bin/daily-report.sh | mail -s "Daily Report" admin@example.com

# Сохранение вывода с временной меткой
*/30 * * * * (echo "$(date): System status" && uptime && df -h) >> /var/log/system-status.log

# ============================================================================
# ЗАДАНИЯ С ЗАДЕРЖКАМИ И ОГРАНИЧЕНИЯМИ
# ============================================================================

# Случайная задержка для распределения нагрузки
@reboot sleep $((RANDOM \% 60)) && /usr/local/bin/startup-script.sh

# Ограничение по нагрузке системы
* * * * * [ $(uptime | awk '{print $NF}' | cut -d. -f1) -lt 2 ] && /usr/local/bin/light-task.sh

# Выполнение только при низкой нагрузке
*/5 * * * * [ $(cat /proc/loadavg | cut -d' ' -f1) \< 1.0 ] && /usr/local/bin/backup-incremental.sh

# ============================================================================
# ПЕРЕМЕННЫЕ ОКРУЖЕНИЯ В CRON
# ============================================================================

# Установка переменных окружения
MAILTO=admin@example.com
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
SHELL=/bin/bash
HOME=/root

# Задание с пользовательскими переменными
* * * * * BACKUP_PATH=/mnt/backup /usr/local/bin/backup.sh

# ============================================================================
# ОТЛАДКА CRON ЗАДАНИЙ
# ============================================================================

# Включение логирования cron
# В /etc/rsyslog.conf добавить:
# cron.* /var/log/cron.log

# Проверка синтаксиса crontab
crontab -l | crontab -T -

# Просмотр логов cron
tail -f /var/log/cron.log

# Тестирование конкретного задания
crontab -l | grep "[PATTERN]" | sh

# ============================================================================
# ПРИМЕЧАНИЯ РАЗРАБОТЧИКА
# ============================================================================

# 1. Все пути должны быть абсолютными
# 2. Используйте полные пути к командам
# 3. Перенаправляйте вывод для избежания спама
# 4. Тестируйте задания перед добавлением
# 5. Используйте lock-файлы для предотвращения дублирования
# 6. Учитывайте часовые пояса при планировании
# 7. Мониторьте использование ресурсов
# 8. Документируйте все задания и их назначение
# 9. Используйте переменные окружения для гибкости
# 10. Регулярно проверяйте логи выполнения

# ============================================================================
# ШАБЛОН СИСТЕМНЫХ ЗАДАНИЙ
# ============================================================================

# MAILTO - адрес для отправки результатов
MAILTO=admin@example.com

# Обновление пакетов
0 2 * * * apt-get update && apt-get -y --force-yes upgrade

# Очистка кеша пакетов
0 3 * * 0 apt-get -y autoclean && apt-get -y autoremove

# Ротация логов
0 4 * * * /usr/sbin/logrotate /etc/logrotate.conf

# Резервное копирование
0 1 * * * /usr/local/bin/backup-script.sh

# Мониторинг системы
*/5 * * * * /usr/local/bin/system-monitor.sh

# Очистка временных файлов
0 5 * * * /usr/local/bin/cleanup-temp.sh

# Проверка доступности сервисов
*/10 * * * * /usr/local/bin/service-check.sh

# Обновление базы данных locate
0 6 * * 0 updatedb
