#!/bin/bash
# Auditd Status Script
# Provides comprehensive status information about auditd

echo "=== Auditd Security Monitoring Status ==="
echo

# Check if auditd service is running
echo "1. Auditd Service:"
if systemctl is-active --quiet auditd 2>/dev/null; then
    echo "   ‚úÖ auditd service is active"
else
    echo "   ‚ùå auditd service is not active"
fi

if systemctl is-enabled auditd >/dev/null 2>&1 2>/dev/null; then
    echo "   ‚úÖ auditd enabled on boot"
else
    echo "   ‚ùå auditd not enabled on boot"
fi

# Check kernel audit support
echo
echo "2. Kernel Audit Support:"
audit_enabled=$(cat /proc/sys/kernel/audit 2>/dev/null || echo "unknown")
if [ "$audit_enabled" = "1" ]; then
    echo "   ‚úÖ Kernel audit enabled"
else
    echo "   ‚ö†Ô∏è  Kernel audit status: $audit_enabled"
fi

# Check boot parameter
if grep -q "audit=1" /proc/cmdline 2>/dev/null; then
    echo "   ‚úÖ Boot parameter audit=1 present"
else
    echo "   ‚ö†Ô∏è  Boot parameter audit=1 missing (limited process coverage)"
fi

# Check auditd utilities
echo
echo "3. Auditd Utilities:"
for util in auditctl aureport ausearch; do
    if command -v "$util" >/dev/null 2>&1; then
        echo "   ‚úÖ $util available"
    else
        echo "   ‚ùå $util not available"
    fi
done

# Check configuration files
echo
echo "4. Configuration Files:"
config_files=(
    "/etc/audit/auditd.conf"
    "/etc/audit/rules.d/"
)

for config in "${config_files[@]}"; do
    if [ -e "$config" ]; then
        echo "   ‚úÖ $config exists"
    else
        echo "   ‚ùå $config not found"
    fi
done

# Show audit statistics
echo
echo "5. Audit Statistics:"
if command -v auditctl >/dev/null 2>&1; then
    echo "   üìä Current audit buffer status:"
    auditctl -s 2>/dev/null | sed 's/^/      /' || echo "      Unable to get audit statistics"
else
    echo "   auditctl not available"
fi

# Check loaded rules
echo
echo "6. Loaded Audit Rules:"
if command -v auditctl >/dev/null 2>&1; then
    rule_count=$(auditctl -l 2>/dev/null | wc -l)
    echo "   üìã Total loaded rules: $rule_count"

    if [ "$rule_count" -gt 0 ]; then
        echo "   üìã Sample rules:"
        auditctl -l 2>/dev/null | head -3 | sed 's/^/      /'
    fi
else
    echo "   auditctl not available"
fi

# Check log files
echo
echo "7. Audit Logs:"
log_files=(
    "/var/log/audit/audit.log"
    "/var/log/audit/audit.log.1"
)

for log in "${log_files[@]}"; do
    if [ -f "$log" ]; then
        size=$(du -h "$log" 2>/dev/null | cut -f1)
        echo "   ‚úÖ $log exists (size: $size)"
    else
        echo "   ‚ö†Ô∏è  $log not found"
    fi
done

# Recent events summary
echo
echo "8. Recent Audit Events:"
if [ -f /var/log/audit/audit.log ]; then
    total_events=$(wc -l < /var/log/audit/audit.log 2>/dev/null || echo "0")
    echo "   üìä Total events in current log: $total_events"

    # Show event types summary
    echo "   üìà Event types (last 1000 events):"
    tail -1000 /var/log/audit/audit.log 2>/dev/null | \
        grep "type=" | \
        sed 's/.*type=\([^ ]*\).*/\1/' | \
        sort | \
        uniq -c | \
        sort -nr | \
        head -5 | \
        sed 's/^/      /' || echo "      Unable to analyze events"
else
    echo "   üì≠ No audit log available"
fi

echo
echo "=== Recommendations ==="
echo "‚Ä¢ View detailed reports: aureport --summary"
echo "‚Ä¢ Search specific events: ausearch -m AVC"
echo "‚Ä¢ Monitor in real-time: tail -f /var/log/audit/audit.log"
echo "‚Ä¢ Check rule syntax: auditctl -l"
