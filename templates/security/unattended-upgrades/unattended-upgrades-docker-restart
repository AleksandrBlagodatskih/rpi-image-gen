#!/bin/bash
# Unattended Upgrades Docker Restart Script
# This script safely restarts Docker service after upgrades

set -euo pipefail

LOG_FILE="/var/log/unattended-upgrades/docker-restart.log"
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

echo "[$TIMESTAMP] Starting Docker service restart after upgrades" >> "$LOG_FILE"

# Check if Docker service exists
if ! systemctl list-units --all | grep -q docker; then
    echo "[$TIMESTAMP] Docker service not found, skipping restart" >> "$LOG_FILE"
    exit 0
fi

# Get list of running containers before restart
running_containers=$(docker ps --format "table {{.Names}}|{{.Status}}" 2>/dev/null || echo "")
if [ -n "$running_containers" ]; then
    echo "[$TIMESTAMP] Running containers before restart:" >> "$LOG_FILE"
    echo "$running_containers" >> "$LOG_FILE"
fi

# Stop all running containers gracefully
echo "[$TIMESTAMP] Stopping running containers..." >> "$LOG_FILE"
if docker stop $(docker ps -q) 2>/dev/null; then
    echo "[$TIMESTAMP] Containers stopped successfully" >> "$LOG_FILE"
else
    echo "[$TIMESTAMP] No running containers or failed to stop" >> "$LOG_FILE"
fi

# Restart Docker service
echo "[$TIMESTAMP] Restarting Docker service..." >> "$LOG_FILE"
if systemctl restart docker; then
    echo "[$TIMESTAMP] Docker service restarted successfully" >> "$LOG_FILE"

    # Wait for Docker to be ready
    echo "[$TIMESTAMP] Waiting for Docker to be ready..." >> "$LOG_FILE"
    timeout=30
    while [ $timeout -gt 0 ]; do
        if docker info >/dev/null 2>&1; then
            echo "[$TIMESTAMP] Docker is ready" >> "$LOG_FILE"
            break
        fi
        sleep 1
        timeout=$((timeout - 1))
    done

    if [ $timeout -eq 0 ]; then
        echo "[$TIMESTAMP] ERROR: Docker failed to become ready after restart" >> "$LOG_FILE"
        exit 1
    fi

    # Restart previously running containers
    if [ -n "$running_containers" ]; then
        echo "[$TIMESTAMP] Restarting previously running containers..." >> "$LOG_FILE"
        # Extract container names from the status
        container_names=$(echo "$running_containers" | tail -n +2 | cut -d'|' -f1 | tr -d ' ')

        for container in $container_names; do
            if [ -n "$container" ] && [ "$container" != "NAMES" ]; then
                echo "[$TIMESTAMP] Starting container: $container" >> "$LOG_FILE"
                if docker start "$container" 2>/dev/null; then
                    echo "[$TIMESTAMP] Successfully started: $container" >> "$LOG_FILE"
                else
                    echo "[$TIMESTAMP] Failed to start: $container" >> "$LOG_FILE"
                fi
            fi
        done
    fi
else
    echo "[$TIMESTAMP] ERROR: Failed to restart Docker service" >> "$LOG_FILE"
    exit 1
fi

echo "[$TIMESTAMP] Docker restart completed successfully" >> "$LOG_FILE"
