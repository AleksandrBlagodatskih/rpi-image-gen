#!/bin/bash
# Unattended Upgrades SSH Restart Script
# This script safely restarts SSH service after upgrades

set -euo pipefail

LOG_FILE="/var/log/unattended-upgrades/ssh-restart.log"
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

echo "[$TIMESTAMP] Starting SSH service restart after upgrades" >> "$LOG_FILE"

# Check if SSH service exists
if ! systemctl list-units --all | grep -q ssh; then
    echo "[$TIMESTAMP] SSH service not found, skipping restart" >> "$LOG_FILE"
    exit 0
fi

# Wait a bit to ensure any active connections can finish
echo "[$TIMESTAMP] Waiting 30 seconds for active SSH connections to finish..." >> "$LOG_FILE"
sleep 30

# Check for active SSH sessions
active_sessions=$(who | grep -c "pts/" || echo "0")
if [ "$active_sessions" -gt 0 ]; then
    echo "[$TIMESTAMP] Warning: $active_sessions active SSH sessions detected" >> "$LOG_FILE"
    # Still proceed but log the warning
fi

# Restart SSH service
echo "[$TIMESTAMP] Restarting SSH service..." >> "$LOG_FILE"
if systemctl restart ssh; then
    echo "[$TIMESTAMP] SSH service restarted successfully" >> "$LOG_FILE"

    # Verify SSH is running
    sleep 2
    if systemctl is-active --quiet ssh; then
        echo "[$TIMESTAMP] SSH service is running after restart" >> "$LOG_FILE"
    else
        echo "[$TIMESTAMP] ERROR: SSH service failed to start after restart" >> "$LOG_FILE"
        exit 1
    fi
else
    echo "[$TIMESTAMP] ERROR: Failed to restart SSH service" >> "$LOG_FILE"
    exit 1
fi

echo "[$TIMESTAMP] SSH restart completed successfully" >> "$LOG_FILE"
